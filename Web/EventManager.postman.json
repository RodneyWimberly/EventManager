{
	"info": {
		"_postman_id": "8d65a60d-d54d-4577-afac-5c36ba79bba9",
		"name": "Event Manager API",
		"description": "EventManager WebAPI Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "me",
									"item": [
										{
											"name": "preferences",
											"item": [
												{
													"name": "Account User Preferences",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/me/preferences",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me",
																"preferences"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Account/users/me/preferences",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Account",
																		"users",
																		"me",
																		"preferences"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"sint\""
														}
													]
												},
												{
													"name": "Account User Preferences2",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<string>\"",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me/preferences",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me",
																"preferences"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "\"<string>\""
																},
																"url": {
																	"raw": "{{apiUrl}}/Account/users/me/preferences",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Account",
																		"users",
																		"me",
																		"preferences"
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Account Get Current User",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/me",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Account Update Current User",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users/me",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Account Update Current User2",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users/me",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/me",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Account Get User By Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Delete User",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update User",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update User2",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/users/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Get Users All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/users",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Get User By User Name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/users/username/:userName",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"users",
												"username",
												":userName"
											],
											"variable": [
												{
													"key": "userName",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/username/:userName",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/username/:userName",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/username/:userName",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Account Get Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/users/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"users",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Unblock User",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/users/unblock/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"users",
												"unblock",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/unblock/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"unblock",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/users/unblock/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users",
														"unblock",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Account Register",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Account/users",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Account/users",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "roles",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Account Get Role By Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Delete Role",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update Role",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Account/roles/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Account/roles/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Get Roles All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/roles",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Get Role By Name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/roles/name/:name",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"roles",
												"name",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/name/:name",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/name/:name",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/name/:name",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Account Get Roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/roles/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"roles",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Account/roles/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Create Role",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Account/roles",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Account/roles",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Account/roles",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Account",
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account Get All Permissions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Account/permissions",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Account",
										"permissions"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Account/permissions",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Account",
												"permissions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"do cupidatat\",\n  \"value\": \"Excepteur\",\n  \"groupName\": \"amet\",\n  \"description\": \"dolore Lorem exercitation laborum magna\"\n },\n {\n  \"name\": \"eu ullamco ut mollit\",\n  \"value\": \"quis\",\n  \"groupName\": \"dolore fugiat\",\n  \"description\": \"nulla ea ut\"\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Event",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "{include Property Paths}",
									"item": [
										{
											"name": "Event Get Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Event Put Event",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Event Patch Event",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{apiUrl}}/Event/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Delete Event",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location",
							"item": [
								{
									"name": "Schedule/{event Schedule Id}",
									"item": [
										{
											"name": "Event Get All Event Locations By Event Schedule",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Location/Schedule/:eventScheduleId/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location",
														"Schedule",
														":eventScheduleId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventScheduleId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Location/Schedule/:eventScheduleId/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																"Schedule",
																":eventScheduleId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Locations By Event Schedule Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Location/Schedule/:eventScheduleId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location",
														"Schedule",
														":eventScheduleId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventScheduleId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Location/Schedule/:eventScheduleId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																"Schedule",
																":eventScheduleId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Location",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Location",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Patch Event Location",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Location",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Location/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Location/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Location/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Location",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Locations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Location/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Location",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Location/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Locations Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Location/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Location",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Location/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Event/Location",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Location"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Location",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Location",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Location"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{event Id}",
							"item": [
								{
									"name": "Location",
									"item": [
										{
											"name": "Event Get All Event Locations By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Location/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Location",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Location/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Location",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Locations By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Location/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Location",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Location/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Location",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Schedule",
									"item": [
										{
											"name": "Event Get All Event Schedules By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Schedule/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Schedule",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Schedule/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Schedule",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Schedules By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Schedule",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Schedule",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Occurrence",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Occurrence/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Occurrence",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Occurrence/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Occurrence",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Occurrence",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Occurrence",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service",
									"item": [
										{
											"name": "Event Get All Event Services By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Service/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Service",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Service/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Service",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Services By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/:eventId/Service/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														":eventId",
														"Service",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/:eventId/Service/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																":eventId",
																"Service",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Schedule",
							"item": [
								{
									"name": "Location/{event Location Id}",
									"item": [
										{
											"name": "Event Get All Event Schedules By Event Location",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule/Location/:eventLocationId/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule",
														"Location",
														":eventLocationId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventLocationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/Location/:eventLocationId/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																"Location",
																":eventLocationId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Schedules By Event Location Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule/Location/:eventLocationId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule",
														"Location",
														":eventLocationId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventLocationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/Location/:eventLocationId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																"Location",
																":eventLocationId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Schedule",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Schedule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Patch Event Schedule",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Schedule",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Schedule/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Schedule",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Schedules",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Schedule/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Schedule",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Schedules Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Schedule",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Schedule",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Event/Schedule",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Schedule"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Schedule",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Schedule"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Occurrence",
							"item": [
								{
									"name": "Location/{event Locationid}",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event Location",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/Location/:eventLocationid/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														"Location",
														":eventLocationid",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventLocationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/Location/:eventLocationid/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																"Location",
																":eventLocationid",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationid"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Location Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/Location/:eventLocationid/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														"Location",
														":eventLocationid",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventLocationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/Location/:eventLocationid/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																"Location",
																":eventLocationid",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationid"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Schedule/{event Scheduleid}",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event Schedule",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/Schedule/:eventScheduleid/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														"Schedule",
														":eventScheduleid",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventScheduleId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/Schedule/:eventScheduleid/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																"Schedule",
																":eventScheduleid",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleid"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Schedule Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/Schedule/:eventScheduleid/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														"Schedule",
														":eventScheduleid",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "eventScheduleid",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/Schedule/:eventScheduleid/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																"Schedule",
																":eventScheduleid",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleid"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Occurrence",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Occurrence",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Patch Event Occurrence",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Occurrence",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Occurrence/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Occurrence",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Occurrences",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Occurrence/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Occurrence",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Occurrences Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Occurrence",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Occurrence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Event/Occurrence",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Occurrence"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Occurrence",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Occurrence"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service",
							"item": [
								{
									"name": "Service/{service Id}",
									"item": [
										{
											"name": "Event Get All Event Services By Service",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Service/Service/:serviceId/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service",
														"Service",
														":serviceId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "serviceId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Service/Service/:serviceId/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																"Service",
																":serviceId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "serviceId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Services By Service Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Service/Service/:serviceId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service",
														"Service",
														":serviceId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "serviceId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "includePropertyPaths",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Service/Service/:serviceId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																"Service",
																":serviceId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "serviceId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Service",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Service",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Patch Event Service",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "includePropertyPaths",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{apiUrl}}/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{apiUrl}}"
																	],
																	"path": [
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Service",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Service/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Service/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{apiUrl}}/Event/Service/:id",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"Event",
																"Service",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Services",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Service/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Service",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Service/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Services Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/Service/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Service",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "includePropertyPaths",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Event/Service/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Service",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Event/Service",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												"Service"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Service",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Event/Service",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Event",
														"Service"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Event Get All Events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Event/:includePropertyPaths",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Event",
										":includePropertyPaths"
									],
									"variable": [
										{
											"key": "includePropertyPaths",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Event Get All Events Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Event/:pageNumber/:pageSize/:includePropertyPaths",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Event",
										":pageNumber",
										":pageSize",
										":includePropertyPaths"
									],
									"variable": [
										{
											"key": "pageNumber",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "includePropertyPaths",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Event/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												},
												{
													"key": "includePropertyPaths"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Event Post Event",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/Event",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Event"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/Event",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/Event",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Event"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Extended Log",
					"item": [
						{
							"name": "level/{level}",
							"item": [
								{
									"name": "Extended Log Get By Level",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/level/:level",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												"level",
												":level"
											],
											"variable": [
												{
													"key": "level",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/level/:level",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/level/:level",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Get By Level Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/level/:level/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												"level",
												":level",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "level",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Extended Log Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Put",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Extended Log Patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLog/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Extended Log Get All",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLog",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Delete All",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLog",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Extended Log Get All Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLog/:pageNumber/:pageSize",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLog",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"key": "pageNumber",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/ExtendedLog",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Extended Log Controller New",
					"item": [
						{
							"name": "level/{level}",
							"item": [
								{
									"name": "Extended Log Controller New Get Extended Logs By Level",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												"level",
												":level"
											],
											"variable": [
												{
													"key": "level",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Extended Log Controller New Get Extended Logs By Level Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												"level",
												":level",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "level",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Extended Log Controller New Get Extended Log",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Extended Log Controller New Delete Extended Log",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Extended Log Controller New Put Extended Log",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Extended Log Controller New Patch Extended Log",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/ExtendedLogControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Extended Log Controller New Get All Extended Logs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLogControllerNew",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Controller New Delete All Extended Logs",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLogControllerNew",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Extended Log Controller New Get All Extended Logs Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/ExtendedLogControllerNew/:pageNumber/:pageSize",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLogControllerNew",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"key": "pageNumber",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Controller New Post Extended Log",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/ExtendedLogControllerNew",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/ExtendedLogControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Notification Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Notification/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Notification Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Notification/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Put",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Notification/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/Notification/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/Notification/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Notification Get All",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Notification",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Notification"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Notification",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Get All Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Notification/:pageNumber/:pageSize",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Notification",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"key": "pageNumber",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/Notification/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/Notification",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Notification"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/Notification",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/Notification",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"Notification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Notification Controller New",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Notification Controller New Get Notification",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Notification Controller New Delete Notification",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Notification Controller New Put Notification",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Notification Controller New Patch Notification",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew/:id",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{apiUrl}}/NotificationControllerNew/:id",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Notification Controller New Get All Notifications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/NotificationControllerNew",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"NotificationControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Controller New Get All Notifications Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/NotificationControllerNew/:pageNumber/:pageSize",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"NotificationControllerNew",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"key": "pageNumber",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew/:pageNumber/:pageSize",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Controller New Post Notification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/NotificationControllerNew",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"NotificationControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{apiUrl}}/NotificationControllerNew",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"NotificationControllerNew"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Info",
					"item": [
						{
							"name": "ApiInfo",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/Info",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"Info"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiUrl}}/ExtendedLog",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"ExtendedLog"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{AuthToken}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a165e3b0-ecac-4394-a173-ac50e07ba2d6",
				"type": "text/javascript",
				"exec": [
					"var appPrefix = pm.collectionVariables.get(\"AppPrefix\");",
					"var apiVersion = GetEnvironment(\"ApiVersion\");",
					"var baseUrl = GetEnvironment(\"Url\");",
					"var apiUrl = baseUrl;",
					"if(apiVersion){",
					"     apiUrl = baseUrl + \"/api/v\" + apiVersion; ",
					"}",
					"else{",
					"    apiUrl = baseUrl + \"/api\"; ",
					"}",
					"var isNewUrl = apiUrl != pm.collectionVariables.get(\"apiUrl\");",
					"if(isNewUrl){",
					"    pm.collectionVariables.set(\"apiUrl\", apiUrl);",
					"}",
					"if(isNewUrl || HasTokenExpired()) {",
					"    pm.sendRequest({",
					"            url: baseUrl + \"/.well-known/openid-configuration\", ",
					"            method: 'GET',",
					"            header: {",
					"            'Content-Type': 'application/x-www-form-urlencoded'",
					"            }",
					"        }, ",
					"        function (err, res) {",
					"            pm.sendRequest({",
					"                    url: res.json().token_endpoint, ",
					"                    method: 'POST',",
					"                    header: {",
					"                        'Content-Type': 'application/x-www-form-urlencoded'",
					"                    },",
					"                    body: GetTokenRequest()",
					"                }, ",
					"                function (err, res) {",
					"                    var json = res.json();",
					"                    if(json.access_token && json.expires_in)",
					"                    {",
					"                        tokenExpiration = GetTokenExpiration(json.expires_in);",
					"                        pm.collectionVariables.set(\"AuthExpiration\", tokenExpiration);",
					"                        pm.collectionVariables.set(\"AuthToken\", json.access_token);",
					"                    }",
					"                }",
					"            );",
					"        }",
					"    );",
					"}",
					"",
					"function GetEnvironment(key){",
					"    return pm.environment.get(appPrefix + key);",
					"}",
					"",
					"function GetTokenRequest(){",
					"    return \"grant_type=password&username=\" + GetEnvironment(\"User\") + \"&password=\" + GetEnvironment(\"Password\") + \"&scope=openid email phone profile offline_access roles 3f9d64e1-675f-43d3-be3b-fe06c01d14d3&client_id=3e165187-600d-4666-a483-51badf3040b3&client_secret=not_used\";",
					"}",
					"",
					"function GetTokenExpiration(expiresInSeconds){",
					"     var date = new Date();",
					"     return new Date(date.setTime(date.getTime() + expiresInSeconds * 1000));",
					"}",
					"",
					"function HasTokenExpired(){",
					"    var hasExpired = true;",
					"    var tokenExpiration = new Date(pm.collectionVariables.get(\"AuthExpiration\"));",
					"    if(tokenExpiration){",
					"        hasExpired = new Date() > tokenExpiration;",
					"    } ",
					"    return hasExpired;",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "71c18dd1-b9f2-4252-a8a6-b32c89944177",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1ffad71e-9e9d-4955-a266-9e82bdbf36ad",
			"key": "apiUrl",
			"value": "/"
		},
		{
			"id": "87ff1ea0-a00a-43ef-8395-25b38c8e8e61",
			"key": "AppPrefix",
			"value": "EventManager_"
		},
		{
			"id": "bd9fd47c-fcc2-42a0-8082-c60cf0a97193",
			"key": "AuthToken",
			"value": ""
		},
		{
			"id": "b8d4931c-60b9-498d-918a-12846426b8e9",
			"key": "AuthExpiration",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}