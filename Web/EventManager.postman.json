{
	"info": {
		"_postman_id": "c431b866-fdd2-4ab5-84a7-63cae8d972f2",
		"name": "EventManager API",
		"description": "EventManager WebAPI Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "me",
									"item": [
										{
											"name": "preferences",
											"item": [
												{
													"name": "Account User Preferences",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me/preferences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me",
																"preferences"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Account/users/me/preferences",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Account",
																		"users",
																		"me",
																		"preferences"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"sint\""
														}
													]
												},
												{
													"name": "Account User Preferences2",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<string>\"",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me/preferences",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me",
																"preferences"
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "\"<string>\""
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Account/users/me/preferences",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Account",
																		"users",
																		"me",
																		"preferences"
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Account Get Current User",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Account Update Current User",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update Current User2",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"me"
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																"me"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Account Get User By Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"id": "1fb2c1d5-ffa8-4693-85a9-e1a8c2336568",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Delete User",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"id": "76efea2d-616b-4f6b-a57d-a3a432f13fbd",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update User",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"id": "750f7de8-1353-40f9-a22d-7055ddc11a0d",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update User2",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														":id"
													],
													"variable": [
														{
															"id": "7a28c2d8-6659-433d-9053-cb693fe1548d",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Get Users All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Get User By User Name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/users/username/:userName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"users",
												"username",
												":userName"
											],
											"variable": [
												{
													"id": "070d98a6-5dbd-4ddc-bb40-00eb1b98156c",
													"key": "userName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/username/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/username/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/username/:userName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"username",
														":userName"
													],
													"variable": [
														{
															"key": "userName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Account Get Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/users/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"users",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"id": "89ea9389-9a3a-465c-a1ef-1c8c3a1880d3",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "8ec1172f-1aeb-47e0-b7aa-0a1e1b70c8c7",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Unblock User",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/users/unblock/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"users",
												"unblock",
												":id"
											],
											"variable": [
												{
													"id": "e338d863-0b8a-4e6d-86b5-6ff8a3750747",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/unblock/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"unblock",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/users/unblock/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users",
														"unblock",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Account Register",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Account/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"users"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "roles",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Account Get Role By Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"id": "2d5cc4c6-6483-4cc1-953c-11fb413da4e6",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Delete Role",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"id": "39274ccc-4505-43ae-bbc0-b323bb72002a",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Account Update Role",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														":id"
													],
													"variable": [
														{
															"id": "5c95e5eb-99f1-4974-9249-e293e8dc12bb",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Account/roles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Account",
																"roles",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Get Roles All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Get Role By Name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/roles/name/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"roles",
												"name",
												":name"
											],
											"variable": [
												{
													"id": "21d03303-03f4-4d18-9fcd-f07128cba4f4",
													"key": "name",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Account Get Roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/roles/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"roles",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"id": "6e38128a-9a9e-4f82-b017-c773a5e50b34",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "c31dc162-6665-4198-869a-f2e4a25c17c5",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Account Create Role",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Account/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Account/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Account",
														"roles"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account Get All Permissions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Account/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Account",
										"permissions"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Account/permissions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Account",
												"permissions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": \"do cupidatat\",\n  \"value\": \"Excepteur\",\n  \"groupName\": \"amet\",\n  \"description\": \"dolore Lorem exercitation laborum magna\"\n },\n {\n  \"name\": \"eu ullamco ut mollit\",\n  \"value\": \"quis\",\n  \"groupName\": \"dolore fugiat\",\n  \"description\": \"nulla ea ut\"\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Event",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "{include Property Paths}",
									"item": [
										{
											"name": "Event Get Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "c755c587-b0e4-4be3-b604-e40618905287",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "54925da6-1342-486d-a97f-a0d41afc6723",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Event Put Event",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "67067560-8bd8-4856-a545-f36f50cce132",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "32b95273-9595-4526-a27a-69189e9e8447",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										},
										{
											"name": "Event Patch Event",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":id",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "6c5e7218-498a-463d-b1b5-82ece1cf368f",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "2ac70f67-d241-4014-9345-6af6b3c2252a",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Delete Event",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												":id"
											],
											"variable": [
												{
													"id": "d9940398-b5be-427c-a1a1-79f8a9c6312a",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location",
							"item": [
								{
									"name": "Schedule/{event Schedule Id}",
									"item": [
										{
											"name": "Event Get All Event Locations By Event Schedule",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location/Schedule/:eventScheduleId/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location",
														"Schedule",
														":eventScheduleId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "58621419-6c80-4ef6-a861-99cad7ad1f1c",
															"key": "eventScheduleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "c631d3e9-ccdc-4876-b063-19db67ae2900",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/Schedule/:eventScheduleId/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																"Schedule",
																":eventScheduleId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Locations By Event Schedule Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location/Schedule/:eventScheduleId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location",
														"Schedule",
														":eventScheduleId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "fa5e35b1-1ecf-4e94-ad89-5168b2d0a276",
															"key": "eventScheduleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "a54db1d2-ccaa-4fa9-acbc-0665fdd47a34",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "ae134249-0ac3-4c47-919d-1699666390ba",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "c44d8754-8b64-44ff-b2ef-a379b376b77e",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/Schedule/:eventScheduleId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																"Schedule",
																":eventScheduleId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Location",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "e9540a84-8883-432b-ad57-d226b5670c91",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "c2344f4f-acc0-4a9c-8603-74e427cdd2a0",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Put Event Location",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "84f0188b-c70d-449e-b48c-4fcb6ae0dce3",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "aba6d8ff-6bf0-4932-aedf-841ce40e2c1d",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Patch Event Location",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "fcc49e29-417c-44c4-8617-db1b91bfdbb4",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "a146097b-04d5-4d29-bfb8-1ad7fbaf0605",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Location/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Location",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Location",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location",
														":id"
													],
													"variable": [
														{
															"id": "12419e6f-2fe8-419d-b298-be421f672fcf",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Location/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Location",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Locations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Location/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Location",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "700f64ce-8dc8-40f7-8a1f-404ee5f47b9e",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Locations Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Location/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Location",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "41f38989-6573-46ee-be53-65b736f63abf",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "c6b9eae6-8385-4d14-b479-2b0cd4cd67ba",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "ea83fc78-4044-47c8-a276-cbc62f5e7222",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Location",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event/Location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Location"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Location",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Location"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{event Id}",
							"item": [
								{
									"name": "Location",
									"item": [
										{
											"name": "Event Get All Event Locations By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Location/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Location",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "7233eb31-46c1-427f-b410-b8200e3a9a2c",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "b6b56060-95b4-45a2-a276-42d5d80f8d76",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Location/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Location",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Locations By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Location/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Location",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "0ef1f12f-d740-4f58-9e9d-115ca765f84a",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "031b447d-e502-47a3-ad15-7029c527aafc",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "efaecddd-2aab-402e-8658-8ff1d085e995",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "aa763927-3c1d-4c20-8aa2-c5ba64534363",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Location/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Location",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n },\n {\n  \"eventId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address1\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zipCode\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"schedules\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"daysOfTheWeek\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endDate\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"startTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"endTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInStartTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"checkInEndTime\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occurances\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"occurances\": [\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"eventId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventLocationId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eventScheduleId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"date\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lead\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"event\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"location\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"schedule\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"demerits\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ],\n  \"address2\": \"<string>\"\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Schedule",
									"item": [
										{
											"name": "Event Get All Event Schedules By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Schedule/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Schedule",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "d98a74a7-06ba-49e1-8c76-a097fdc8ec8a",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "c6330098-f853-4123-81db-889eb714813a",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Schedule/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Schedule",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Schedules By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Schedule",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "ce6121f2-6ab8-4c74-b11f-97f5f908c38a",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "140d2be1-ed1c-46b8-ab7f-ef7f077b9d9e",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "653036e4-cd17-4c8b-922f-b64e3f06836b",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "39fba378-bbf0-4bbb-a2fe-dfdd73c6ea98",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Schedule",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Occurrence",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Occurrence/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Occurrence",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "ee94835c-014d-4c85-94bf-be533cd63438",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "ca716bc9-f2cc-415d-99b3-e49deca368f5",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Occurrence/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Occurrence",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Occurrence",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "da7b6e21-d766-41b7-97bd-ce0543873724",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "350c8267-bfec-4fdf-a510-bfce6a98f023",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "6120fdb3-9226-43cc-9518-d396ef82374c",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "5d25601c-7b1b-4bae-9b51-574f100e1378",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Occurrence",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service",
									"item": [
										{
											"name": "Event Get All Event Services By Event",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Service/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Service",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "cd9c8723-539b-4904-8c6f-d8d0666c31eb",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "cb69523c-a0e2-4531-937d-f100158acb11",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Service/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Service",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Services By Event Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/:eventId/Service/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														":eventId",
														"Service",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "3332c32b-0e76-432f-a02c-15b502e9d035",
															"key": "eventId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "6d9a2054-1824-41ce-a1b3-4793aba1e715",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "73f3a54c-e6d9-4a83-a48b-b00e6a9f41db",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "f57eb543-87db-4840-82d3-8e3c6f890eb7",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/:eventId/Service/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																":eventId",
																"Service",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Schedule",
							"item": [
								{
									"name": "Location/{event Location Id}",
									"item": [
										{
											"name": "Event Get All Event Schedules By Event Location",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule/Location/:eventLocationId/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule",
														"Location",
														":eventLocationId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "a56b5db2-b64e-4d7a-9ae4-75763c90d28f",
															"key": "eventLocationId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "8185d378-4ae8-41f5-be52-7979fd44d1fc",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/Location/:eventLocationId/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																"Location",
																":eventLocationId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Schedules By Event Location Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule/Location/:eventLocationId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule",
														"Location",
														":eventLocationId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "66cd132f-0403-4f4b-b51d-7ba55f0987c1",
															"key": "eventLocationId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "a5f01ac9-604f-4929-9076-951913563879",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "700f6c28-a638-4288-9541-66d01ef1edab",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "f0afa503-9511-4336-b593-edc95b104f8b",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/Location/:eventLocationId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																"Location",
																":eventLocationId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Schedule",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "bbd538d5-fe71-4f28-a48f-a420ac4bd165",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "94dfd1ce-646c-449d-9951-e416ce4af954",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Schedule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "1a25c32a-82c0-447e-9c9c-3c35a728f59b",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "f0f866c0-cd5f-4454-a1b0-e8ce9ccada1f",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Patch Event Schedule",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "497be8af-98fb-4b0b-857a-07d32e3549fd",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "96cc5bf9-7785-47dc-ab1c-4963d75a173f",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Schedule/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Schedule",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Schedule",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule",
														":id"
													],
													"variable": [
														{
															"id": "71561849-1cec-4e16-955a-5d0d36d5fa78",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Schedule/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Schedule",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Schedules",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Schedule/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Schedule",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "40e538c7-b0ff-4744-86f5-19363a93d950",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Schedules Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Schedule",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "ae21e27b-4398-4fb3-8237-a0922e9bdc12",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "d66b7910-866a-447c-b0ff-1bf3d1ef0e9e",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "4008e083-0984-4038-8a90-cc74d4093a9b",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Schedule",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event/Schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Schedule"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Schedule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Schedule"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Occurrence",
							"item": [
								{
									"name": "Location/{event Locationid}",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event Location",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/Location/:eventLocationid/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														"Location",
														":eventLocationid",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "d52dee0c-8c3b-4f55-8a64-b0b2d7010a0f",
															"key": "eventLocationId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "c6c8b22a-bff3-4483-b8f1-21a12f104fbe",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/Location/:eventLocationid/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																"Location",
																":eventLocationid",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationid"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Location Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/Location/:eventLocationid/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														"Location",
														":eventLocationid",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "c4915ed3-8387-4c44-bde9-d100079d6f0f",
															"key": "eventLocationId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "d7d603d6-c575-4969-96a3-d7a16e837336",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "201cb2c2-56f5-4f46-8f89-181715215e21",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "07d608e5-bbcf-472d-86a9-960b559bae32",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/Location/:eventLocationid/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																"Location",
																":eventLocationid",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventLocationid"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Schedule/{event Scheduleid}",
									"item": [
										{
											"name": "Event Get All Event Occurrences By Event Schedule",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/Schedule/:eventScheduleid/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														"Schedule",
														":eventScheduleid",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "d3f1bd5c-e058-4c8f-8ca5-de1d623f0b4d",
															"key": "eventScheduleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "535fb54f-e05b-4106-a73d-c2ddc598adc5",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/Schedule/:eventScheduleid/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																"Schedule",
																":eventScheduleid",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleid"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Occurrences By Event Schedule Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/Schedule/:eventScheduleid/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														"Schedule",
														":eventScheduleid",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "2e2b4697-15a4-4c40-8f18-508962888e36",
															"key": "eventScheduleid",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "b813fdc4-3f2b-408d-840b-63c47f4e64d1",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "6f23a779-6905-4141-bc20-9525390c5e21",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "60e7cfb8-fcb9-4258-a983-37b9fbeb66f8",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/Schedule/:eventScheduleid/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																"Schedule",
																":eventScheduleid",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "eventScheduleid"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"daysOfTheWeek\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endDate\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"startTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInStartTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"checkInEndTime\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Occurrence",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "91bad9d1-621f-48de-894a-80a7a49f6b57",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "a5a0f279-fc99-436e-9e2c-0b7e0ba7cd99",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Put Event Occurrence",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "55c4f6d4-1ae8-4962-ad26-89ab35f11ae2",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "ee4e65a7-22ae-4484-a72a-05ac90ab6982",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Patch Event Occurrence",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "c2e3e5e3-3254-4926-9152-bb454f4d4405",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "626b0d15-e0be-4392-abd6-5b8be9331a62",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Occurrence/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Occurrence",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Occurrence",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														":id"
													],
													"variable": [
														{
															"id": "b94105e9-27c1-438e-805e-16831c74ad12",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Occurrence/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Occurrence",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Occurrences",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Occurrence/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Occurrence",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "d747e1a4-41bb-48b2-8e71-c28a88f1ce70",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Occurrences Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Occurrence",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "835f827a-4470-457c-bf4d-1eb0383dad0b",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "c205acce-8c2d-4295-a0e4-80b6555e8cf6",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "15436f59-c080-444f-b4e4-c862ca34fd11",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"eventId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventLocationId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"eventScheduleId\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"date\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lead\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"event\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"location\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedule\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"demerits\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Occurrence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event/Occurrence",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Occurrence"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Occurrence",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Occurrence"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service",
							"item": [
								{
									"name": "Service/{service Id}",
									"item": [
										{
											"name": "Event Get All Event Services By Service",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service/Service/:serviceId/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service",
														"Service",
														":serviceId",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "81b1c737-9cb0-4c90-af9e-5a4ca082f1b5",
															"key": "serviceId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "eb96ceb5-d79c-4157-bc60-373a4afbf886",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/Service/:serviceId/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																"Service",
																":serviceId",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "serviceId"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										},
										{
											"name": "Event Get All Event Services By Service Paged",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service/Service/:serviceId/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service",
														"Service",
														":serviceId",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"id": "1f14dcb4-4f41-4a31-8a29-def101384ba5",
															"key": "serviceId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "a026d3cd-ddf1-4e29-8c46-8fe89eb29635",
															"key": "pageNumber",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "90da8bd3-7aac-428c-ad6c-d110255c0b61",
															"key": "pageSize",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														},
														{
															"id": "7eaacb58-9da2-4cc2-81d2-c2d6ffe73fee",
															"key": "includePropertyPaths",
															"value": "",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/Service/:serviceId/:pageNumber/:pageSize/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																"Service",
																":serviceId",
																":pageNumber",
																":pageSize",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"key": "serviceId"
																},
																{
																	"key": "pageNumber"
																},
																{
																	"key": "pageSize"
																},
																{
																	"key": "includePropertyPaths"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "{include Property Paths}",
											"item": [
												{
													"name": "Event Get Event Service",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "d8218ee8-1db0-4575-9cef-12a945dd0e51",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "33848555-e783-4daf-bae4-51d57b2c5cbb",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												},
												{
													"name": "Event Put Event Service",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "9a03b578-36bb-43aa-b01e-ed305eb4de47",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "5e0aeae7-5f3e-4426-91cb-5453d16d0240",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Event Patch Event Service",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[]",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																":id",
																":includePropertyPaths"
															],
															"variable": [
																{
																	"id": "70199ad8-472b-4bff-8194-b6667b8e3f7c",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) "
																},
																{
																	"id": "84ce0181-9400-48e9-b228-c5051444f42c",
																	"key": "includePropertyPaths",
																	"value": "",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[]"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/Event/Service/:id/:includePropertyPaths",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"Event",
																		"Service",
																		":id",
																		":includePropertyPaths"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "includePropertyPaths"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Event Delete Event Service",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service",
														":id"
													],
													"variable": [
														{
															"id": "437d5db9-6b68-4ba4-a65f-4bab3593518c",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/Event/Service/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"Event",
																"Service",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Event Get All Event Services",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Service/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Service",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "a796ba2e-6df5-47df-9395-c970a9f44504",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Get All Event Services Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/Service/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Service",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"id": "ce465f80-dae6-4bc5-a59f-bdef24d2e1b5",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "d4a9e7ba-6061-4bc3-acc2-1db63e295c94",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "7a4d2cbe-3cc6-4631-b7b4-07c4f23243d6",
													"key": "includePropertyPaths",
													"value": "",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service/:pageNumber/:pageSize/:includePropertyPaths",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service",
														":pageNumber",
														":pageSize",
														":includePropertyPaths"
													],
													"variable": [
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														},
														{
															"key": "includePropertyPaths"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n {\n  \"eventId\": \"<string>\",\n  \"serviceId\": \"<string>\",\n  \"event\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"locations\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"schedules\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"occurances\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"services\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"service\": {\n   \"name\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"description\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"serviceType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eventServices\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n }\n]"
										}
									]
								},
								{
									"name": "Event Post Event Service",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event/Service",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												"Service"
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Event/Service",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Event",
														"Service"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Event Get All Events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Event/:includePropertyPaths",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Event",
										":includePropertyPaths"
									],
									"variable": [
										{
											"id": "c1ab34b2-6182-4d8c-b707-3256e43ae128",
											"key": "includePropertyPaths",
											"value": "",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "includePropertyPaths"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Event Get All Events Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Event/:pageNumber/:pageSize/:includePropertyPaths",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Event",
										":pageNumber",
										":pageSize",
										":includePropertyPaths"
									],
									"variable": [
										{
											"id": "df4f67d1-8348-43a0-820f-569ec4a5f430",
											"key": "pageNumber",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "e8040ef6-d85a-4951-834a-12bf34c6a5c7",
											"key": "pageSize",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "96bb60d2-9e1f-4ee6-bd49-ee4c1b7bbd3e",
											"key": "includePropertyPaths",
											"value": "",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Event/:pageNumber/:pageSize/:includePropertyPaths",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event",
												":pageNumber",
												":pageSize",
												":includePropertyPaths"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												},
												{
													"key": "includePropertyPaths"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n },\n {\n  \"name\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locations\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"schedules\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"occurances\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"services\": {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Event Post Event",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Event",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Event"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Event"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Extended Log",
					"item": [
						{
							"name": "level/{level}",
							"item": [
								{
									"name": "Extended Log Get By Level",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/level/:level",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												"level",
												":level"
											],
											"variable": [
												{
													"id": "76a488d7-13ab-4cba-ba23-08a450b653c4",
													"key": "level",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/level/:level",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/level/:level",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Get By Level Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/level/:level/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												"level",
												":level",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"id": "aa57d0ae-4d78-41f0-8dd8-b73d754c53fd",
													"key": "level",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "7e50851a-ab79-4c24-be56-bc04de3ed945",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "ef2ef13d-7c72-442d-8c98-cd6f2cb68344",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Extended Log Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"id": "c3955acb-8ec5-42d3-a5f6-8fa5452df9af",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"id": "c274433a-cf7d-4f00-8bab-0d2946806b49",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Extended Log Put",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"id": "1f3099b7-5cb2-436f-a82f-05c1a7888486",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Extended Log Patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												":id"
											],
											"variable": [
												{
													"id": "cfd3c930-294e-43cb-b956-624e34d0e8a0",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLog/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLog",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Extended Log Get All",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLog",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Delete All",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLog",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Extended Log Get All Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLog/:pageNumber/:pageSize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLog",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"id": "e4464b76-a5cb-44d2-bf4b-d3e62edc5e08",
											"key": "pageNumber",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "66942434-cd3d-470f-8c51-ef2236387065",
											"key": "pageSize",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLog",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Extended Log Controller New",
					"item": [
						{
							"name": "level/{level}",
							"item": [
								{
									"name": "Extended Log Controller New Get Extended Logs By Level",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												"level",
												":level"
											],
											"variable": [
												{
													"id": "bfb80180-5564-4150-ab60-7fa83dd9237c",
													"key": "level",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														"level",
														":level"
													],
													"variable": [
														{
															"key": "level"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Controller New Get Extended Logs By Level Paged",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												"level",
												":level",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"id": "bd1a6597-1b2e-47d6-a2d7-1d446d25f964",
													"key": "level",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "0e52bb45-273a-4290-b5d4-e539a8e8e7d4",
													"key": "pageNumber",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												},
												{
													"id": "9d19e659-871a-4ea8-bd5c-2fba4c9128fb",
													"key": "pageSize",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/level/:level/:pageNumber/:pageSize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														"level",
														":level",
														":pageNumber",
														":pageSize"
													],
													"variable": [
														{
															"key": "level"
														},
														{
															"key": "pageNumber"
														},
														{
															"key": "pageSize"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Extended Log Controller New Get Extended Log",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "a2ec03e1-aab2-4e87-aba0-112d3a26a2e6",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Extended Log Controller New Delete Extended Log",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "2180be06-af3a-476b-b1ae-16b0da66a328",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Controller New Put Extended Log",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "84d5bc8b-02e8-4e85-a70a-32904337a99e",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Extended Log Controller New Patch Extended Log",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "7aa4eea0-ddb0-43fe-bea1-40ad15c4de9a",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"ExtendedLogControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Extended Log Controller New Get All Extended Logs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Controller New Delete All Extended Logs",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Extended Log Controller New Get All Extended Logs Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:pageNumber/:pageSize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLogControllerNew",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"id": "9a748d6a-1ab7-40da-92a6-7a4aaf2ea056",
											"key": "pageNumber",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "22e2ea51-1186-4142-aab9-d705fe214083",
											"key": "pageSize",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Extended Log Controller New Post Extended Log",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLogControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLogControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLogControllerNew"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Notification Get",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												":id"
											],
											"variable": [
												{
													"id": "be8e3084-07a3-4358-b477-00c746038a01",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												":id"
											],
											"variable": [
												{
													"id": "4aa958ff-15a2-4618-bb10-c1c631aa0d54",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Put",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Notification/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												":id"
											],
											"variable": [
												{
													"id": "4ba51476-e596-4b7f-91ca-e5bfdd649ceb",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Notification Patch",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Notification/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												":id"
											],
											"variable": [
												{
													"id": "9afa3beb-8d32-4f6c-ae7b-33bc1cdc30ba",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Notification/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Notification",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Notification Get All",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Get All Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/:pageNumber/:pageSize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"id": "a7a2cca2-93e9-4bfb-b01e-d861741e8f20",
											"key": "pageNumber",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "70429238-7bee-4611-b18e-bea40b29fd4e",
											"key": "pageSize",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Notification/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Notification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Notification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Notification"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Notification Controller New",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Notification Controller New Get Notification",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "aee32ab9-a94e-48bc-9d10-453edec011bb",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Controller New Delete Notification",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "f0c00be7-8151-409a-80e9-e1f32f5b4123",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Controller New Put Notification",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "8dcc2ad2-bc10-4639-91d2-e475a359c804",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								},
								{
									"name": "Notification Controller New Patch Notification",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew",
												":id"
											],
											"variable": [
												{
													"id": "c8e14900-56e4-4401-99a8-12d99931d135",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/NotificationControllerNew/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"NotificationControllerNew",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Notification Controller New Get All Notifications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/NotificationControllerNew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"NotificationControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Controller New Get All Notifications Paged",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/NotificationControllerNew/:pageNumber/:pageSize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"NotificationControllerNew",
										":pageNumber",
										":pageSize"
									],
									"variable": [
										{
											"id": "4885c4d5-8fb1-48da-bca2-84161629badf",
											"key": "pageNumber",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "7396c41a-8de3-4558-bc1f-7f32fb39aa33",
											"key": "pageSize",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew/:pageNumber/:pageSize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew",
												":pageNumber",
												":pageSize"
											],
											"variable": [
												{
													"key": "pageNumber"
												},
												{
													"key": "pageSize"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Notification Controller New Post Notification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/NotificationControllerNew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"NotificationControllerNew"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/NotificationControllerNew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"NotificationControllerNew"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"dolor Duis cu\",\n \"title\": \"officia Ut est\",\n \"status\": -20681417,\n \"detail\": \"ex dolor irure\",\n \"instance\": \"labore officia esse eiusmod\",\n \"extensions\": {}\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Info",
					"item": [
						{
							"name": "ApiInfo",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ExtendedLog",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ExtendedLog"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/ExtendedLog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ExtendedLog"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{EventManager_Token}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7d72f0ea-fe11-4f63-ad84-3a5c2003026a",
				"type": "text/javascript",
				"exec": [
					"var appName = pm.collectionVariables.get(\"AppName\");",
					"var tokenUrl = pm.environment.get(appName + \"_TokenUrl\");",
					"var tokenExpiration = new Date(\"2010-10-10T10:10:10.416Z\");",
					"if(pm.environment.has(appName + \"_TokenExpiration\")){",
					"    tokenExpiration = new Date(pm.environment.get(appName + \"_TokenExpiration\"));",
					"} ",
					"if(new Date() > tokenExpiration) {",
					"    if(!tokenUrl){",
					"        var request = {",
					"            url: pm.environment.get(appName + \"_Url\") + \"/.well-known/openid-configuration\", ",
					"            method: 'GET',",
					"            header: {",
					"            'Content-Type': 'application/x-www-form-urlencoded'",
					"            }",
					"        };",
					"        pm.sendRequest(request, function (err, res) {",
					"            var json = res.json();",
					"            tokenUrl = json.token_endpoint;",
					"            pm.environment.set(appName + \"_TokenUrl\", tokenUrl);",
					"            console.log(\"Retreieved openid-configuration: \" + JSON.stringify(json));",
					"    ",
					"            GetToken(tokenUrl);",
					"        });",
					"    }",
					"    else{",
					"        GetToken(tokenUrl);",
					"    }",
					"}",
					"else",
					"{",
					"    console.log(\"Using existing Access Token\\r\\n \" +",
					"                \"Token Path: \" + tokenUrl + \"\\r\\n \" +",
					"                \"Expiration: \" + tokenExpiration + \"\\r\\n\" +",
					"                \"Timestamp: \" + new Date() + \"\\r\\n \" +",
					"                \"Token: \" + pm.environment.get(appName + \"_Token\"));",
					"}",
					"",
					"function GetToken(tokenUrl){",
					"    var request = {",
					"        url: tokenUrl, ",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/x-www-form-urlencoded'",
					"        },",
					"        body: pm.environment.get(appName + \"_TokenRequest\")",
					"    };",
					"    pm.sendRequest(request, function (err, res) {",
					"        var json = res.json();",
					"        if(json.access_token && json.expires_in)",
					"        {",
					"            var date = new Date();",
					"            tokenExpiration =  new Date(date.setTime(date.getTime() + json.expires_in * 1000));",
					"            pm.environment.set(\"EventManager_TokenExpiration\", tokenExpiration);",
					"            pm.environment.set(\"EventManager_Token\", json.access_token);",
					"            console.log(\"New Access Token\\r\\n \" +",
					"                        \"Token Path: \" + tokenUrl + \"\\r\\n \" +",
					"                        \"Expiration: \" + tokenExpiration + \"\\r\\n\" +",
					"                        \"Timestamp: \" + new Date() + \"\\r\\n \" +",
					"                        \"Token: \" + json.access_token);",
					"        }",
					"        else",
					"        {",
					"            console.log(\"Request:\" + JSON.stringify(request));",
					"            console.log(\"Response:\" + JSON.stringify(json));",
					"            console.error(\"Unable to obtain Access Token\");",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e179bdc8-f94f-4988-b859-d5e90a12b1b7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e6e02446-fad4-474e-a616-84380733b23b",
			"key": "baseUrl",
			"value": "/"
		},
		{
			"id": "6b99d44d-bf56-4d85-96e8-e7dc4e046363",
			"key": "AppName",
			"value": "EventManager"
		}
	],
	"protocolProfileBehavior": {}
}