(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/about/about.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/about/about.component.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container about-page\">\r\n    <header class=\"pageHeader\">\r\n        <h3><i class=\"fa fa-info-circle fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.About' | translate}}</h3>\r\n    </header>\r\n\r\n    <div class=\"reduced-font\" [@fadeInOut]>\r\n        <h4>Welcome to Grow Room Environment Configuration App</h4>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/app.component.html":
/*!*************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/app.component.html ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"app-component app-container\">\r\n  <ngx-toasta></ngx-toasta>\r\n\r\n  <nav id=\"header\" class=\"app-component navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\r\n    <div class=\"container\">\r\n      <a ngPreserveWhitespaces class=\"app-component navbar-brand\" routerLink=\"/\">\r\n        <img [src]=\"appLogo\" class=\"d-inline-block align-top\" alt=\"logo\">\r\n        <span class=\"app-component appTitle\">{{appTitle}}</span>\r\n      </a>\r\n      <button type=\"button\" class=\"app-component navbar-toggler\" data-toggle=\"collapse\" data-target=\".menuItemsContainer.app-component\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div *ngIf=\"isUserLoggedIn\" class=\"app-component collapse navbar-collapse menuItemsContainer\">\r\n        <ul class=\"app-component nav nav-pills flex-column flex-lg-row mr-auto\">\r\n          <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link\" routerLink=\"\"><i class=\"fa fa-home\"></i></a>\r\n          </li>\r\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"canViewEvents\">\r\n            <a class=\"nav-link\" routerLink=\"/events\">{{'mainMenu.Events' | translate}}</a>\r\n          </li>\r\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"canViewLogs\">\r\n            <a class=\"nav-link\" routerLink=\"/logs\">{{'mainMenu.Logs' | translate}}</a>\r\n          </li>\r\n          <li class=\"nav-item\" routerLinkActive=\"active\">\r\n            <a class=\"nav-link\" routerLink=\"/about\">{{'mainMenu.About' | translate}}</a>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"app-component nav nav-pills flex-column flex-lg-row mr-md-2\">\r\n          <li class=\"nav-item\" routerLinkActive=\"active\">\r\n            <a class=\"nav-link\" routerLink=\"/settings\"><i class=\"fa fa-cog\"></i></a>\r\n          </li>\r\n        </ul>\r\n        <span class=\"app-component navbar-text notifications-popup\">{{'app.Welcome' | translate}}</span>\r\n        <a class=\"app-component nav-link user-name d-inline-block px-1\" [popover]=\"popTemplate\" (onHidden)=\"markNotificationsAsRead()\" placement=\"bottom\" [popoverTitle]=\"notificationsTitle\" href=\"javascript:;\" triggers=\"focus\">\r\n          {{userName}}\r\n          <span *ngIf=\"newNotificationCount > 0\" class=\"badge badge-pill badge-secondary\">{{newNotificationCount}}</span>\r\n        </a>\r\n        <ng-template #popTemplate>\r\n          <notifications-management [isViewOnly]=\"true\"></notifications-management>\r\n        </ng-template>\r\n        <span class=\"app-component navbar-text\">, </span>\r\n        <ul class=\"app-component nav nav-pills ml-lg-2 flex-column flex-lg-row\">\r\n          <li class=\"nav-item\" (click)=\"logout()\">\r\n            <a class=\"nav-link\" href=\"javascript:;\"><i class=\"fa fa-sign-out\"></i> {{'mainMenu.Logout' | translate}}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div *ngIf=\"!isUserLoggedIn && router.isActive('/about', false)\" class=\"app-component collapse navbar-collapse menuItemsContainer\">\r\n        <ul class=\"app-component nav nav-pills flex-column flex-lg-row ml-auto\">\r\n          <li class=\"nav-item\" routerLinkActive=\"active\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"><i class=\"fa fa-sign-in\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div *ngIf=\"!isUserLoggedIn && !router.isActive('/about', false) || false\" class=\"app-component collapse navbar-collapse menuItemsContainer\">\r\n        <ul class=\"app-component nav nav-pills flex-column flex-lg-row ml-auto\">\r\n          <li class=\"nav-item\" routerLinkActive=\"active\">\r\n            <a class=\"nav-link\" routerLink=\"/about\"><i class=\"fa fa-info-circle\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <div id=\"pre-bootstrap\" *ngIf=\"!removePrebootScreen\" [class.prebootShow.app-component]=\"!isAppLoaded\" class=\"app-component prebootStep\">\r\n    <div class=\"messaging\">\r\n      <h1>\r\n        Application Loaded!\r\n      </h1>\r\n      <p>\r\n         <span style=\"font-style:italic\">Grow Room Environment</span> App &copy; <a href=\"https://www.wimberlytech.com\">www.wimberlytech.com</a>\r\n      </p>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <main class=\"app-component container\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"app-component footer-height\"></div>\r\n  </main>\r\n\r\n  <footer class=\"app-component footer fixed-bottom\">\r\n    <div class=\"container\">\r\n      <p class=\"text-center text-muted\">\r\n        <span style=\"font-style:italic\">Grow Room Environment</span> App &copy; {{getYear()}}\r\n        <a href=\"https://www.wimberlytech.com\" target=\"_blank\">www.wimberlytech.com</a>\r\n        <!--<span class=\"small display-none\">- Powered by <a href=\"https://www.wimberlytech.com/growroomenvironment\" target=\"_blank\"><span style=\"font-style:italic\">Grow Room Environment </span>App</a></span>-->\r\n      </p>\r\n    </div>\r\n  </footer>\r\n\r\n  <div *ngIf=\"shouldShowLoginModal\" class=\"modal fade login-control\" bsModal #loginModal=\"bs-modal\" (onShown)=\"onLoginModalShown()\" (onHidden)=\"onLoginModalHidden()\" (onHide)=\"onLoginModalHide()\"\r\n       [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-lg h-75 d-flex flex-column justify-content-center my-0\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-body\">\r\n          <app-login #loginControl isModal=\"true\"></app-login>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/notifications-management.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/notifications-management.component.html ***!
  \*******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n    <ngx-datatable class=\"material colored-header sm table-hover\"\r\n                   [loadingIndicator]=\"loadingIndicator\"\r\n                   [rows]=\"rows\"\r\n                   [rowHeight]=\"35\"\r\n                   [headerHeight]=\"isViewOnly ? 0 : 35\"\r\n                   [footerHeight]=\"35\"\r\n                   [limit]=\"10\"\r\n                   [columns]=\"columns\"\r\n                   [scrollbarV]=\"verticalScrollbar\"\r\n                   [columnMode]=\"'force'\">\r\n    </ngx-datatable>\r\n\r\n    <ng-template #statusHeaderTemplate>\r\n        <i class=\"fa fa-bullhorn\"></i>\r\n    </ng-template>\r\n\r\n    <ng-template #statusTemplate>\r\n        <span></span>\r\n    </ng-template>\r\n\r\n    <ng-template #dateTemplate let-row=\"row\" let-value=\"value\">\r\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{getPrintedDate(value)}}\">\r\n            {{getPrintedDate(value)}}\r\n        </span>\r\n    </ng-template>\r\n\r\n    <ng-template #contentHeaderTemplate let-row=\"row\" let-value=\"value\">\r\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.body}}\">\r\n            {{value}}\r\n        </span>\r\n    </ng-template>\r\n\r\n    <ng-template #contenBodytTemplate let-row=\"row\" let-value=\"value\">\r\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.header}}\">\r\n            {{value}}\r\n        </span>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template #actionsTemplate let-row=\"row\">\r\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Delete' | translate}}\" container=\"body\" (click)=\"deleteNotification(row)\"><i class=\"fa fa-times\"></i></a>\r\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Pin' | translate}}\" co container=\"body\" (click)=\"togglePin(row)\">\r\n            <i *ngIf=\"row.isPinned\" class=\"fa fa-thumb-tack\"></i>\r\n            <i *ngIf=\"!row.isPinned\" class=\"fa fa-thumb-tack fa-rotate-90\"></i>\r\n        </a>\r\n    </ng-template>\r\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/search-box.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/search-box.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"icon-addon addon-sm\">\r\n    <label for=\"searchInput\" title=\"Search\"><i class=\"fa fa-search left-icon search-icon\"></i></label>\r\n    <input id=\"searchInput\" #searchInput type=\"search\" ngModel=\"\" (ngModelChange)=\"onValueChange($event)\" [attr.placeholder]=\"placeholder\" class=\"form-control left-icon right-icon\">\r\n    <a *ngIf=\"searchInput.value\" href=\"javascript:;\" title=\"Clear\" (click)=\"clear()\" class=\"fa fa-times-circle clear-input right-icon\"></a>\r\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-conditions-management.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-conditions-management.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <div class=\"row control-box\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"form-group search-box\">\r\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'eventConditions.management.Search' | translate}}\">></search-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 pr-lg-5\">\r\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\r\n        <li *ngIf=\"viewModelState != states.New && canManageEvents\" class=\"nav-item toolbaritem\">\r\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newEventCondition()\">\r\n            <i class=\"fa fa-plus-circle\"></i> {{'eventConditions.management.NewEventCondition' | translate}}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-datatable #dataTable class=\"material colored-header sm table table-striped table-hover\"\r\n                 [loadingIndicator]=\"loadingIndicator\"\r\n                 [rows]=\"rows\"\r\n                 [headerHeight]=\"35\"\r\n                 [footerHeight]=\"35\"\r\n                 [columns]=\"columns\"\r\n                 [rowHeight]=\"'auto'\"\r\n                 [columnMode]=\"'standard'\"\r\n                 [limit]='3'>\r\n  </ngx-datatable>\r\n\r\n  <ng-template #dataPointTemplate let-row=\"row\" let-value=\"value\">\r\n    <select [(ngModel)]=\"row.dataPointId\">\r\n      <option *ngFor=\"let dataPoint of dataPoints\" [value]=\"dataPoint.dataPointId\">{{dataPoint.name}}</option>\r\n    </select>\r\n  </ng-template>\r\n\r\n  <ng-template #operatorTemplate let-row=\"row\" let-value=\"value\">\r\n    <select [(ngModel)]=\"row.operator\">\r\n      <option *ngFor=\"let operatorKey of operatorKeys\" [ngValue]=\"operatorKey\" [label]=\"operators[operatorKey]\"></option>\r\n    </select>\r\n  </ng-template>\r\n\r\n  <ng-template #valueTemplate let-row=\"row\" let-value=\"value\">\r\n    <input type=\"text\" placeholder=\"Enter value\" [(ngModel)]=\"row.value\" />\r\n  </ng-template>\r\n\r\n  <ng-template #actionsTemplate let-row=\"row\">\r\n    <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteEventCondition(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'eventConditions.management.Delete' | translate}}</a>\r\n  </ng-template>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-editor.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-editor.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <form *ngIf=\"formResetToggle\" [attr.autocomplete]=\"'NaN'\" name=\"eventForm\" #form=\"ngForm\" novalidate\r\n        (ngSubmit)=\"save()\">\r\n\r\n    <!-- IsEnabled -->\r\n    <div class=\"form-group row\">\r\n      <label [class.col-lg-3]=\"!isEditMode\" [class.col-lg-2]=\"isEditMode\" class=\"col-form-label\" for=\"isEnabled-{{uniqueId}}\">{{'events.editor.IsEnabled' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" class=\"col-lg-9\">\r\n        <p class=\"form-control-plaintext\">{{event.isEnabled}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" class=\"col-lg-10\">\r\n        <input autofocus type=\"checkbox\" attr.id=\"isEnabled-{{uniqueId}}\" name=\"isEnabled\" class=\"form-control\" [(ngModel)]=\"event.isEnabled\" #isEnabled=\"ngModal\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Name -->\r\n    <div class=\"form-group row\">\r\n      <label [class.col-lg-3]=\"!isEditMode\" [class.col-lg-2]=\"isEditMode\" class=\"col-form-label\" for=\"name-{{uniqueId}}\">{{'events.editor.Name' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" class=\"col-lg-9\">\r\n        <p class=\"form-control-plaintext\">{{event.name}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" class=\"col-lg-10\">\r\n        <input autofocus type=\"text\" attr.id=\"name-{{uniqueId}}\" name=\"name\" placeholder=\"Enter name\" class=\"form-control\" [(ngModel)]=\"event.name\" #name=\"ngModel\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Action Device -->\r\n    <div class=\"form-group row has-feedback-icon\">\r\n      <label [class.col-lg-3]=\"!isEditMode\" [class.col-lg-2]=\"isEditMode\" class=\"col-form-label\" for=\"actionDevice-{{uniqueId}}\">{{'events.editor.ActionDevice' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" class=\"col-lg-9\">\r\n        <p class=\"form-control-plaintext\">{{event.actionDeviceId}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" class=\"col-lg-10\">\r\n        <select attr.id=\"actionDevice-{{uniqueId}}\" name=\"actionDevice\" class=\"form-control\" [(ngModel)]=\"event.actionDeviceId\" #actionDevice=\"ngModel\">\r\n          <option *ngFor=\"let device of actionDevices\" [ngValue]=\"device.actionDeviceId\">{{device.name}}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- State -->\r\n    <div class=\"form-group row has-feedback-icon\">\r\n      <label [class.col-lg-3]=\"!isEditMode\" [class.col-lg-2]=\"isEditMode\" class=\"col-form-label\" for=\"state-{{uniqueId}}\">{{'events.editor.State' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" class=\"col-lg-9\">\r\n        <p class=\"form-control-plaintext\">{{event.state}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" class=\"col-lg-10\">\r\n        <select attr.id=\"state-{{uniqueId}}\" name=\"state\" class=\"form-control\" [(ngModel)]=\"event.state\" #state=\"ngModel\">\r\n          <option *ngFor=\"let stateKey of stateKeys\" [ngValue]=\"stateKey\" [label]=\"states[stateKey]\"></option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isEditMode\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Event Conditions -->\r\n    <div class=\"form-group row has-feedback-icon\" *ngIf=\"event.eventId != undefined\">\r\n      <label [class.col-lg-3]=\"!isEditMode\" [class.col-lg-2]=\"isEditMode\" class=\"col-form-label\" for=\"eventconditions-{{uniqueId}}\">{{'events.editor.EventConditions' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" class=\"col-lg-9\">\r\n        <ul>\r\n          <li *ngFor=\"let condition of event.eventConditions\">\r\n            <span class=\"event-conditions badge badge-pill badge-secondary\">{{condition.dataPoint.caption}} {{eventService.getOperatorSymbol(condition.operator)}} '{{condition.value}}'</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row has-feedback-icon\" *ngIf=\"event.eventId != undefined\">\r\n      <div *ngIf=\"isEditMode\" class=\"col-lg-12\">\r\n        <event-conditions-management [event]=\"event\" [dataPoints]=\"dataPoints\" (eventConditionsChanged)=\"onEventConditionsChanged($event)\" #eventConditions=\"ngModal\"></event-conditions-management>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isEditMode\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-sm-12\">\r\n        <div ngPreserveWhitespaces class=\"float-right\">\r\n          <button *ngIf=\"!isEditMode\" type=\"button\" (click)=\"close()\" class=\"btn btn-outline-secondary\"><i class='fa fa-close'></i> {{'events.editor.Close' | translate}}</button>\r\n          <button *ngIf=\"isEditMode\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'events.editor.Cancel' | translate}}</button>\r\n          <button *ngIf=\"isEditMode\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\r\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('events.editor.Saving' | translate) : ('events.editor.Save' | translate)}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\"></div>\r\n  </form>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events-management.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events-management.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <div class=\"row control-box\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"form-group search-box\">\r\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'events.management.Search' | translate}}\">></search-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 pr-lg-5\">\r\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\r\n        <li *ngIf=\"canManageEvents\" class=\"nav-item toolbaritem\">\r\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newEvent()\">\r\n            <i class=\"fa fa-plus-circle\"></i> {{'events.management.NewEvent' | translate}}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-datatable #dataTable class=\"material colored-header sm table table-striped table-hover\"\r\n                 [loadingIndicator]=\"loadingIndicator\"\r\n                 [rows]=\"rows\"\r\n                 [headerHeight]=\"35\"\r\n                 [footerHeight]=\"35\"\r\n                 [columns]=\"columns\"\r\n                 [scrollbarV]=\"false\"\r\n                 [rowHeight]=\"'auto'\"\r\n                 [columnMode]=\"'force'\"\r\n                 [limit]=\"8\">\r\n  </ngx-datatable>\r\n\r\n  <ng-template #idTemplate let-value=\"value\">\r\n    <strong>{{value}}</strong>\r\n  </ng-template>\r\n  \r\n  <ng-template #eventConditionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"eventId\">\r\n    <div *ngIf=\"value && value.length > 0\"> \r\n      <div class=\"event-conditions badge badge-pill badge-secondary\" *ngFor=\"let condition of value\"><p>{{condition?.dataPoint?.name}} {{eventService.getOperatorSymbol(condition.operator)}} '{{condition.value}}'</p></div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"eventId\">\r\n    <div *ngIf=\"canManageEvents\">\r\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editEvent(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'events.management.Edit' | translate}}</a>|\r\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteEvent(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'events.management.Delete' | translate}}</a>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 *ngIf=\"!editingEventName\" class=\"modal-title float-left\"><i class=\"fa fa-tasks\"></i> {{'events.management.NewEvent' | translate}}</h4>\r\n          <h4 *ngIf=\"editingEventName\" class=\"modal-title float-left\"><i class=\"fa fa-tasks\"></i> {{'events.management.EditEvent' | translate:editingEventName}}</h4>\r\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"eventEditor.close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <event-editor #eventEditor></event-editor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events.component.html ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container\">\r\n  <header class=\"pageHeader\">\r\n    <h3><i class=\"fa fa-tasks fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Events' | translate}}</h3>\r\n  </header>\r\n\r\n  <div [@fadeInOut]>\r\n    <events-management></events-management>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-log-editor.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-log-editor.component.html ***!
  \*******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <form *ngIf=\"formResetToggle\" name=\"logEditorForm\" #f=\"ngForm\" novalidate>\r\n\r\n    <!-- Id / EventId -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logId\">{{'logs.editor.Id' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logId\" name=\"logId\" class=\"form-control\" [(ngModel)]=\"logEdit.id\" />\r\n        </div>\r\n        <label class=\"col-form-label col-md-1\" for=\"logEventId\">{{'logs.editor.EventId' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logEventId\" name=\"logEventId\" class=\"form-control\" [(ngModel)]=\"logEdit.eventId\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Level / User -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logLevel\">{{'logs.editor.Level' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logLevel\" name=\"logLevel\" class=\"form-control\" [(ngModel)]=\"errorLevel\" />\r\n        </div>\r\n        <label class=\"col-form-label col-md-1\" for=\"logUser\">{{'logs.editor.User' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logUser\" name=\"logUser\" class=\"form-control\" [(ngModel)]=\"logEdit.user\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Host / Method -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logHost\">{{'logs.editor.Host' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logHost\" name=\"logHost\" class=\"form-control\" [(ngModel)]=\"logEdit.host\" />\r\n        </div>\r\n\r\n        <label class=\"col-form-label col-md-1\" for=\"logMethod\">{{'logs.editor.Method' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logMethod\" name=\"logMethod\" class=\"form-control\" [(ngModel)]=\"logEdit.method\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n    <!-- Path / StatusCode -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logPath\">{{'logs.editor.Path' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logPath\" name=\"logPath\" class=\"form-control\" [(ngModel)]=\"logEdit.path\" />\r\n        </div>\r\n        <label class=\"col-form-label col-md-1\" for=\"logStatusCode\">{{'logs.editor.StatusCode' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logStatusCode\" name=\"logStatusCode\" class=\"form-control\" [(ngModel)]=\"logEdit.statusCode\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- ServerVariables / Form Variables-->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logServerVariables\">{{'logs.editor.ServerVariables' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <textarea rows=\"2\" [disabled]=\"true\" type=\"text\" id=\"logServerVariables\" name=\"logServerVariables\" class=\"form-control\" [(ngModel)]=\"logEdit.serverVariables\"></textarea>\r\n        </div>\r\n        <label class=\"col-form-label col-md-1\" for=\"logFormVariables\">{{'logs.editor.FormVariables' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <textarea rows=\"2\" [disabled]=\"true\" type=\"text\" id=\"logFormVariables\" name=\"logFormVariables\" class=\"form-control\" [(ngModel)]=\"logEdit.formVariables\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Cookies / QueryString-->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logCookies\">{{'logs.editor.Cookies' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <textarea rows=\"2\" [disabled]=\"true\" type=\"text\" id=\"logCookies\" name=\"logCookies\" class=\"form-control\" [(ngModel)]=\"logEdit.cookies\"></textarea>\r\n        </div>\r\n        <label class=\"col-form-label col-md-1\" for=\"logQueryString\">{{'logs.editor.QueryString' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n          <textarea rows=\"2\" [disabled]=\"true\" type=\"text\" id=\"logQueryString\" name=\"logQueryString\" class=\"form-control\" [(ngModel)]=\"logEdit.queryString\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- TimeStamp -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logTimeStamp\">{{'logs.editor.TimeStamp' | translate}}</label>\r\n        <div class=\"col-md-11\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logTimeStamp\" name=\"logTimeStamp\" class=\"form-control\" [(ngModel)]=\"logEdit.timeStamp\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Name -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logName\">{{'logs.editor.Name' | translate}}</label>\r\n        <div class=\"col-md-11\">\r\n          <input [disabled]=\"true\" type=\"text\" id=\"logName\" name=\"logName\" class=\"form-control\" [(ngModel)]=\"logEdit.name\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- Browser -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logBrowser\">{{'logs.editor.Browser' | translate}}</label>\r\n        <div class=\"col-md-11\">\r\n          <textarea rows=\"2\" [disabled]=\"true\" type=\"text\" id=\"logBrowser\" name=\"logBrowser\" class=\"form-control\" [(ngModel)]=\"logEdit.browser\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Message -->\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-form-label col-md-1\" for=\"logMessage\">{{'logs.editor.Message' | translate}}</label>\r\n        <div class=\"col-md-11\">\r\n          <textarea rows=\"4\" [disabled]=\"true\" type=\"text\" id=\"logMessage\" name=\"logMessage\" class=\"form-control\" [(ngModel)]=\"logEdit.message\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.last-separator-hr]=\"true\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Buttons -->\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-sm-12\">\r\n        <div ngPreserveWhitespaces class=\"float-right\">\r\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-outline-secondary\">{{'roles.editor.Close' | translate}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\"></div>\r\n  </form>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs-management.component.html":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs-management.component.html ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <div class=\"row control-box\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"form-group search-box\">\r\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'logs.management.Search' | translate}}\">></search-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 pr-lg-5\">\r\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\r\n        <li class=\"nav-item toolbaritem\">\r\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"clearLog()\">\r\n            <i class=\"fa fa-trash-o\"></i> {{'logs.management.ClearLog' | translate}}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\r\n                 [loadingIndicator]=\"loadingIndicator\"\r\n                 [rows]=\"rows\"\r\n                 [rowHeight]=\"35\"\r\n                 [headerHeight]=\"35\"\r\n                 [footerHeight]=\"35\"\r\n                 [columns]=\"columns\"\r\n                 [scrollbarV]=\"true\"\r\n                 [scrollbarH]=\"true\"\r\n                 [selectionType]=\"'single'\"\r\n                 [columnMode]=\"'standard'\"\r\n                  (activate)=\"onActivate($event)\">\r\n  </ngx-datatable>\r\n\r\n  <ng-template #idTemplate let-value=\"value\">\r\n    <strong>{{value}}</strong>\r\n</ng-template>\r\n\r\n\r\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"id\">\r\n    <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editLog(row)\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> {{'logs.management.Details' | translate}}</a>\r\n  </ng-template>\r\n\r\n\r\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title float-left\"><i class=\"fa fa-file\"></i> {{'logs.management.LogDetails' | translate:editingLogId}}</h4>\r\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <extended-log-editor #logEditor></extended-log-editor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs.component.html ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container\">\r\n  <header class=\"pageHeader\">\r\n    <h3><i class=\"fa fa-file fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Logs' | translate}}</h3>\r\n  </header>\r\n\r\n  <div [@fadeInOut]>\r\n    <extended-logs-management></extended-logs-management>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/home/home.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/home/home.component.html ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container\">\r\n    <header class=\"pageHeader\">\r\n        <h3><i class=\"fa fa-tachometer fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Dashboard' | translate}}</h3>\r\n    </header>\r\n\r\n    <div [@fadeInOut]>\r\n        <div class=\"row\">\r\n            <div *ngIf=\"!configurations.showDashboardStatistics && !configurations.showDashboardNotifications && !configurations.showDashboardTodo && !configurations.showDashboardBanner\" class=\"col-12 my-5\">\r\n                <div class=\"card card-body bg-light\">\r\n                    <h4 class=\"text-muted text-center\">\r\n                        {{'home.NoWidgets1' | translate}} <a routerLink=\"/settings\" fragment=\"preferences\"><i class=\"fa fa-sliders\"></i> {{'settings.tab.Preferences' | translate}}</a>\r\n                        {{'home.NoWidgets2' | translate}}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"configurations.showDashboardNotifications\" class=\"col-12 my-3\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" title=\"Close\" (click)=\"configurations.showDashboardNotifications = false\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <div class=\"clearfix\"></div>\r\n                <notifications-management></notifications-management>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"d-flex h-90\">\r\n  <div class=\"login-container m-auto\">\r\n    <div class=\"card boxshadow\">\r\n      <div class=\"card-header bg-primary dark text-white clearfix\">\r\n        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> Login\r\n        <button *ngIf=\"isModal\" type=\"button\" class=\"close float-right text-light\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n          <form *ngIf=\"formResetToggle\" class=\"login\" name=\"loginForm\" #f=\"ngForm\" novalidate\r\n                (ngSubmit)=\"f.form.valid ? login() :\r\n                          (!username.valid && showErrorAlert('Username is required', 'Please enter a valid username'));\r\n                          (!password.valid && showErrorAlert('Password is required', 'Please enter a valid password'))\">\r\n            <div class=\"form-group row has-feedback-icon\">\r\n              <label class=\"col-form-label col-md-3\" for=\"login-username\">Username:</label>\r\n              <div class=\"col-md-9\">\r\n                <input type=\"text\" id=\"login-username\" name=\"username\" placeholder=\"Enter username\" autocomplete=\"username\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && username.valid, 'is-invalid' : f.submitted && !username.valid}\"\r\n                       [(ngModel)]=\"userLogin.userName\" #username=\"ngModel\" required />\r\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': username.valid, 'fa-times' : !username.valid}\" aria-hidden=\"true\"></i>\r\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !username.valid\">\r\n                  Username is required\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row has-feedback-icon\">\r\n              <label class=\"col-form-label col-md-3\" for=\"login-password\">Password:</label>\r\n              <div class=\"col-md-9\">\r\n                <input type=\"password\" id=\"login-password\" name=\"password\" placeholder=\"Enter password\" autocomplete=\"current-password\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && password.valid, 'is-invalid' : f.submitted && !password.valid}\"\r\n                       [(ngModel)]=\"userLogin.password\" #password=\"ngModel\" required />\r\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': password.valid, 'fa-times' : !password.valid}\" aria-hidden=\"true\"></i>\r\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !password.valid\">\r\n                  Password is required\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"offset-md-3 col-md-9\">\r\n                <div class=\"form-check\">\r\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"login-rememberme\" name=\"rememberMe\" [(ngModel)]=\"userLogin.rememberMe\">\r\n                  <label class=\"form-check-label\" for=\"login-rememberme\">Remember me</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"offset-md-3 col-md-9\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isLoading\">\r\n                  <i *ngIf=\"isLoading\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Logging in...' : 'Login'}}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/not-found/not-found.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/not-found/not-found.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<header class=\"pageHeader\">\r\n    <h3><i class=\"fa fa-exclamation-circle fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.NotFound' | translate}}</h3>\r\n</header>\r\n\r\n<div [@fadeInOut] class=\"d-flex h-75\">\r\n    <div class=\"m-auto\">\r\n        <div class=\"icon-container\"><i class='fa fa-exclamation-circle'></i> {{'notFound.404' | translate}}</div>\r\n        <div class=\"text-muted error-description\">{{'notFound.pageNotFound' | translate}}</div>\r\n        <div><a class=\"btn btn-primary\" routerLink=\"/\"><i class='fa fa-home'></i> {{'notFound.backToHome' | translate}}</a></div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/role-editor.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/role-editor.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <form *ngIf=\"formResetToggle\" name=\"roleEditorForm\" #f=\"ngForm\" novalidate\r\n        (ngSubmit)=\"f.form.valid ? save() :\r\n          (!roleName.valid && showErrorAlert('Role name is required', 'Please enter a role name (minimum of 2 and maximum of 200 characters)'));\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-5\">\r\n        <div class=\"form-group row has-feedback-icon\">\r\n          <label class=\"col-form-label col-md-3\" for=\"roleName\">{{'roles.editor.Name' | translate}}</label>\r\n          <div class=\"col-md-9\">\r\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleName\" name=\"roleName\" placeholder=\"Enter role name\" class=\"form-control\"\r\n                   [ngClass]=\"{'is-valid': f.submitted && roleName.valid, 'is-invalid' : f.submitted && !roleName.valid}\" [(ngModel)]=\"roleEdit.name\" #roleName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\r\n            <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roleName.valid, 'fa-times' : !roleName.valid}\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-sm-7\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-form-label col-md-3\" for=\"roleDescription\">{{'roles.editor.Description' | translate}}</label>\r\n          <div class=\"col-md-9\">\r\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleDescription\" name=\"roleDescription\" placeholder=\"Enter role description\" class=\"form-control\" [(ngModel)]=\"roleEdit.description\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <span *ngIf=\"showValidationErrors && f.submitted && !roleName.valid\" class=\"invalid-feedback\">\r\n          {{'roles.editor.RoleNameRequired' | translate}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <hr class=\"edit-separator-hr\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 card card-body bg-light well-sm permissionsRow\">\r\n        <div class=\"row\">\r\n\r\n          <ng-template ngFor let-permissionGroup [ngForOf]=\"allPermissions | groupBy: 'groupName'\" let-i=\"index\">\r\n            <div class=\"form-group row col-sm-6 permissionsColumn\">\r\n              <label class=\"col-md-5 col-form-label group-name\" for=\"checkboxes\" (click)=\"toggleGroup(permissionGroup.key)\">{{permissionGroup.key}}</label>\r\n              <div class=\"col-md-7\">\r\n                <div class=\"form-check\" *ngFor=\"let permission of permissionGroup.value\">\r\n                  <input [disabled]=\"!canManageRoles\" name=\"checkboxes-{{permission.value}}\" id=\"checkboxes-{{permission.value}}\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"selectedValues[permission.value]\">\r\n                  <label class=\"form-check-label\" tooltip=\"{{permission.description}}\" for=\"checkboxes-{{permission.value}}\">{{permission.name}}</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"(i + 1) % 2 === 0\" class=\"clearfix\"></div>\r\n          </ng-template>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <hr class=\"edit-last-separator-hr\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-sm-5\">\r\n        <div *ngIf=\"canManageRoles\" class=\"float-left\">\r\n          <a (click)=\"selectAll()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectAll' | translate}}</a>|<a (click)=\"selectNone()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectNone' | translate}}</a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-sm-7\">\r\n        <div ngPreserveWhitespaces class=\"float-right\">\r\n          <button *ngIf=\"!canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-outline-secondary\">{{'roles.editor.Close' | translate}}</button>\r\n          <button *ngIf=\"canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'roles.editor.Cancel' | translate}}</button>\r\n          <button *ngIf=\"canManageRoles\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\r\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('roles.editor.Saving' | translate) : ('roles.editor.Save' | translate)}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\"></div>\r\n  </form>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/roles-management.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/roles-management.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <div class=\"row control-box\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"form-group search-box\">\r\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'roles.management.Search' | translate}}\">></search-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 pr-lg-5\">\r\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\r\n        <li *ngIf=\"canManageRoles\" class=\"nav-item toolbaritem\">\r\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newRole()\">\r\n            <i class=\"fa fa-plus-circle\"></i> {{'roles.management.NewRole' | translate}}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\r\n                 [loadingIndicator]=\"loadingIndicator\"\r\n                 [rows]=\"rows\"\r\n                 [rowHeight]=\"35\"\r\n                 [headerHeight]=\"35\"\r\n                 [footerHeight]=\"35\"\r\n                 [columns]=\"columns\"\r\n                 [scrollbarV]=\"true\"\r\n                 [columnMode]=\"'force'\">\r\n  </ngx-datatable>\r\n\r\n  <ng-template #indexTemplate let-value=\"value\">\r\n    <strong>{{value}}</strong>\r\n  </ng-template>\r\n\r\n\r\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\r\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'roles.management.Edit' | translate}}</a>\r\n    <a *ngIf=\"!canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> {{'roles.management.Details' | translate}}</a>\r\n    {{canManageRoles ? '|' : ''}}\r\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteRole(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'roles.management.Delete' | translate}}</a>\r\n  </ng-template>\r\n\r\n\r\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 *ngIf=\"!canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{'roles.management.RoleDetails' | translate:editingRoleName}}</h4>\r\n          <h4 *ngIf=\"canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{editingRoleName ? ('roles.management.EditRole' | translate:editingRoleName) : ('roles.management.NewRole' | translate)}}</h4>\r\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <role-editor #roleEditor></role-editor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/settings.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/settings.component.html ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container settings-page\">\r\n    <header class=\"pageHeader\">\r\n        <h3><i class=\"fa fa-cog fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Settings' | translate}}</h3>\r\n    </header>\r\n\r\n    <div [@fadeInOut]>\r\n        <div class=\"d-sm-flex flex-row\">\r\n            <ul bootstrapTab #tab=\"bootstrap-tab\" (showBSTab)=\"onShowTab($event)\" class=\"nav nav-tabs nav-tabs--vertical nav-tabs--left\" role=\"navigation\">\r\n                <li class=\"nav-item\">\r\n                    <a id=\"profileTab\" [routerLink]=\"[]\" fragment=\"profile\" data-target=\"#profile\" href=\"#profile\" class=\"nav-link active\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"profile\">\r\n                        <i class=\"fa fa-user-circle-o fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Profile' | translate}}\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a id=\"preferencesTab\" [routerLink]=\"[]\" fragment=\"preferences\" data-target=\"#preferences\" href=\"#preferences\" class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"preferences\">\r\n                        <i class=\"fa fa-sliders fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Preferences' | translate}}\r\n                    </a>\r\n                </li>\r\n                <li [hidden]=\"!canViewUsers\" class=\"nav-item\">\r\n                    <a id=\"usersTab\" [routerLink]=\"[]\" fragment=\"users\" data-target=\"#users\" href=\"#users\" class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"users\">\r\n                        <i class=\"fa fa-users fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Users' | translate}}\r\n                    </a>\r\n                </li>\r\n                <li [hidden]=\"!canViewRoles\" class=\"nav-item\">\r\n                    <a id=\"rolesTab\" [routerLink]=\"[]\" fragment=\"roles\" data-target=\"#roles\" href=\"#roles\" class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"roles\">\r\n                        <i class=\"fa fa-shield fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Roles' | translate}}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div class=\"tab-content w-100\">\r\n                <div class=\"tab-pane show active\" id=\"profile\" role=\"tabpanel\">\r\n                    <h4>{{'settings.header.UserProfile' | translate}}</h4>\r\n                    <hr class=\"separator-hr\" />\r\n                    <div [@fadeInOut] *ngIf=\"isProfileActivated\" class=\"content-container pl-lg-2\">\r\n                        <user-editor></user-editor>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"tab-pane\" id=\"preferences\" role=\"tabpanel\">\r\n                    <h4>{{'settings.header.UserPreferences' | translate}}</h4>\r\n                    <hr class=\"separator-hr\" />\r\n                    <div [@fadeInOut] *ngIf=\"isPreferencesActivated\" class=\"content-container pl-lg-2\">\r\n                        <user-preferences></user-preferences>\r\n                    </div>\r\n                </div>\r\n                <div class=\"tab-pane\" id=\"users\" role=\"tabpanel\">\r\n                    <h4>{{'settings.header.UsersManagements' | translate}}</h4>\r\n                    <hr class=\"separator-hr\" />\r\n                    <div [@fadeInOut] *ngIf=\"canViewUsers && isUsersActivated\" class=\"content-container pl-lg-1\">\r\n                        <users-management></users-management>\r\n                    </div>\r\n                </div>\r\n                <div class=\"tab-pane\" id=\"roles\" role=\"tabpanel\">\r\n                    <h4>{{'settings.header.RolesManagement' | translate}}</h4>\r\n                    <hr class=\"separator-hr\" />\r\n                    <div [@fadeInOut] *ngIf=\"canViewRoles && isRolesActivated\" class=\"content-container pl-lg-1\">\r\n                        <roles-management></roles-management>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-editor.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-editor.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <form *ngIf=\"formResetToggle\" [attr.autocomplete]=\"isGeneralEditor ? 'NaN' : null\" name=\"userInfoForm\" #f=\"ngForm\" novalidate\r\n        (ngSubmit)=\"f.form.valid ? save() :\r\n\r\n          (!userName.valid && showErrorAlert('User name is required', 'Please enter a user name (minimum of 2 and maximum of 200 characters)'));\r\n\r\n          (userPassword && !userPassword.valid && showErrorAlert('Password is required', 'Please enter the current password'));\r\n\r\n          (email.errors?.required && showErrorAlert('Email is required', 'Please enter an email address (maximum of 200 characters)'));\r\n          (email.errors?.pattern && showErrorAlert('Invalid Email', 'Please enter a valid email address'));\r\n\r\n          (isChangePassword && isEditingSelf && !currentPassword.valid && showErrorAlert('Current password is required', 'Please enter the current password'));\r\n\r\n          ((isChangePassword || isNewUser) && !newPassword.valid && showErrorAlert('New password is required', 'Please enter the new password (minimum of 6 characters)'));\r\n\r\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.required && showErrorAlert('Confirmation password is required', 'Please enter the confirmation password'));\r\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.validateEqual && showErrorAlert('Passwword mismatch', 'New password and confirmation password do not match'));\r\n\r\n          (canAssignRoles && !roles.valid && showErrorAlert('Roles is required', 'Please select a minimum of 1 role'));\">\r\n\r\n    <div class=\"form-group row\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"jobTitle-{{uniqueId}}\">{{'users.editor.JobTitle' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p class=\"form-control-plaintext\">{{user.jobTitle}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <input autofocus type=\"text\" attr.id=\"jobTitle-{{uniqueId}}\" name=\"jobTitle\" placeholder=\"Enter Job Title\" class=\"form-control\" [(ngModel)]=\"userEdit.jobTitle\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row has-feedback-icon\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"userName-{{uniqueId}}\">{{'users.editor.UserName' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p class=\"form-control-plaintext\">{{user.userName}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <input type=\"text\" attr.id=\"userName-{{uniqueId}}\" name=\"userName\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter user name\"\r\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userName.valid, 'is-invalid' : f.submitted && !userName.valid}\"\r\n               [(ngModel)]=\"userEdit.userName\" #userName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\r\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userName.valid, 'fa-times' : !userName.valid}\" aria-hidden=\"true\"></i>\r\n        <span *ngIf=\"showValidationErrors && f.submitted && !userName.valid\" class=\"invalid-feedback\">\r\n          {{'users.editor.UserNameRequired' | translate}}                                    \r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr class=\"password-separator-hr\" />\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"form-group row has-feedback-icon\">\r\n      <label class=\"col-form-label col-lg-2\" for=\"userPassword-{{uniqueId}}\">{{'users.editor.Password' | translate}}</label>\r\n      <div class=\"col-lg-10\">\r\n        <input type=\"password\" attr.id=\"userPassword-{{uniqueId}}\" name=\"userPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter password\"\r\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userPassword.valid, 'is-invalid' : f.submitted && !userPassword.valid}\"\r\n               [(ngModel)]=\"userEdit.currentPassword\" #userPassword=\"ngModel\" required />\r\n        <small class=\"hint-sm\">{{'users.editor.PasswordHint' | translate}}</small>\r\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userPassword.valid, 'fa-times' : !userPassword.valid}\" aria-hidden=\"true\"></i>\r\n        <span *ngIf=\"showValidationErrors && f.submitted && !userPassword.valid\" class=\"invalid-feedback\">\r\n          {{'users.editor.CurrentPasswordRequired' | translate}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row has-feedback-icon\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"email-{{uniqueId}}\">{{'users.editor.Email' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p class=\"form-control-plaintext\">{{user.email}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <input type=\"text\" attr.id=\"email-{{uniqueId}}\" name=\"email\" placeholder=\"Enter email address\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && email.valid, 'is-invalid' : f.submitted && !email.valid}\"\r\n               [(ngModel)]=\"userEdit.email\" #email=\"ngModel\" required maxlength=\"200\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\" />\r\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': email.valid, 'fa-times' : !email.valid}\" aria-hidden=\"true\"></i>\r\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.required\" class=\"invalid-feedback\">\r\n          {{'users.editor.EmailRequired' | translate}}\r\n        </span>\r\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.pattern\" class=\"invalid-feedback\">\r\n          {{'users.editor.InvalidEmail' | translate}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isEditMode\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isEditMode\" class=\"form-group row\">\r\n      <label for=\"newPassword-{{uniqueId}}\" class=\"col-form-label col-lg-2\">{{'users.editor.Password' | translate}}</label>\r\n      <div *ngIf=\"!isChangePassword && !isNewUser\" class=\"col-lg-10\">\r\n        <button type=\"button\" (click)=\"changePassword()\" class=\"btn btn-link\">{{'users.editor.ChangePassword' | translate}}</button>\r\n      </div>\r\n\r\n      <div *ngIf=\"isChangePassword || isNewUser\" class=\"col-lg-10\">\r\n        <div class=\"password-well card card-body bg-light\">\r\n          <div *ngIf=\"isEditingSelf\" class=\"form-group row has-feedback-icon\">\r\n            <label class=\"col-form-label col-lg-3\" for=\"currentPassword-{{uniqueId}}\">{{'users.editor.CurrentPassword' | translate}}</label>\r\n            <div class=\"col-lg-9\">\r\n              <input type=\"password\" attr.id=\"currentPassword-{{uniqueId}}\" name=\"currentPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter current password\" class=\"form-control\"\r\n                     [ngClass]=\"{'is-valid': f.submitted && currentPassword.valid, 'is-invalid' : f.submitted && !currentPassword.valid}\" [(ngModel)]=\"userEdit.currentPassword\" #currentPassword=\"ngModel\" required />\r\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': currentPassword.valid, 'fa-times' : !currentPassword.valid}\" aria-hidden=\"true\"></i>\r\n              <span *ngIf=\"showValidationErrors && f.submitted && !currentPassword.valid\" class=\"invalid-feedback\">\r\n                {{'users.editor.CurrentPasswordRequired' | translate}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isNewUser\" class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <hr class=\"password-separator-hr\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row has-feedback-icon\">\r\n            <label class=\"col-form-label col-lg-3\" for=\"newPassword-{{uniqueId}}\">{{'users.editor.NewPassword' | translate}}</label>\r\n            <div class=\"col-lg-9\">\r\n              <input type=\"password\" attr.id=\"newPassword-{{uniqueId}}\" name=\"newPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter new password\" class=\"form-control\"\r\n                     [ngClass]=\"{'is-valid': f.submitted && newPassword.valid, 'is-invalid' : f.submitted && !newPassword.valid}\" [(ngModel)]=\"userEdit.newPassword\" #newPassword=\"ngModel\"\r\n                     required minlength=\"6\" validateEqual=\"confirmPassword\" reverse=\"true\" />\r\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': newPassword.valid, 'fa-times' : !newPassword.valid}\" aria-hidden=\"true\"></i>\r\n              <span *ngIf=\"showValidationErrors && f.submitted && !newPassword.valid\" class=\"invalid-feedback\">\r\n                {{'users.editor.NewPasswordRequired' | translate}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <hr class=\"password-separator-hr\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row has-feedback-icon\">\r\n            <label class=\"col-form-label col-lg-3\" for=\"confirmPassword-{{uniqueId}}\">{{'users.editor.ConfirmPassword' | translate}}</label>\r\n            <div class=\"col-lg-9\">\r\n              <input type=\"password\" attr.id=\"confirmPassword-{{uniqueId}}\" name=\"confirmPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Confirm new password\" class=\"form-control\"\r\n                     [ngClass]=\"{'is-valid': f.submitted && confirmPassword.valid, 'is-invalid' : f.submitted && !confirmPassword.valid}\" [(ngModel)]=\"userEdit.confirmPassword\" #confirmPassword=\"ngModel\"\r\n                     required validateEqual=\"newPassword\" />\r\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': confirmPassword.valid, 'fa-times' : !confirmPassword.valid}\" aria-hidden=\"true\"></i>\r\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.required\" class=\"invalid-feedback\">\r\n                {{'users.editor.ConfirmationPasswordRequired' | translate}}\r\n              </span>\r\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.validateEqual && !confirmPassword.errors?.required\" class=\"invalid-feedback\">\r\n                {{'users.editor.PasswordMismatch' | translate}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--******************************************************************************************************-->\r\n\r\n    <div *ngIf=\"!isEditMode || canAssignRoles\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!isEditMode || canAssignRoles\" class=\"form-group row has-feedback-icon\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"roles-user-editor\">{{'users.editor.Roles' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p ngPreserveWhitespaces class=\"form-control-plaintext\">\r\n          <span *ngFor=\"let role of user.roles\">\r\n            <span title='{{getRoleByName(role)?.description}}' class=\"badge badge-pill badge-secondary\">{{role}}</span>\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode && canAssignRoles\" [ngClass]=\"{'is-valid': f.submitted && roles.valid, 'is-invalid' : f.submitted && !roles.valid}\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <select id=\"roles-user-editor\" name=\"roles\" [(ngModel)]=\"userEdit.roles\" #roles=\"ngModel\" #rolesSelector=\"bootstrap-select\"\r\n                class=\"selectpicker form-control left-status\" bootstrapSelect required multiple data-live-search=\"true\" data-actions-box=\"false\" data-live-search-placeholder=\"Search...\" title=\"Select Roles\">\r\n          <option *ngFor=\"let role of allRoles\" attr.data-content=\"<span title='{{role.description}}' class='badge badge-pill badge-secondary'>{{role.name}}</span>\" attr.value=\"{{role.name}}\">\r\n            {{role.name}}\r\n          </option>\r\n        </select>\r\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roles.valid, 'fa-times' : !roles.valid}\" aria-hidden=\"true\"></i>\r\n        <span *ngIf=\"showValidationErrors && f.submitted && !roles.valid\" class=\"invalid-feedback\">\r\n          {{'users.editor.RoleRequired' | translate}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--******************************************************************************************************-->\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"fullName-{{uniqueId}}\">{{'users.editor.FullName' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p class=\"form-control-plaintext\">{{user.fullName}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <input type=\"text\" attr.id=\"fullName-{{uniqueId}}\" name=\"fullName\" placeholder=\"Enter full name\" class=\"form-control\" [(ngModel)]=\"userEdit.fullName\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"phoneNumber-{{uniqueId}}\">{{'users.editor.PhoneNumber' | translate}}</label>\r\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <p class=\"form-control-plaintext\">{{user.phoneNumber}}</p>\r\n      </div>\r\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\r\n        <input type=\"text\" attr.id=\"phoneNumber-{{uniqueId}}\" name=\"phoneNumber\" placeholder=\"Enter phone number\" class=\"form-control\" [(ngModel)]=\"userEdit.phoneNumber\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!isViewOnly\" class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <hr [class.last-separator-hr]=\"!isEditMode\" [class.edit-last-separator-hr]=\"isEditMode\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!isViewOnly\" class=\"form-group row\">\r\n      <div class=\"col-sm-5\">\r\n        <div *ngIf=\"isGeneralEditor && isEditMode\" class=\"float-left\">\r\n          <div class=\"form-check user-enabled\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"idEnabled\" name=\"isEnabled\" [(ngModel)]=\"userEdit.isEnabled\">\r\n            <label for=\"idEnabled\" class=\"form-check-label\">{{'users.editor.Enabled' | translate}}</label>\r\n          </div>\r\n          <button *ngIf=\"userEdit.isLockedOut\" type=\"button\" (click)=\"unlockUser()\" class=\"btn btn-warning unblock-user\" [disabled]=\"isSaving\"><i class='fa fa-unlock-alt'></i> {{'users.editor.Unblock' | translate}}</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-7\">\r\n        <div ngPreserveWhitespaces class=\"float-right\">\r\n          <button *ngIf=\"!isEditMode && isGeneralEditor\" type=\"button\" (click)=\"close()\" class=\"btn btn-outline-secondary\"><i class='fa fa-close'></i> {{'users.editor.Close' | translate}}</button>\r\n          <button *ngIf=\"!isEditMode && !isGeneralEditor\" type=\"button\" (click)=\"edit()\" class=\"btn btn-outline-secondary\"><i class='fa fa-edit'></i> {{'users.editor.Edit' | translate}}</button>\r\n          <button *ngIf=\"isEditMode\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'users.editor.Cancel' | translate}}</button>\r\n          <button *ngIf=\"isEditMode\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\r\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('users.editor.Saving' | translate) : ('users.editor.Save' | translate)}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\"></div>\r\n  </form>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-preferences.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-preferences.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n    <div class=\"form-group row\">\r\n        <label for=\"refreshButton\" class=\"col-sm-3 col-form-label\">{{'preferences.ReloadPreferences' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <button id=\"refreshButton\" class=\"btn btn-outline-secondary\" (click)=\"reloadFromServer()\">\r\n                <i class=\"fa fa-refresh\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ReloadPreferencesHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"separator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"language\" class=\"col-sm-3 col-form-label\">{{'preferences.Language' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <select id=\"language\" [(ngModel)]=\"configurations.language\" #languageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\r\n                <option data-subtext=\"(Default)\" value=\"en\">{{'preferences.English' | translate}}</option>\r\n                <option value=\"fr\">{{'preferences.French' | translate}}</option>\r\n                <option value=\"de\">{{'preferences.German' | translate}}</option>\r\n                <option value=\"pt\">{{'preferences.Portuguese' | translate}}</option>\r\n                <option value=\"ar\">{{'preferences.Arabic' | translate}}</option>\r\n                <option value=\"ko\">{{'preferences.Korean' | translate}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.LanguageHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"separator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"homePage\" class=\"col-sm-3 col-form-label\">{{'preferences.HomePage' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <select id=\"homePage\" [(ngModel)]=\"configurations.homeUrl\" #homePageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\r\n                <option data-icon=\"fa fa-tachometer\" data-subtext=\"(Default)\" value=\"/\">{{'preferences.Dashboard' | translate}}</option>\r\n                <option *ngIf=\"canViewCustomers\" data-icon=\"fa fa-handshake-o\" value=\"/customers\">{{'preferences.Customers' | translate}}</option>\r\n                <option *ngIf=\"canViewProducts\" data-icon=\"fa fa-truck\" value=\"/products\">{{'preferences.Products' | translate}}</option>\r\n                <option *ngIf=\"canViewOrders\" data-icon=\"fa fa-shopping-cart\" value=\"/orders\">{{'preferences.Orders' | translate}}</option>\r\n                <option data-icon=\"fa fa-info-circle\" value=\"/about\">{{'preferences.About' | translate}}</option>\r\n                <option data-icon=\"fa fa-cog\" value=\"/settings\">{{'preferences.Settings' | translate}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.HomePageHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"separator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"defaultTheme\" class=\"col-sm-3 col-form-label\">{{'preferences.Theme' | translate}} </label>\r\n        <div *ngIf=\"themeSelectorToggle\" class=\"col-sm-4\">\r\n            <select id=\"defaultTheme\" [(ngModel)]=\"configurations.themeId\" bootstrapSelect class=\"selectpicker theme-picker form-control\">\r\n                <option *ngFor=\"let theme of themeManager.themes\"\r\n                attr.data-content=\"<div class='theme-item' style='background-color: {{theme.background}}; color: {{theme.color}}'>{{'preferences.' + theme.name + 'Theme' | translate}}\r\n                <span class='small'>{{theme.isDark ? '(Dark)' : ''}}</span></div>\">\r\n                {{theme.id}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ThemeHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"separator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardStatistics\">{{'preferences.DashboardStatistics' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"checkbox\">\r\n                <input name=\"dashboardStatistics\" [(ngModel)]=\"configurations.showDashboardStatistics\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardStatisticsHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n    <!--  -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"subseparator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardNotifications' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"checkbox\">\r\n                <input name=\"dashboardNotifications\" [(ngModel)]=\"configurations.showDashboardNotifications\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardNotificationsHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n    <!--  -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"subseparator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardTodo' | translate}} </label>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"checkbox\">\r\n                <input name=\"dashboardTodo\" [(ngModel)]=\"configurations.showDashboardTodo\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardTodoHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n    <!--  -->\r\n\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"subseparator-hr\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardBanner\">{{'preferences.DashboardBanner' | translate}}</label>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"checkbox\">\r\n                <input name=\"dashboardBanner\" [(ngModel)]=\"configurations.showDashboardBanner\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-5\">\r\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardBannerHint' | translate}}</p>\r\n        </div>\r\n    </div>\r\n    <!--  -->\r\n\r\n\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <hr class=\"last-separator-hr\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-3\">\r\n\r\n        </div>\r\n        <div class=\"col-sm-9\">\r\n            <div class=\"row float-left\">\r\n                <div class=\"col-sm-6 col-reset-default\">\r\n                    <button type=\"button\" (click)=\"resetDefault()\" class=\"btn btn-success\">\r\n                        <i class='fa fa-circle-o-notch'></i> {{'preferences.ResetDefault' | translate}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-sm-6 col-set-default\">\r\n                    <button type=\"button\" (click)=\"setAsDefault()\" class=\"btn btn-primary\">\r\n                        <i class='fa fa-hdd-o'></i> {{'preferences.SetDefault' | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/users-management.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/users-management.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div>\r\n  <div class=\"row control-box\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"form-group search-box\">\r\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'users.management.Search' | translate}}\">></search-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 pr-lg-5\">\r\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\r\n        <li *ngIf=\"canManageUsers && canAssignRoles\" class=\"nav-item toolbaritem\">\r\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newUser()\">\r\n            <i class=\"fa fa-plus-circle\"></i> {{'users.management.NewUser' | translate}}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\r\n                 [loadingIndicator]=\"loadingIndicator\"\r\n                 [rows]=\"rows\"\r\n                 [rowHeight]=\"35\"\r\n                 [headerHeight]=\"35\"\r\n                 [footerHeight]=\"35\"\r\n                 [columns]=\"columns\"\r\n                 [scrollbarV]=\"true\"\r\n                 [columnMode]=\"'force'\">\r\n  </ngx-datatable>\r\n\r\n  <ng-template #indexTemplate let-value=\"value\">\r\n    <strong>{{value}}</strong>\r\n  </ng-template>\r\n\r\n  <ng-template #userNameTemplate let-row=\"row\" let-value=\"value\">\r\n    <span [class.locked-out]=\"row.isLockedOut\" [class.user-disabled]=\"!row.isEnabled\">\r\n      <i *ngIf=\"row.isLockedOut\" class=\"fa fa-exclamation-triangle\"> </i>\r\n      <i *ngIf=\"!row.isEnabled\" class=\"fa fa-exclamation\"> </i>\r\n      {{value}}\r\n    </span>\r\n  </ng-template>\r\n\r\n  <ng-template #rolesTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\r\n    <span class=\"user-role badge badge-pill badge-secondary\" *ngFor=\"let role of value\">{{role}}</span>\r\n  </ng-template>\r\n\r\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\r\n    <div *ngIf=\"canManageUsers\">\r\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editUser(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'users.management.Edit' | translate}}</a>|\r\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteUser(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'users.management.Delete' | translate}}</a>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h4 *ngIf=\"!editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-plus\"></i> {{'users.management.NewUser' | translate}}</h4>\r\n          <h4 *ngIf=\"editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-circle-o\"></i> {{'users.management.EditUser' | translate:editingUserName}}</h4>\r\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <user-editor #userEditor [isGeneralEditor]=\"true\"></user-editor>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./src/app/app-error.handler.ts":
/*!**************************************!*\
  !*** ./src/app/app-error.handler.ts ***!
  \**************************************/
/*! exports provided: AppErrorHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppErrorHandler", function() { return AppErrorHandler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _services_extended_log_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/extended-log.service */ "./src/app/services/extended-log.service.ts");




let AppErrorHandler = class AppErrorHandler extends _angular_core__WEBPACK_IMPORTED_MODULE_1__["ErrorHandler"] {
    constructor(injector) {
        super();
        this.injector = injector;
    }
    handleError(error) {
        if (this.extendedLogService == null)
            this.extendedLogService = this.injector.get(_services_extended_log_service__WEBPACK_IMPORTED_MODULE_3__["ExtendedLogService"]);
        // if (this.alertService == null) {
        //    this.alertService = this.injector.get(AlertService);
        // }
        // this.alertService.showStickyMessage("Fatal Error!", "An unresolved error has occured. Please reload the page to correct this error", MessageSeverity.warn);
        // this.alertService.showStickyMessage("Unhandled Error", error.message || error, MessageSeverity.error, error);
        var extendedLog = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ExtendedLogViewModel"]();
        extendedLog.eventId = 0;
        extendedLog.message = error.message + '\r\n\r\nStack:\r\n' + error.stack;
        extendedLog.level = 4;
        extendedLog.name = error.name;
        extendedLog.timeStamp = new Date(Date.now());
        this.extendedLogService.addExtendedLog(extendedLog);
        if (confirm('Fatal Error!\nAn unresolved error has occured. Do you want to reload the page to correct this?\n\nError: ' + error.message)) {
            window.location.reload(true);
        }
        super.handleError(error);
    }
};
AppErrorHandler.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
];
AppErrorHandler = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AppErrorHandler);



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: LowerCaseUrlSerializer, AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LowerCaseUrlSerializer", function() { return LowerCaseUrlSerializer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _components_login_login_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/login/login.component */ "./src/app/components/login/login.component.ts");
/* harmony import */ var _components_home_home_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/home/home.component */ "./src/app/components/home/home.component.ts");
/* harmony import */ var _components_events_events_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/events/events.component */ "./src/app/components/events/events.component.ts");
/* harmony import */ var _components_extended_logs_extended_logs_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/extended-logs/extended-logs.component */ "./src/app/components/extended-logs/extended-logs.component.ts");
/* harmony import */ var _components_settings_settings_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/settings/settings.component */ "./src/app/components/settings/settings.component.ts");
/* harmony import */ var _components_about_about_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/about/about.component */ "./src/app/components/about/about.component.ts");
/* harmony import */ var _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/not-found/not-found.component */ "./src/app/components/not-found/not-found.component.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/auth-guard.service */ "./src/app/services/auth-guard.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/utilities */ "./src/app/helpers/utilities.ts");













class LowerCaseUrlSerializer extends _angular_router__WEBPACK_IMPORTED_MODULE_2__["DefaultUrlSerializer"] {
    parse(url) {
        const possibleSeparators = /[?;#]/;
        const indexOfSeparator = url.search(possibleSeparators);
        let processedUrl;
        if (indexOfSeparator > -1) {
            const separator = url.charAt(indexOfSeparator);
            const urlParts = _helpers_utilities__WEBPACK_IMPORTED_MODULE_12__["Utilities"].splitInTwo(url, separator);
            urlParts.firstPart = urlParts.firstPart.toLowerCase();
            processedUrl = urlParts.firstPart + separator + urlParts.secondPart;
        }
        else {
            processedUrl = url.toLowerCase();
        }
        return super.parse(processedUrl);
    }
}
const routes = [
    { path: '', component: _components_home_home_component__WEBPACK_IMPORTED_MODULE_4__["HomeComponent"], canActivate: [_services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__["AuthGuardService"]], data: { title: 'Home' } },
    { path: 'login', component: _components_login_login_component__WEBPACK_IMPORTED_MODULE_3__["LoginComponent"], data: { title: 'Login' } },
    { path: 'events', component: _components_events_events_component__WEBPACK_IMPORTED_MODULE_5__["EventsComponent"], canActivate: [_services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__["AuthGuardService"]], data: { title: 'Logs' } },
    { path: 'logs', component: _components_extended_logs_extended_logs_component__WEBPACK_IMPORTED_MODULE_6__["ExtendedLogsComponent"], canActivate: [_services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__["AuthGuardService"]], data: { title: 'Logs' } },
    { path: 'settings', component: _components_settings_settings_component__WEBPACK_IMPORTED_MODULE_7__["SettingsComponent"], canActivate: [_services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__["AuthGuardService"]], data: { title: 'Settings' } },
    { path: 'about', component: _components_about_about_component__WEBPACK_IMPORTED_MODULE_8__["AboutComponent"], data: { title: 'About Us' } },
    { path: 'home', redirectTo: '/', pathMatch: 'full' },
    { path: '**', component: _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_9__["NotFoundComponent"], data: { title: 'Page Not Found' } }
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
        providers: [
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_10__["AuthEndpointService"],
            _services_auth_guard_service__WEBPACK_IMPORTED_MODULE_11__["AuthGuardService"],
            { provide: _angular_router__WEBPACK_IMPORTED_MODULE_2__["UrlSerializer"], useClass: LowerCaseUrlSerializer }
        ]
    })
], AppRoutingModule);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "./node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! angular-oauth2-oidc */ "./node_modules/angular-oauth2-oidc/fesm2015/angular-oauth2-oidc.js");
/* harmony import */ var ngx_toasta__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-toasta */ "./node_modules/ngx-toasta/fesm2015/ngx-toasta.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-bootstrap/tooltip */ "./node_modules/ngx-bootstrap/tooltip/fesm2015/ngx-bootstrap-tooltip.js");
/* harmony import */ var ngx_bootstrap_popover__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-bootstrap/popover */ "./node_modules/ngx-bootstrap/popover/fesm2015/ngx-bootstrap-popover.js");
/* harmony import */ var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-bootstrap/dropdown */ "./node_modules/ngx-bootstrap/dropdown/fesm2015/ngx-bootstrap-dropdown.js");
/* harmony import */ var ngx_bootstrap_carousel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-bootstrap/carousel */ "./node_modules/ngx-bootstrap/carousel/fesm2015/ngx-bootstrap-carousel.js");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/fesm2015/ng2-charts.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_error_handler__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./app-error.handler */ "./src/app/app-error.handler.ts");
/* harmony import */ var _services_app_title_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./services/app-title.service */ "./src/app/services/app-title.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_configuration_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./services/configuration.service */ "./src/app/services/configuration.service.ts");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_theme_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./services/app-theme.service */ "./src/app/services/app-theme.service.ts");
/* harmony import */ var _services_local_storage_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./services/local-storage.service */ "./src/app/services/local-storage.service.ts");
/* harmony import */ var _services_auth_storage_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./services/auth-storage.service */ "./src/app/services/auth-storage.service.ts");
/* harmony import */ var _services_notification_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./services/notification.service */ "./src/app/services/notification.service.ts");
/* harmony import */ var _services_notification_mock_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./services/notification-mock.service */ "./src/app/services/notification-mock.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_event_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./services/event.service */ "./src/app/services/event.service.ts");
/* harmony import */ var _services_event_condition_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./services/event-condition.service */ "./src/app/services/event-condition.service.ts");
/* harmony import */ var _services_action_device_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./services/action-device.service */ "./src/app/services/action-device.service.ts");
/* harmony import */ var _services_data_point_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./services/data-point.service */ "./src/app/services/data-point.service.ts");
/* harmony import */ var _services_extended_log_service__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./services/extended-log.service */ "./src/app/services/extended-log.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./directives/equal-validator.directive */ "./src/app/directives/equal-validator.directive.ts");
/* harmony import */ var _directives_last_element_directive__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./directives/last-element.directive */ "./src/app/directives/last-element.directive.ts");
/* harmony import */ var _directives_autofocus_directive__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./directives/autofocus.directive */ "./src/app/directives/autofocus.directive.ts");
/* harmony import */ var _directives_bootstrap_tab_directive__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./directives/bootstrap-tab.directive */ "./src/app/directives/bootstrap-tab.directive.ts");
/* harmony import */ var _directives_bootstrap_toggle_directive__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./directives/bootstrap-toggle.directive */ "./src/app/directives/bootstrap-toggle.directive.ts");
/* harmony import */ var _directives_bootstrap_select_directive__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./directives/bootstrap-select.directive */ "./src/app/directives/bootstrap-select.directive.ts");
/* harmony import */ var _directives_bootstrap_datepicker_directive__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./directives/bootstrap-datepicker.directive */ "./src/app/directives/bootstrap-datepicker.directive.ts");
/* harmony import */ var _pipes_group_by_pipe__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./pipes/group-by.pipe */ "./src/app/pipes/group-by.pipe.ts");
/* harmony import */ var _pipes_enum_to_array_pipe__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./pipes/enum-to-array.pipe */ "./src/app/pipes/enum-to-array.pipe.ts");
/* harmony import */ var _components_app_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/app.component */ "./src/app/components/app.component.ts");
/* harmony import */ var _components_login_login_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/login/login.component */ "./src/app/components/login/login.component.ts");
/* harmony import */ var _components_home_home_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/home/home.component */ "./src/app/components/home/home.component.ts");
/* harmony import */ var _components_about_about_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/about/about.component */ "./src/app/components/about/about.component.ts");
/* harmony import */ var _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/not-found/not-found.component */ "./src/app/components/not-found/not-found.component.ts");
/* harmony import */ var _components_controls_notifications_management_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/controls/notifications-management.component */ "./src/app/components/controls/notifications-management.component.ts");
/* harmony import */ var _components_controls_search_box_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/controls/search-box.component */ "./src/app/components/controls/search-box.component.ts");
/* harmony import */ var _components_settings_settings_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/settings/settings.component */ "./src/app/components/settings/settings.component.ts");
/* harmony import */ var _components_settings_user_editor_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/settings/user-editor.component */ "./src/app/components/settings/user-editor.component.ts");
/* harmony import */ var _components_settings_user_preferences_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/settings/user-preferences.component */ "./src/app/components/settings/user-preferences.component.ts");
/* harmony import */ var _components_settings_users_management_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/settings/users-management.component */ "./src/app/components/settings/users-management.component.ts");
/* harmony import */ var _components_settings_roles_management_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/settings/roles-management.component */ "./src/app/components/settings/roles-management.component.ts");
/* harmony import */ var _components_settings_role_editor_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/settings/role-editor.component */ "./src/app/components/settings/role-editor.component.ts");
/* harmony import */ var _components_extended_logs_extended_logs_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/extended-logs/extended-logs.component */ "./src/app/components/extended-logs/extended-logs.component.ts");
/* harmony import */ var _components_extended_logs_extended_logs_management_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/extended-logs/extended-logs-management.component */ "./src/app/components/extended-logs/extended-logs-management.component.ts");
/* harmony import */ var _components_extended_logs_extended_log_editor_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/extended-logs/extended-log-editor.component */ "./src/app/components/extended-logs/extended-log-editor.component.ts");
/* harmony import */ var _components_events_events_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/events/events.component */ "./src/app/components/events/events.component.ts");
/* harmony import */ var _components_events_events_management_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/events/events-management.component */ "./src/app/components/events/events-management.component.ts");
/* harmony import */ var _components_events_event_editor_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/events/event-editor.component */ "./src/app/components/events/event-editor.component.ts");
/* harmony import */ var _components_events_event_conditions_management_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/events/event-conditions-management.component */ "./src/app/components/events/event-conditions-management.component.ts");































































let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__["BrowserAnimationsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClientModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_16__["AppRoutingModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"].forRoot({
                loader: {
                    provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateLoader"],
                    useClass: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_19__["TranslateLanguageLoader"]
                }
            }),
            _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_7__["NgxDatatableModule"],
            angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_8__["OAuthModule"].forRoot(),
            ngx_toasta__WEBPACK_IMPORTED_MODULE_9__["ToastaModule"].forRoot(),
            ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_11__["TooltipModule"].forRoot(),
            ngx_bootstrap_popover__WEBPACK_IMPORTED_MODULE_12__["PopoverModule"].forRoot(),
            ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_13__["BsDropdownModule"].forRoot(),
            ngx_bootstrap_carousel__WEBPACK_IMPORTED_MODULE_14__["CarouselModule"].forRoot(),
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__["ModalModule"].forRoot(),
            ng2_charts__WEBPACK_IMPORTED_MODULE_15__["ChartsModule"]
        ],
        declarations: [
            _components_app_component__WEBPACK_IMPORTED_MODULE_43__["AppComponent"],
            _components_login_login_component__WEBPACK_IMPORTED_MODULE_44__["LoginComponent"],
            _components_home_home_component__WEBPACK_IMPORTED_MODULE_45__["HomeComponent"],
            _components_events_events_component__WEBPACK_IMPORTED_MODULE_59__["EventsComponent"], _components_events_events_management_component__WEBPACK_IMPORTED_MODULE_60__["EventsManagementComponent"], _components_events_event_editor_component__WEBPACK_IMPORTED_MODULE_61__["EventEditorComponent"], _components_events_event_conditions_management_component__WEBPACK_IMPORTED_MODULE_62__["EventConditionsManagementComponent"],
            _components_extended_logs_extended_logs_component__WEBPACK_IMPORTED_MODULE_56__["ExtendedLogsComponent"], _components_extended_logs_extended_logs_management_component__WEBPACK_IMPORTED_MODULE_57__["ExtendedLogsManagementComponent"], _components_extended_logs_extended_log_editor_component__WEBPACK_IMPORTED_MODULE_58__["ExtendedLogEditorComponent"],
            _components_settings_settings_component__WEBPACK_IMPORTED_MODULE_50__["SettingsComponent"],
            _components_settings_users_management_component__WEBPACK_IMPORTED_MODULE_53__["UsersManagementComponent"], _components_settings_user_editor_component__WEBPACK_IMPORTED_MODULE_51__["UserEditorComponent"], _components_settings_user_preferences_component__WEBPACK_IMPORTED_MODULE_52__["UserPreferencesComponent"],
            _components_settings_roles_management_component__WEBPACK_IMPORTED_MODULE_54__["RolesManagementComponent"], _components_settings_role_editor_component__WEBPACK_IMPORTED_MODULE_55__["RoleEditorComponent"],
            _components_about_about_component__WEBPACK_IMPORTED_MODULE_46__["AboutComponent"],
            _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_47__["NotFoundComponent"],
            _components_controls_notifications_management_component__WEBPACK_IMPORTED_MODULE_48__["NotificationsManagementComponent"],
            _components_controls_search_box_component__WEBPACK_IMPORTED_MODULE_49__["SearchBoxComponent"],
            _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_34__["EqualValidatorDirective"],
            _directives_last_element_directive__WEBPACK_IMPORTED_MODULE_35__["LastElementDirective"],
            _directives_autofocus_directive__WEBPACK_IMPORTED_MODULE_36__["AutofocusDirective"],
            _directives_bootstrap_tab_directive__WEBPACK_IMPORTED_MODULE_37__["BootstrapTabDirective"],
            _directives_bootstrap_toggle_directive__WEBPACK_IMPORTED_MODULE_38__["BootstrapToggleDirective"],
            _directives_bootstrap_select_directive__WEBPACK_IMPORTED_MODULE_39__["BootstrapSelectDirective"],
            _directives_bootstrap_datepicker_directive__WEBPACK_IMPORTED_MODULE_40__["BootstrapDatepickerDirective"],
            _pipes_group_by_pipe__WEBPACK_IMPORTED_MODULE_41__["GroupByPipe"], _pipes_enum_to_array_pipe__WEBPACK_IMPORTED_MODULE_42__["EnumToArrayPipe"]
        ],
        providers: [
            { provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ErrorHandler"], useClass: _app_error_handler__WEBPACK_IMPORTED_MODULE_17__["AppErrorHandler"] },
            { provide: angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_8__["OAuthStorage"], useClass: _services_auth_storage_service__WEBPACK_IMPORTED_MODULE_24__["AuthStorageService"] },
            _services_alert_service__WEBPACK_IMPORTED_MODULE_21__["AlertService"],
            _services_app_theme_service__WEBPACK_IMPORTED_MODULE_22__["AppThemeService"],
            _services_configuration_service__WEBPACK_IMPORTED_MODULE_20__["ConfigurationService"],
            _services_app_title_service__WEBPACK_IMPORTED_MODULE_18__["AppTitleService"],
            _services_app_translation_service__WEBPACK_IMPORTED_MODULE_19__["AppTranslationService"],
            _services_notification_service__WEBPACK_IMPORTED_MODULE_25__["NotificationService"],
            _services_account_service__WEBPACK_IMPORTED_MODULE_27__["AccountService"],
            _services_extended_log_service__WEBPACK_IMPORTED_MODULE_32__["ExtendedLogService"],
            _services_event_service__WEBPACK_IMPORTED_MODULE_28__["EventService"],
            _services_event_condition_service__WEBPACK_IMPORTED_MODULE_29__["EventConditionService"],
            _services_action_device_service__WEBPACK_IMPORTED_MODULE_30__["ActionDeviceService"],
            _services_data_point_service__WEBPACK_IMPORTED_MODULE_31__["DataPointService"],
            _services_notification_mock_service__WEBPACK_IMPORTED_MODULE_26__["NotificationMockService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["AccountEndpointService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["ExtendedLogEndpointService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["EventEndpointService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["EventConditionEndpointService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["ActionDeviceEndpointService"],
            _services_endpoint_services__WEBPACK_IMPORTED_MODULE_33__["DataPointEndpointService"],
            _services_local_storage_service__WEBPACK_IMPORTED_MODULE_23__["LocalStorageService"]
        ],
        bootstrap: [_components_app_component__WEBPACK_IMPORTED_MODULE_43__["AppComponent"]]
    })
], AppModule);



/***/ }),

/***/ "./src/app/assets/images/logo-white.png":
/*!**********************************************!*\
  !*** ./src/app/assets/images/logo-white.png ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "logo-white.png";

/***/ }),

/***/ "./src/app/assets/locale/ar.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/ar.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"أهلا بك\",\"Notifications\":\"إعلام\",\"New\":\"جديد\"},\"mainMenu\":{\"Appointments\":\"المواعيد\",\"Customers\":\"الزبائن\",\"Products\":\"المنتجات\",\"Orders\":\"الأوامر\",\"About\":\"حول منجز التطبيق\",\"Logout\":\"الخروج\"},\"pageHeader\":{\"Dashboard\":\"لوحة القيادة\",\"Customers\":\"الزبائن\",\"Products\":\"المنتجات\",\"Orders\":\"الأوامر\",\"NotFound\":\"لا يوجد\",\"About\":\"حول منجز التطبيق\",\"Settings\":\"إعدادات\"},\"home\":{\"NoWidgets1\":\"لم يتم عرض أية أدوات. اذهب إلى\",\"NoWidgets2\":\"لتكوين الأدوات المتاحة\",\"StatisticsTitle\":\"بعض الاشياء الهامة\"},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"الصفحة التي تبحث عنها غير موجودة\",\"backToHome\":\"العودة إلى لوحة الإستقبال\"},\"settings\":{\"tab\":{\"Profile\":\"الملف الشخصي\",\"Preferences\":\"التفضيلات\",\"Users\":\"المستخدمين\",\"Roles\":\"الأدوار\"},\"header\":{\"UserProfile\":\"ملف تعريفي للمستخدم\",\"UserPreferences\":\"خيارات المستخدم\",\"UserDepartments\":\"أقسام المستخدم\",\"UsersManagements\":\"إدارة المستخدمين\",\"RolesManagement\":\"إدارة الأدوار\"}},\"preferences\":{\"ReloadPreferences\":\"إعادة تحميل التفضيلات:\",\"ReloadPreferencesHint\":\"(تحميل التفضيلات الافتراضية (يتم تجاهل التغييرات المحلية\",\"Language\":\"لغة:\",\"English\":\"الإنجليزية\",\"French\":\"الفرنسية\",\"German\":\"الألمانية\",\"Portuguese\":\"البرتغالية\",\"Arabic\":\"العربية\",\"Korean\":\"الكورية\",\"LanguageHint\":\"اختيار اللغة المفضلة لحسابك\",\"HomePage\":\"الصفحة الرئيسية:\",\"Dashboard\":\"لوحة القيادة\",\"Customers\":\"الزبائن\",\"Products\":\"منتجات\",\"Orders\":\"أوامر\",\"About\":\"حول\",\"Settings\":\"إعدادات\",\"HomePageHint\":\"حدد الصفحة الافتراضية للانتقال إلى تسجيل الدخول\",\"Theme\":\"فكرة رئيسية:\",\"DefaultTheme\":\"الافتراضي\",\"CosmoTheme\":\"كوزمو\",\"SolarTheme\":\"شمسي\",\"CeruleanTheme\":\"فندق\",\"FlatlyTheme\":\"بشكل قاطع\",\"SketchyTheme\":\"سطحي\",\"SlateTheme\":\"سليت\",\"SpacelabTheme\":\"المختبر الفضائي\",\"SuperheroTheme\":\"خارقة\",\"UnitedTheme\":\"متحد\",\"JournalTheme\":\"مجلة\",\"LumenTheme\":\"التجويف\",\"MintyTheme\":\"منتي\",\"PulseTheme\":\"نبض\",\"ThemeHint\":\"حدد اللون الافتراضي لحسابك\",\"DashboardStatistics\":\"إحصائيات لوحة التحكم:\",\"DashboardStatisticsHint\":\"عرض الرسم البياني التجريبي على لوحة القيادة\",\"DashboardNotifications\":\"إشعارات لوحة التحكم:\",\"DashboardNotificationsHint\":\"عرض إشعارات التطبيق على لوحة التحكم\",\"DashboardTodo\":\"لوحة التحكم للواجبات:\",\"DashboardTodoHint\":\"يظهر الوحة التجريبية للواجبات على لوحة القيادة\",\"DashboardBanner\":\"شعار لوحة التحكم:\",\"DashboardBannerHint\":\"عرض معلومات الراية التجريبية على لوحة القيادة\",\"ResetDefault\":\"اعادة تشغيل الأصل\",\"SetDefault\":\"تعيين الأصل\"},\"users\":{\"management\":{\"Search\":\"البحث عن المستخدم...\",\"NewUser\":\"مستخدم جديد\",\"Edit\":\"تصحيح\",\"Delete\":\"حذف\",\"EditUser\":\"تحرير العضو \\\"{{name}}\\\"\",\"Title\":\"عنوان\",\"UserName\":\"اسم المستخدم\",\"FullName\":\"الإسم الكامل\",\"Email\":\"البريد الإلكتروني\",\"Roles\":\"الأدوار\",\"PhoneNumber\":\"رقم الهاتف\"},\"editor\":{\"JobTitle\":\"المسمى الوظيفي: \",\"UserName\":\"اسم المستخدم:\",\"UserNameRequired\":\"(مطلوب اسم المستخدم (الحد الأدنى من 2 والحد الأقصى 200 حرفا\",\"Password\":\"كلمة المرور:\",\"PasswordHint\":\"كلمة المرور مطلوبة عند تغيير اسم المستخدم\",\"CurrentPasswordRequired\":\"كلمة المرور الحالية مطلوبة\",\"Email\":\"البريد الإلكتروني:\",\"EmailRequired\":\"(عنوان البريد الإلكتروني مطلوب (بحد أقصى 200 حرف\",\"InvalidEmail\":\"البريد الإلكتروني المحدد غير صالح\",\"ChangePassword\":\"غير كلمة المرور\",\"CurrentPassword\":\"كلمة المرور الحالية:\",\"NewPassword\":\"كلمة مرور جديدة:\",\"NewPasswordRequired\":\"الحد الأدنى من 6 أحرف) مطلوب كلمة مرور)\",\"ConfirmPassword\":\"تأكيد كلمة المرور:\",\"ConfirmationPasswordRequired\":\"مطلوب كلمة مرور التأكيد\",\"PasswordMismatch\":\"لا تتطابق كلمة المرور الجديدة وكلمة مرور التأكيد\",\"Roles\":\"الأدوار:\",\"FullName\":\" الإسم الكامل:\",\"RoleRequired\":\" مطلوب دور\",\"PhoneNumber\":\"الهاتف #:\",\"Enabled\":\"تمكين\",\"Unblock\":\"رفع الحظر\",\"Close\":\"إغلاق\",\"Edit\":\"تصحيح\",\"Cancel\":\"إلغاء\",\"Save\":\"حفظ\",\"Saving\":\"جار الحفظ...\"}},\"roles\":{\"management\":{\"Search\":\"البحث عن دور...\",\"NewRole\":\"دور جديد\",\"Edit\":\"تصحيح\",\"Details\":\"تفاصيل\",\"Delete\":\"حذف\",\"RoleDetails\":\"تفاصيل الدور \\\"{{name}}\\\"\",\"EditRole\":\"  تحرير الدور\\\"{{name}}\\\"\",\"Name\":\"اسم\",\"Description\":\"وصف\",\"Users\":\"المستخدمين\"},\"editor\":{\"Name\":\"اسم:\",\"Description\":\"وصف:\",\"RoleNameRequired\":\"(اسم الدور مطلوب (بحد أدنى 2 و 200 حرف كحد أقصى\",\"SelectAll\":\"اختر الكل\",\"SelectNone\":\"لا تختر شيء\",\"Close\":\"إغلاق\",\"Cancel\":\"إلغاء\",\"Save\":\"حفظ\",\"Saving\":\"جار الحفظ...\"}},\"notifications\":{\"Delete\":\"حذف الإشعار\",\"Pin\":\"رفع الأولوية\",\"Date\":\"تاريخ\",\"Notification\":\"إعلام\"},\"todoDemo\":{\"management\":{\"Search\":\"البحث عن مهمة...\",\"HideCompleted\":\"إكتمال الإخفاء\",\"AddTask\":\"إضافة مهمة\",\"Delete\":\"حذف المهمة\",\"Important\":\"وضع علامة كمهمة\",\"Task\":\"مهمة\",\"Description\":\"وصف\"},\"editor\":{\"NewTask\":\"مهمة جديدة\",\"Name\":\"اسم\",\"TaskNameRequired\":\"مطلوب اسم المهمة\",\"Description\":\"وصف\",\"Important\":\"وضع علامة لإظهار الأهمية\",\"AddTask\":\"إضافة مهمة\"}}}");

/***/ }),

/***/ "./src/app/assets/locale/de.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/de.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"Willkommen\",\"Notifications\":\"Benachrichtigungen\",\"New\":\"Neu\"},\"mainMenu\":{\"Appointments\":\"Termine\",\"Customers\":\"Kunden\",\"Products\":\"Produkte\",\"Orders\":\"Bestellungen\",\"About\":\"Über\",\"Logout\":\"Abmelden\"},\"pageHeader\":{\"Dashboard\":\"Übersicht\",\"Customers\":\"Kunden\",\"Products\":\"Produkte\",\"Orders\":\"Bestellungen\",\"NotFound\":\"Nicht gefunden\",\"About\":\"Über\",\"Settings\":\"Einstellungen\"},\"home\":{\"NoWidgets1\":\"Keine Elemente zur Anzeige vorhanden. Gehe zu\",\"NoWidgets2\":\"um die Anzeige zu konfigurieren\",\"StatisticsTitle\":\"Irgendwas ganz Wichtiges\"},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"Die angeforderte Seite wurde nicht gefunden\",\"backToHome\":\"Zurück zur Startseite\"},\"settings\":{\"tab\":{\"Profile\":\"Profil\",\"Preferences\":\"Einstellungen\",\"Users\":\"Benutzer\",\"Roles\":\"Rollen\"},\"header\":{\"UserProfile\":\"Benutzerprofil\",\"UserPreferences\":\"Benutzereinstellungen\",\"UserDepartments\":\"Benutzerabteilungen\",\"UsersManagements\":\"Benutzerverwaltung\",\"RolesManagement\":\"Rollenverwaltung\"}},\"preferences\":{\"ReloadPreferences\":\"Einstellungen aktualisieren:\",\"ReloadPreferencesHint\":\"Vorgabeeinstellungen laden (lokale Einstellungen überschreiben)\",\"Language\":\"Sprache:\",\"English\":\"English\",\"French\":\"Französisch\",\"German\":\"Deutsch\",\"Portuguese\":\"Portugiesisch\",\"Arabic\":\"Arabisch\",\"Korean\":\"Koreanisch\",\"LanguageHint\":\"Die bevorzugte Anzeigesprache auswählen\",\"HomePage\":\"Startseite:\",\"Dashboard\":\"Dashboard\",\"Customers\":\"Kunden\",\"Products\":\"Produkte\",\"Orders\":\"Bestellungen\",\"About\":\"Über\",\"Settings\":\"Einstellungen\",\"HomePageHint\":\"Die Standardseite zur Anzeige nach der Anmeldung wählen\",\"Theme\":\"Farbschema:\",\"DefaultTheme\":\"Standard\",\"CosmoTheme\":\"Cosmo\",\"SolarTheme\":\"Solar\",\"CeruleanTheme\":\"Cerulean\",\"FlatlyTheme\":\"Rundweg\",\"SketchyTheme\":\"Skizzenhaft\",\"SlateTheme\":\"Schiefer\",\"SpacelabTheme\":\"Weltraumlabor\",\"SuperheroTheme\":\"Superheld\",\"UnitedTheme\":\"Vereinigt\",\"JournalTheme\":\"Tagebuch\",\"LumenTheme\":\"Lumen\",\"MintyTheme\":\"Minz\",\"PulseTheme\":\"Impuls\",\"ThemeHint\":\"Das bevorzugte Farbschema wählen\",\"DashboardStatistics\":\"Dashboard Statistiken:\",\"DashboardStatisticsHint\":\"Zeigt das Demo-Statistik Element auf dem Dashboard\",\"DashboardNotifications\":\"Dashboard Benachrichtigungen:\",\"DashboardNotificationsHint\":\"Zeige Anwendungsbenachrichtigungen auf dem Dashboard\",\"DashboardTodo\":\"Dashboard Beispielaufgaben:\",\"DashboardTodoHint\":\"Zeigt das Beispielaufgaben Element auf dem Dashboard\",\"DashboardBanner\":\"Dashboard Banner:\",\"DashboardBannerHint\":\"Zeigt das Info-Banner Element auf dem Dashboard\",\"ResetDefault\":\"Vorgabeeinstellungen\",\"SetDefault\":\"Als Standard setzen\"},\"users\":{\"management\":{\"Search\":\"Benutzer suchen...\",\"NewUser\":\"Neuer Benutzer\",\"Edit\":\"Bearb.\",\"Delete\":\"Entf.\",\"EditUser\":\"Benutzer \\\"{{name}}\\\" bearbeiten\",\"Title\":\"Titel\",\"UserName\":\"Benutzername\",\"FullName\":\"Vor- und Nachname\",\"Email\":\"Email\",\"Roles\":\"Rollen\",\"PhoneNumber\":\"Telefon\"},\"editor\":{\"JobTitle\":\"Beruf: \",\"UserName\":\"Benutzername:\",\"UserNameRequired\":\"Ein Benutzername ist erforderlich (mindestens 2, maximal 200 Zeichen)\",\"Password\":\"Passwort:\",\"PasswordHint\":\"Passworteingabe ist erforderlich, wenn der Benutzername geändert werden soll\",\"CurrentPasswordRequired\":\"Aktuelles Passwort ist erforderlich\",\"Email\":\"Email:\",\"EmailRequired\":\"Email Adresse ist erforderlich (maximal 200 Zeichen)\",\"InvalidEmail\":\"Angegebene Email-Adresse ist ungültig\",\"ChangePassword\":\"Passwort ändern\",\"CurrentPassword\":\"Aktuelles Passwort:\",\"NewPassword\":\"Neues Passwort:\",\"NewPasswordRequired\":\"Neues Passwort ist erforderlich (mindestens 6 Zeichen)\",\"ConfirmPassword\":\"Passwort bestätigen:\",\"ConfirmationPasswordRequired\":\"Passwort Bestätigung ist erforderlich\",\"PasswordMismatch\":\"Die angegebenen Passwörter stimmen nicht überein\",\"Roles\":\"Rollen:\",\"FullName\":\"Vollständiger Name:\",\"RoleRequired\":\" Rolle ist erforderlich\",\"PhoneNumber\":\"Telefon #:\",\"Enabled\":\"Aktiviert\",\"Unblock\":\"Entsperren\",\"Close\":\"Schliessen\",\"Edit\":\"Bearbeiten\",\"Cancel\":\"Abbrechen\",\"Save\":\"Speichern\",\"Saving\":\"Speichere...\"}},\"roles\":{\"management\":{\"Search\":\"Suche nach Rollen...\",\"NewRole\":\"Neue Rolle\",\"Edit\":\"Bearb.\",\"Details\":\"Details\",\"Delete\":\"Entf.\",\"RoleDetails\":\"Rollen Details \\\"{{name}}\\\"\",\"EditRole\":\"Rolle \\\"{{name}}\\\" bearbeiten\",\"Name\":\"Name\",\"Description\":\"Beschreibung\",\"Users\":\"Benutzer\"},\"editor\":{\"Name\":\"Name:\",\"Description\":\"Beschreibung:\",\"RoleNameRequired\":\"Ein Rollenname ist erforderlich (mindestens 2, maximal 200 Zeichen)\",\"SelectAll\":\"Alle auswählen\",\"SelectNone\":\"Auswahl aufheben\",\"Close\":\"Schliessen\",\"Cancel\":\"Abbrechen\",\"Save\":\"Speichern\",\"Saving\":\"Speichere...\"}},\"notifications\":{\"Delete\":\"Benachrichtigung löschen\",\"Pin\":\"Benachrichtigung anheften\",\"Date\":\"Datum\",\"Notification\":\"Benachrichtigung\"},\"todoDemo\":{\"management\":{\"Search\":\"Suche nach Aufgaben...\",\"HideCompleted\":\"Abgeschlossene ausblenden\",\"AddTask\":\"Aufgabe hinzufügen\",\"Delete\":\"Aufgabe löschen\",\"Important\":\"Als wichtig markieren\",\"Task\":\"Aufgabe\",\"Description\":\"Beschreibung\"},\"editor\":{\"NewTask\":\"Neue Aufgabe\",\"Name\":\"Name\",\"TaskNameRequired\":\"Aufgabenname ist erforderlich\",\"Description\":\"Beschreibung\",\"Important\":\"Als wichtig markieren\",\"AddTask\":\"Aufgabe hinzufügen\"}}}");

/***/ }),

/***/ "./src/app/assets/locale/en.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/en.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, events, eventConditions, logs, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"Welcome\",\"Notifications\":\"Notifications\",\"New\":\"New\"},\"mainMenu\":{\"Events\":\"Events\",\"Logs\":\"Logs\",\"About\":\"About\",\"Logout\":\"Logout\"},\"pageHeader\":{\"Dashboard\":\"Dashboard\",\"Events\":\"Events\",\"Logs\":\"Logs\",\"NotFound\":\"Not-Found\",\"About\":\"About\",\"Settings\":\"Settings\"},\"home\":{\"NoWidgets1\":\"You have no widgets displayed. Goto\",\"NoWidgets2\":\"to configure available widgets\",\"StatisticsTitle\":\"Some Important Stuff\"},\"events\":{\"management\":{\"Search\":\"Search for event...\",\"NewEvent\":\"New Event\",\"EditEvent\":\"Edit Event {{name}}\",\"Edit\":\"Edit\",\"Details\":\"Details\",\"Delete\":\"Delete\",\"EventDetails\":\"Event Details for {{eventId}}: {{name}}\",\"EventId\":\"Id\",\"IsEnabled\":\"Enabled\",\"Name\":\"Name\",\"ActionDevice\":\"Device\",\"State\":\"Action\",\"EventConditions\":\"Conditions to match\"},\"editor\":{\"ActionDevice\":\"Action Device\",\"Cancel\":\"Cancel\",\"Close\":\"Close\",\"Edit\":\"Edit\",\"EventConditions\":\"Conditions\",\"EventId\":\"Id\",\"IsEnabled\":\"Enabled\",\"Name\":\"Name\",\"Save\":\"Save\",\"Saving\":\"Saving...\",\"State\":\"State\"}},\"eventConditions\":{\"management\":{\"Search\":\"Search for condition...\",\"NewEventCondition\":\"New Condition\",\"EditEventCondition\":\"Edit Condition\",\"Edit\":\"Edit\",\"Details\":\"Details\",\"Delete\":\"Delete\",\"EventConditionDetails\":\"Event Condition Details for {{eventConditionId}}\",\"EventConditionId\":\"Id\",\"EventId\":\"EventId\",\"DataPoint\":\"Data Point\",\"Operator\":\"Operator\",\"Value\":\"Value\",\"Cancel\":\"Cancel\",\"Save\":\"Save\"},\"editor\":{\"EventConditionId\":\"Id\",\"EventId\":\"EventId\",\"DataPoint\":\"Data Point\",\"Operator\":\"Operator\",\"Value\":\"Value\",\"Cancel\":\"Cancel\",\"Close\":\"Close\",\"Edit\":\"Edit\",\"Save\":\"Save\",\"Saving\":\"Saving...\"}},\"logs\":{\"management\":{\"Search\":\"Search for log...\",\"Edit\":\"Edit\",\"Details\":\"Details\",\"ClearLog\":\"Clear Logs\",\"LogDetails\":\"Log Details\",\"EditLog\":\"Edit Log\",\"Id\":\"Id\",\"EventId\":\"EventId\",\"Level\":\"Level\",\"Name\":\"Name\",\"Message\":\"Message\",\"Browser\":\"Browser\",\"Host\":\"Host\",\"Path\":\"Path\",\"User\":\"User\",\"Method\":\"Method\",\"StatusCode\":\"Status Code\",\"ServerVariables\":\"Server Variables\",\"Cookies\":\"Cookies\",\"FormVariables\":\"Form Variables\",\"QueryString\":\"Query String\",\"TimeStamp\":\"TimeStamp\"},\"editor\":{\"Id\":\"Id\",\"EventId\":\"EventId\",\"Level\":\"Level\",\"Name\":\"Name\",\"Message\":\"Message\",\"Browser\":\"Browser\",\"Host\":\"Host\",\"Path\":\"Path\",\"User\":\"User\",\"Method\":\"Method\",\"StatusCode\":\"Status\",\"ServerVariables\":\"Server Variables\",\"Cookies\":\"Cookies\",\"FormVariables\":\"Form Variables\",\"QueryString\":\"Query String\",\"TimeStamp\":\"Time\",\"SelectAll\":\"Select all\",\"SelectNone\":\"Select none\",\"Close\":\"Close\",\"Cancel\":\"Cancel\",\"Save\":\"Save\",\"Saving\":\"Saving...\"}},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"The page you are looking for does not exist\",\"backToHome\":\"Back to home\"},\"settings\":{\"tab\":{\"Profile\":\"Profile\",\"Preferences\":\"Preferences\",\"Users\":\"Users\",\"Roles\":\"Roles\"},\"header\":{\"UserProfile\":\"User Profile\",\"UserPreferences\":\"User Preferences\",\"UsersManagements\":\"Users Managements\",\"RolesManagement\":\"Roles Management\"}},\"preferences\":{\"ReloadPreferences\":\"Reload Preferences:\",\"ReloadPreferencesHint\":\"Load default preferences (local changes are discarded)\",\"Language\":\"Language:\",\"English\":\"English\",\"French\":\"French\",\"German\":\"German\",\"Portuguese\":\"Portuguese\",\"Arabic\":\"Arabic\",\"Korean\":\"Korean\",\"LanguageHint\":\"Select the preferred language for your account\",\"HomePage\":\"Home Page:\",\"Dashboard\":\"Dashboard\",\"About\":\"About\",\"Settings\":\"Settings\",\"HomePageHint\":\"Select the default page to navigate to on login\",\"Theme\":\"Theme:\",\"DefaultTheme\":\"Default\",\"CosmoTheme\":\"Cosmo\",\"SolarTheme\":\"Solar\",\"CeruleanTheme\":\"Cerulean\",\"FlatlyTheme\":\"Flatly\",\"SketchyTheme\":\"Sketchy\",\"SlateTheme\":\"Slate\",\"SpacelabTheme\":\"Spacelab\",\"SuperheroTheme\":\"Superhero\",\"UnitedTheme\":\"United\",\"JournalTheme\":\"Journal\",\"LumenTheme\":\"Lumen\",\"MintyTheme\":\"Minty\",\"PulseTheme\":\"Pulse\",\"ThemeHint\":\"Select the default color theme for your account\",\"DashboardStatistics\":\"Dashboard Statistics:\",\"DashboardStatisticsHint\":\"Show demo graph widget on the dashboard\",\"DashboardNotifications\":\"Dashboard Notifications:\",\"DashboardNotificationsHint\":\"Show application notifications on the dashboard\",\"DashboardTodo\":\"Dashboard Todo:\",\"DashboardTodoHint\":\"Shows demo todo widget on the dashboard\",\"DashboardBanner\":\"Dashboard Banner:\",\"DashboardBannerHint\":\"Show demo information banner widget on the dashboard\",\"ResetDefault\":\"Reset default\",\"SetDefault\":\"Set as default\"},\"users\":{\"management\":{\"Search\":\"Search for user...\",\"NewUser\":\"New User\",\"Edit\":\"Edit\",\"Delete\":\"Delete\",\"EditUser\":\"Edit User \\\"{{name}}\\\"\",\"Title\":\"Title\",\"UserName\":\"User Name\",\"FullName\":\"Full Name\",\"Email\":\"Email\",\"Roles\":\"Roles\",\"PhoneNumber\":\"Phone Number\"},\"editor\":{\"JobTitle\":\"Job Title: \",\"UserName\":\"User Name:\",\"UserNameRequired\":\"User name is required (minimum of 2 and maximum of 200 characters)\",\"Password\":\"Password:\",\"PasswordHint\":\"Your password is required when changing user name\",\"CurrentPasswordRequired\":\"Current password is required\",\"Email\":\"Email:\",\"EmailRequired\":\"Email address is required (maximum of 200 characters)\",\"InvalidEmail\":\"Specified email is not valid\",\"ChangePassword\":\"Change Password\",\"CurrentPassword\":\"Current Password:\",\"NewPassword\":\"New Password:\",\"NewPasswordRequired\":\"New password is required (minimum of 6 characters)\",\"ConfirmPassword\":\"Confirm Password:\",\"ConfirmationPasswordRequired\":\"Confirmation password is required\",\"PasswordMismatch\":\"New password and confirmation password do not match\",\"Roles\":\"Roles:\",\"FullName\":\" Full Name:\",\"RoleRequired\":\" Role is required\",\"PhoneNumber\":\"Phone #:\",\"Enabled\":\"Enabled\",\"Unblock\":\"Unblock\",\"Close\":\"Close\",\"Edit\":\"Edit\",\"Cancel\":\"Cancel\",\"Save\":\"Save\",\"Saving\":\"Saving...\"}},\"roles\":{\"management\":{\"Search\":\"Search for role...\",\"NewRole\":\"New Role\",\"Edit\":\"Edit\",\"Details\":\"Details\",\"Delete\":\"Delete\",\"RoleDetails\":\"Role Details \\\"{{name}}\\\"\",\"EditRole\":\"Edit Role \\\"{{name}}\\\"\",\"Name\":\"Name\",\"Description\":\"Description\",\"Users\":\"Users\"},\"editor\":{\"Name\":\"Name:\",\"Description\":\"Description:\",\"RoleNameRequired\":\"Role name is required (minimum of 2 and maximum of 200 characters)\",\"SelectAll\":\"Select all\",\"SelectNone\":\"Select none\",\"Close\":\"Close\",\"Cancel\":\"Cancel\",\"Save\":\"Save\",\"Saving\":\"Saving...\"}},\"notifications\":{\"Delete\":\"Delete notification\",\"Pin\":\"Pin notification\",\"Date\":\"Date\",\"Notification\":\"Notification\"},\"todoDemo\":{\"management\":{\"Search\":\"Search for task...\",\"HideCompleted\":\"Hide Completed\",\"AddTask\":\"Add Task\",\"Delete\":\"Delete task\",\"Important\":\"Mark as important\",\"Task\":\"Task\",\"Description\":\"Description\"},\"editor\":{\"NewTask\":\"New Task\",\"Name\":\"Name\",\"TaskNameRequired\":\"Task name is required\",\"Description\":\"Description\",\"Important\":\"Mark as important\",\"AddTask\":\"Add Task\"}}}");

/***/ }),

/***/ "./src/app/assets/locale/fr.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/fr.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"Bienvenue\",\"Notifications\":\"Notifications\",\"New\":\"Nouveau\"},\"mainMenu\":{\"Appointments\":\"Rendez-vous\",\"Customers\":\"Les clients\",\"Products\":\"Les produits\",\"Orders\":\"Les ordres\",\"About\":\"À Propos\",\"Logout\":\"Se Déconnecter\"},\"pageHeader\":{\"Dashboard\":\"Tableau de bord\",\"Customers\":\"Les clients\",\"Products\":\"Les produits\",\"Orders\":\"Les ordres\",\"NotFound\":\"Pas trouvé\",\"About\":\"À Propos\",\"Settings\":\"Paramètres\"},\"home\":{\"NoWidgets1\":\"Vous n'avez pas de widgets affichés. Aller à\",\"NoWidgets2\":\"Configurer les widgets disponibles\",\"StatisticsTitle\":\"Quelques trucs importants\"},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"La page que vous recherchez n'existe pas\",\"backToHome\":\"De retour à la page d'accueil\"},\"settings\":{\"tab\":{\"Profile\":\"Profil\",\"Preferences\":\"Préférences\",\"Users\":\"Utilisateurs\",\"Roles\":\"Rôles\"},\"header\":{\"UserProfile\":\"Profil de l'utilisateur\",\"UserPreferences\":\"Préférences de l'utilisateur\",\"UserDepartments\":\"Départements d'utilisateurs\",\"UsersManagements\":\"Gestion des utilisateurs\",\"RolesManagement\":\"Gestion des rôles\"}},\"preferences\":{\"ReloadPreferences\":\"Recharger les préférences:\",\"ReloadPreferencesHint\":\"Charger les préférences par défaut (les modifications locales sont rejetées)\",\"Language\":\"La langue:\",\"English\":\"Anglais\",\"French\":\"Français\",\"German\":\"Allemand\",\"Portuguese\":\"Portugais\",\"Arabic\":\"Arabe\",\"Korean\":\"Coréen\",\"LanguageHint\":\"Sélectionnez la langue préférée pour votre compte\",\"HomePage\":\"Page d'accueil:\",\"Dashboard\":\"Tableau de bord\",\"Customers\":\"Les clients\",\"Products\":\"Les produits\",\"Orders\":\"Les ordres\",\"About\":\"À propos\",\"Settings\":\"Paramètres\",\"HomePageHint\":\"Sélectionnez la page par défaut pour naviguer jusqu'à la connexion\",\"Theme\":\"Thème:\",\"DefaultTheme\":\"Défaut\",\"CosmoTheme\":\"Cosmo\",\"SolarTheme\":\"Solaire\",\"CeruleanTheme\":\"Azuré\",\"FlatlyTheme\":\"Catégoriquement\",\"SketchyTheme\":\"Vague\",\"SlateTheme\":\"Ardoise\",\"SpacelabTheme\":\"Laboratoirespatial\",\"SuperheroTheme\":\"Super-héros\",\"UnitedTheme\":\"Uni\",\"JournalTheme\":\"Journal\",\"LumenTheme\":\"Lumen\",\"MintyTheme\":\"Minty\",\"PulseTheme\":\"Impulsion\",\"ThemeHint\":\"Sélectionnez le thème de couleur par défaut pour votre compte\",\"DashboardStatistics\":\"Statistiques du tableau de bord:\",\"DashboardStatisticsHint\":\"Afficher le widget de graphique de démonstration sur le tableau de bord\",\"DashboardNotifications\":\"Notifications du tableau de bord:\",\"DashboardNotificationsHint\":\"Afficher les notifications d'application sur le tableau de bord\",\"DashboardTodo\":\"Tableau de bord à faire:\",\"DashboardTodoHint\":\"Afficher le widget de démon tout sur le tableau de bord\",\"DashboardBanner\":\"Bannière de Tableau de Bord:\",\"DashboardBannerHint\":\"Afficher le widget de bannière d'information de démonstration sur le tableau de bord\",\"ResetDefault\":\"Réinitialiser par défaut\",\"SetDefault\":\"Définir par défaut\"},\"users\":{\"management\":{\"Search\":\"Rechercher un utilisateur...\",\"NewUser\":\"Nouvel utilisateur\",\"Edit\":\"Modif.\",\"Delete\":\"Supp.\",\"EditUser\":\"Modifier Utilisateur \\\"{{name}}\\\"\",\"Title\":\"Titre\",\"UserName\":\"Nom d'utilisateur\",\"FullName\":\"Nom Complet\",\"Email\":\"Adresse électronique\",\"Roles\":\"Les rôles\",\"PhoneNumber\":\"Numéro de téléphone\"},\"editor\":{\"JobTitle\":\"Profession: \",\"UserName\":\"Nom d'utilisateur:\",\"UserNameRequired\":\"Le nom d'utilisateur est requis (minimum de 2 et maximum de 200 caractères)\",\"Password\":\"Mot de passe:\",\"PasswordHint\":\"Votre mot de passe est nécessaire lors de la modification du nom d'utilisateur\",\"CurrentPasswordRequired\":\"Le mot de passe actuel est requis\",\"Email\":\"Adresse électronique:\",\"EmailRequired\":\"L'adresse de courrier électronique est requise (maximum de 200 caractères)\",\"InvalidEmail\":\"Le courrier électronique spécifié n'est pas valide\",\"ChangePassword\":\"Changer le mot de passe\",\"CurrentPassword\":\"Mot de passe actuel:\",\"NewPassword\":\"Nouveau mot de passe:\",\"NewPasswordRequired\":\"Un nouveau mot de passe est nécessaire (minimum de 6 caractères)\",\"ConfirmPassword\":\"Confirmez le mot de passe:\",\"ConfirmationPasswordRequired\":\"Le mot de passe de confirmation est requis\",\"PasswordMismatch\":\"Le nouveau mot de passe et le mot de passe de confirmation ne correspondent pas\",\"Roles\":\"Les rôles:\",\"FullName\":\" Nom complet:\",\"RoleRequired\":\"Rôle requis \",\"PhoneNumber\":\"Téléphone #:\",\"Enabled\":\"Activée\",\"Unblock\":\"Débloquer\",\"Close\":\"Fermer\",\"Edit\":\"Modifier\",\"Cancel\":\"Annuler\",\"Save\":\"Enregistrer\",\"Saving\":\"En cours d'enregistrement...\"}},\"roles\":{\"management\":{\"Search\":\"Recherche rôle...\",\"NewRole\":\"Nouveau rôle\",\"Edit\":\"Modifier\",\"Details\":\"Détails\",\"Delete\":\"Effacer\",\"RoleDetails\":\"Détails des rôles \\\"{{name}}\\\"\",\"EditRole\":\"Modifier Rôle \\\"{{name}}\\\"\",\"Name\":\"Nom\",\"Description\":\"La description\",\"Users\":\"Utilisateurs\"},\"editor\":{\"Name\":\"Nom:\",\"Description\":\"La description:\",\"RoleNameRequired\":\"Le nom du rôle est requis (minimum de 2 et maximum de 200 caractères)\",\"SelectAll\":\"Tout sélectionner\",\"SelectNone\":\"Ne rien sélectionner\",\"Close\":\"Fermer\",\"Cancel\":\"Annuler\",\"Save\":\"Enregistrer\",\"Saving\":\"En cours d'enregistrement...\"}},\"notifications\":{\"Delete\":\"Supprimer notification\",\"Pin\":\"Épingler notification\",\"Date\":\"Date\",\"Notification\":\"Notification\"},\"todoDemo\":{\"management\":{\"Search\":\"Rechercher une tâche...\",\"HideCompleted\":\"Masquer complété\",\"AddTask\":\"Ajouter une tâche\",\"Delete\":\"Supprimer la tâche\",\"Important\":\"Marquer comme important\",\"Task\":\"Tâche\",\"Description\":\"Description\"},\"editor\":{\"NewTask\":\"Nouvelle tâche\",\"Name\":\"Nom\",\"TaskNameRequired\":\"Le nom de la tâche est requis\",\"Description\":\"Description\",\"Important\":\"Marquer comme important\",\"AddTask\":\"Ajouter une tâche\"}}}");

/***/ }),

/***/ "./src/app/assets/locale/ko.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/ko.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"환영\",\"Notifications\":\"알림\",\"New\":\"새로운\"},\"mainMenu\":{\"Appointments\":\"설비\",\"Customers\":\"고객\",\"Products\":\"제작품\",\"Orders\":\"명령\",\"About\":\"약\",\"Logout\":\"로그 아웃\"},\"pageHeader\":{\"Dashboard\":\"계기반\",\"Customers\":\"고객\",\"Products\":\"제작품\",\"Orders\":\"명령\",\"NotFound\":\"발견되지 않음\",\"About\":\"약\",\"Settings\":\"설정\"},\"home\":{\"NoWidgets1\":\"위젯이 표시되지 않았습니다. 고토\",\"NoWidgets2\":\"사용 가능한 위젯을 구성하는 방법\",\"StatisticsTitle\":\"중요한 것들\"},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"찾고있는 페이지가 존재하지 않습니다.\",\"backToHome\":\"홈으로\"},\"settings\":{\"tab\":{\"Profile\":\"윤곽\",\"Preferences\":\"환경 설정\",\"Users\":\"사용자\",\"Roles\":\"역할\"},\"header\":{\"UserProfile\":\"유저 프로필\",\"UserPreferences\":\"사용자 환경 설정\",\"UserDepartments\":\"사용자 부서\",\"UsersManagements\":\"사용자 관리\",\"RolesManagement\":\"역할 관리\"}},\"preferences\":{\"ReloadPreferences\":\"환경 설정 새로 고침 :\",\"ReloadPreferencesHint\":\"기본 환경 설정로드 (로컬 변경 사항은 무시됩니다)\",\"Language\":\"언어:\",\"English\":\"영어\",\"French\":\"프랑스 국민\",\"German\":\"독일어\",\"Portuguese\":\"포르투갈 인\",\"Arabic\":\"아라비아 말\",\"Korean\":\"한국어\",\"LanguageHint\":\"계정의 기본 언어 선택\",\"HomePage\":\"홈페이지 :\",\"Dashboard\":\"계기반\",\"Customers\":\"고객\",\"Products\":\"제작품\",\"Orders\":\"명령\",\"About\":\"약\",\"Settings\":\"설정\",\"HomePageHint\":\"로그인시 이동할 기본 페이지를 선택하십시오.\",\"Theme\":\"테마:\",\"DefaultTheme\":\"태만\",\"CosmoTheme\":\"코스모\",\"SolarTheme\":\"솔라\",\"CeruleanTheme\":\"세르 리안\",\"FlatlyTheme\":\"단조롭게\",\"SketchyTheme\":\"스케치\",\"SlateTheme\":\"슬레이트\",\"SpacelabTheme\":\"우주 실험실\",\"SuperheroTheme\":\"수퍼 히어로\",\"UnitedTheme\":\"유나이티드\",\"JournalTheme\":\"일지\",\"LumenTheme\":\"루멘\",\"MintyTheme\":\"민티\",\"PulseTheme\":\"펄스\",\"ThemeHint\":\"계정의 기본 색상 테마 선택\",\"DashboardStatistics\":\"대시 보드 통계:\",\"DashboardStatisticsHint\":\"데모 그래프 위젯을 대시 보드에 표시하십시오.\",\"DashboardNotifications\":\"대시 보드 알림 :\",\"DashboardNotificationsHint\":\"대시 보드에 애플리케이션 알림 표시\",\"DashboardTodo\":\"대시 보드 할일:\",\"DashboardTodoHint\":\"대시 보드에서 데모 할 일 위젯 표시\",\"DashboardBanner\":\"대시 보드 배너 :\",\"DashboardBannerHint\":\"데모 정보 배너 위젯을 대시 보드에 표시하십시오.\",\"ResetDefault\":\"기본값 재설정\",\"SetDefault\":\"기본값으로 설정\"},\"users\":{\"management\":{\"Search\":\"사용자 검색...\",\"NewUser\":\"새로운 사용자\",\"Edit\":\"편집하다\",\"Delete\":\"지우다\",\"EditUser\":\"사용자 편집 \\\"{{name}}\\\"\",\"Title\":\"표제\",\"UserName\":\"사용자 이름\",\"FullName\":\"성명\",\"Email\":\"이메일\",\"Roles\":\"역할\",\"PhoneNumber\":\"전화 번호\"},\"editor\":{\"JobTitle\":\"직위: \",\"UserName\":\"사용자 이름: \",\"UserNameRequired\":\"사용자 이름이 필요합니다 (최소 2 자, 최대 200 자).\",\"Password\":\"암호:\",\"PasswordHint\":\"사용자 이름을 변경할 때 암호가 필요합니다.\",\"CurrentPasswordRequired\":\"현재 비밀번호가 필요합니다.\",\"Email\":\"이메일:\",\"EmailRequired\":\"이메일 주소는 필수 사항입니다 (최대 200 자).\",\"InvalidEmail\":\"지정된 이메일이 유효하지 않습니다.\",\"ChangePassword\":\"비밀번호 변경\",\"CurrentPassword\":\"현재 비밀번호:\",\"NewPassword\":\"새 비밀번호:\",\"NewPasswordRequired\":\"새 암호가 필요합니다 (최소 6 자).\",\"ConfirmPassword\":\"비밀번호 확인:\",\"ConfirmationPasswordRequired\":\"확인 암호가 필요합니다.\",\"PasswordMismatch\":\"새 비밀번호와 확인 비밀번호가 일치하지 않습니다.\",\"Roles\":\"역할 :\",\"FullName\":\"성명 :\",\"RoleRequired\":\"역할이 필요합니다.\",\"PhoneNumber\":\"전화 #:\",\"Enabled\":\"사용\",\"Unblock\":\"차단 해제\",\"Close\":\"닫기\",\"Edit\":\"편집하다\",\"Cancel\":\"취소\",\"Save\":\"구하다\",\"Saving\":\"절약...\"}},\"roles\":{\"management\":{\"Search\":\"역할 검색...\",\"NewRole\":\"새로운 역할\",\"Edit\":\"편집하다\",\"Details\":\"세부\",\"Delete\":\"지우다\",\"RoleDetails\":\"역할 세부 정보 \\\"{{name}}\\\"\",\"EditRole\":\"역할 편집 \\\"{{name}}\\\"\",\"Name\":\"이름\",\"Description\":\"기술\",\"Users\":\"사용자\"},\"editor\":{\"Name\":\"이름:\",\"Description\":\"기술:\",\"RoleNameRequired\":\"역할 이름은 필수 항목입니다 (최소 2 자, 최대 200 자).\",\"SelectAll\":\"모두 선택\",\"SelectNone\":\"없음 선택\",\"Close\":\"닫기\",\"Cancel\":\"취소\",\"Save\":\"구하다\",\"Saving\":\"절약...\"}},\"notifications\":{\"Delete\":\"알림 삭제\",\"Pin\":\"핀 알림\",\"Date\":\"날짜\",\"Notification\":\"공고\"},\"todoDemo\":{\"management\":{\"Search\":\"할 일 검색...\",\"HideCompleted\":\"완료 안함\",\"AddTask\":\"할 일 추가\",\"Delete\":\"작업 삭제\",\"Important\":\"중요한 것으로 표시\",\"Task\":\"태스크\",\"Description\":\"기술\"},\"editor\":{\"NewTask\":\"새 작업\",\"Name\":\"이름\",\"TaskNameRequired\":\"작업 이름이 필요합니다.\",\"Description\":\"기술\",\"Important\":\"중요한 것으로 표시\",\"AddTask\":\"할 일 추가\"}}}");

/***/ }),

/***/ "./src/app/assets/locale/pt.json":
/*!***************************************!*\
  !*** ./src/app/assets/locale/pt.json ***!
  \***************************************/
/*! exports provided: app, mainMenu, pageHeader, home, notFound, settings, preferences, users, roles, notifications, todoDemo, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"app\":{\"Welcome\":\"Bem-vindo!\",\"Notifications\":\"Notificações\",\"New\":\"Novo\"},\"mainMenu\":{\"Appointments\":\"Compromissos\",\"Customers\":\"Clientes\",\"Products\":\"Produtos\",\"Orders\":\"Pedidos\",\"About\":\"Sobre\",\"Logout\":\"Sair\"},\"pageHeader\":{\"Dashboard\":\"Painel de Controle\",\"Customers\":\"Clientes\",\"Products\":\"Produtos\",\"Orders\":\"Pedidos\",\"NotFound\":\"Não Encontrado\",\"About\":\"Sobre\",\"Settings\":\"Configurações\"},\"home\":{\"NoWidgets1\":\"Você não possui widgets a serem mostrados. Ir para\",\"NoWidgets2\":\"configurar widgets disponíveis\",\"StatisticsTitle\":\"Alguma coisa importante\"},\"notFound\":{\"404\":\"404\",\"pageNotFound\":\"A página que você está procurando não foi encontrada\",\"backToHome\":\"Voltar para a página principal\"},\"settings\":{\"tab\":{\"Profile\":\"Perfil\",\"Preferences\":\"Preferências\",\"Users\":\"Usuários\",\"Roles\":\"Funções\"},\"header\":{\"UserProfile\":\"Perfil de Usuário\",\"UserPreferences\":\"Preferências de Usuário\",\"UserDepartments\":\"Departamentos de Usuários\",\"UsersManagements\":\"Gerenciamento de Usuários\",\"RolesManagement\":\"Gerenciamento de Funções\"}},\"preferences\":{\"ReloadPreferences\":\"Recarregar Preferências:\",\"ReloadPreferencesHint\":\"Carregar as preferências padrão (as alterações atuais serão descartadas)\",\"Language\":\"Idioma:\",\"English\":\"English\",\"French\":\"Français\",\"German\":\"Deutsche\",\"Portuguese\":\"Português\",\"Arabic\":\"عربى\",\"Korean\":\"한국어\",\"LanguageHint\":\"Selecione seu idioma\",\"HomePage\":\"Principal:\",\"Dashboard\":\"Painel de Controle\",\"Customers\":\"Clientes\",\"Products\":\"Produtos\",\"Orders\":\"Pedidos\",\"About\":\"Sobre\",\"Settings\":\"Configurações\",\"HomePageHint\":\"Selecione a página padrão para acessar após o login\",\"Theme\":\"Tema:\",\"DefaultTheme\":\"Padrão\",\"CosmoTheme\":\"Cosmo\",\"SolarTheme\":\"Solar\",\"CeruleanTheme\":\"Cerulean\",\"FlatlyTheme\":\"Solitariamente\",\"SketchyTheme\":\"Esboçado\",\"SlateTheme\":\"Ardósia\",\"SpacelabTheme\":\"Laboratórioespacial\",\"SuperheroTheme\":\"Superheroi\",\"UnitedTheme\":\"Unidos\",\"JournalTheme\":\"Diário\",\"LumenTheme\":\"Lúmen\",\"MintyTheme\":\"Minty\",\"PulseTheme\":\"Pulso\",\"ThemeHint\":\"Selecione o tema padrão\",\"DashboardStatistics\":\"Estatísticas do Painel de Controle:\",\"DashboardStatisticsHint\":\"Mostrar o widget gráfico demonstrativo no Painel de Controle\",\"DashboardNotifications\":\"Notificações no Painel de Controle:\",\"DashboardNotificationsHint\":\"Mostra as notificações no painel de controle\",\"DashboardTodo\":\"Tarefas no Painel de Controle:\",\"DashboardTodoHint\":\"Mostra o widget demonstrativo de Tarefas no painel de controle\",\"DashboardBanner\":\"Banner no Painel de Controle:\",\"DashboardBannerHint\":\"Mostra o widget demonstrativo de informações no painle de controle\",\"ResetDefault\":\"Resetar\",\"SetDefault\":\"Definir como Padrão\"},\"users\":{\"management\":{\"Search\":\"Procurar usuário...\",\"NewUser\":\"Novo Usuário\",\"Edit\":\"Editar\",\"Delete\":\"Excluir\",\"EditUser\":\"Editar usuário \\\"{{name}}\\\"\",\"Title\":\"Título\",\"UserName\":\"Nome de Usuário\",\"FullName\":\"Nome Completo\",\"Email\":\"E-mail\",\"Roles\":\"Funções\",\"PhoneNumber\":\"Telefone\"},\"editor\":{\"JobTitle\":\"Cargo: \",\"UserName\":\"Nome de Usuário:\",\"UserNameRequired\":\"Nome de usuário é obrigatório (mínimo de 2 máximo de 200 caracteres)\",\"Password\":\"Senha:\",\"PasswordHint\":\"Sua senha é necessária ao alterar o nome do usuário\",\"CurrentPasswordRequired\":\"A senha atual é necessária\",\"Email\":\"Email:\",\"EmailRequired\":\"Email é obrigatório (máximo de 200 caracteres)\",\"InvalidEmail\":\"O email especificado não é válido\",\"ChangePassword\":\"Trocar senha\",\"CurrentPassword\":\"Senha Atual:\",\"NewPassword\":\"Nova senha:\",\"NewPasswordRequired\":\"Nova senha é obrigatória (mínimo de 6 caracteres)\",\"ConfirmPassword\":\"Confirme a senha:\",\"ConfirmationPasswordRequired\":\"Confirmação de senha é obrigatória\",\"PasswordMismatch\":\"Nova senha e Confirmação de senha não são iguais\",\"Roles\":\"Perfis:\",\"FullName\":\" Nome Completo:\",\"RoleRequired\":\" Perfil é Obrigatório\",\"PhoneNumber\":\"Telefone:\",\"Enabled\":\"Habilitado\",\"Unblock\":\"Desbloquear\",\"Close\":\"Fechar\",\"Edit\":\"Editar\",\"Cancel\":\"Cancela\",\"Save\":\"Salvar\",\"Saving\":\"Salvando...\"}},\"roles\":{\"management\":{\"Search\":\"rocurar por Função...\",\"NewRole\":\"Nova Função\",\"Edit\":\"Editar\",\"Details\":\"Detalhes\",\"Delete\":\"Excluir\",\"RoleDetails\":\"Detalhes da Função \\\"{{name}}\\\"\",\"EditRole\":\"Editar Função \\\"{{name}}\\\"\",\"Name\":\"Nome\",\"Description\":\"Descrição\",\"Users\":\"Usuários\"},\"editor\":{\"Name\":\"Nome:\",\"Description\":\"Descrição:\",\"RoleNameRequired\":\"Nome da Função é Obrigatório (mínimo de 2 máximo de 200 caracteres)\",\"SelectAll\":\"Selecionar Todos\",\"SelectNone\":\"Nenhum\",\"Close\":\"Fechar\",\"Cancel\":\"Cancelar\",\"Save\":\"Salvar\",\"Saving\":\"Salvando...\"}},\"notifications\":{\"Delete\":\"Excluir Notificação\",\"Pin\":\"Fixar notificação\",\"Date\":\"Data\",\"Notification\":\"Notificação\"},\"todoDemo\":{\"management\":{\"Search\":\"Procurar por Tarefa...\",\"HideCompleted\":\"Esconder Completas\",\"AddTask\":\"Adicionar tarefa\",\"Delete\":\"Excluir tarefa\",\"Important\":\"Marcar como importante\",\"Task\":\"Tarefa\",\"Description\":\"Descrição\"},\"editor\":{\"NewTask\":\"Nova Tarefa\",\"Name\":\"Nome\",\"TaskNameRequired\":\"Título da tarefa é obrigatório\",\"Description\":\"Descrição\",\"Important\":\"Marcar como importante\",\"AddTask\":\"Adicionar Tarefa\"}}}");

/***/ }),

/***/ "./src/app/assets/scripts/alertify.js":
/*!********************************************!*\
  !*** ./src/app/assets/scripts/alertify.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * alertify
 * An unobtrusive customizable JavaScript notification system
 *
 * @author Fabien Doiron <fabien.doiron@gmail.com>
 * @copyright Fabien Doiron 2013
 * @license MIT <http://opensource.org/licenses/mit-license.php>
 * @link http://fabien-d.github.com/alertify.js/
 * @module alertify
 * @version 0.3.11
 */
(function (global, undefined) {
	"use strict";

	var document = global.document,
	    Alertify;

	Alertify = function () {

		var _alertify = {},
		    dialogs   = {},
		    isopen    = false,
		    keys      = { ENTER: 13, ESC: 27, SPACE: 32 },
		    queue     = [],
		    $, btnCancel, btnOK, btnReset, btnResetBack, btnFocus, elCallee, elCover, elDialog, elLog, form, input, getTransitionEvent;

		/**
		 * Markup pieces
		 * @type {Object}
		 */
		dialogs = {
			buttons : {
				holder : "<nav class=\"alertify-buttons\">{{buttons}}</nav>",
				submit : "<button type=\"submit\" class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\">{{ok}}</button>",
				ok     : "<button class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\">{{ok}}</button>",
				cancel : "<button class=\"alertify-button alertify-button-cancel\" id=\"alertify-cancel\">{{cancel}}</button>"
			},
			input   : "<div class=\"alertify-text-wrapper\"><input type=\"text\" class=\"alertify-text\" id=\"alertify-text\"></div>",
			message : "<p class=\"alertify-message\">{{message}}</p>",
			log     : "<article class=\"alertify-log{{class}}\">{{message}}</article>"
		};

		/**
		 * Return the proper transitionend event
		 * @return {String}    Transition type string
		 */
		getTransitionEvent = function () {
			var t,
			    type,
			    supported   = false,
			    el          = document.createElement("fakeelement"),
			    transitions = {
				    "WebkitTransition" : "webkitTransitionEnd",
				    "MozTransition"    : "transitionend",
				    "OTransition"      : "otransitionend",
				    "transition"       : "transitionend"
			    };

			for (t in transitions) {
				if (el.style[t] !== undefined) {
					type      = transitions[t];
					supported = true;
					break;
				}
			}

			return {
				type      : type,
				supported : supported
			};
		};

		/**
		 * Shorthand for document.getElementById()
		 *
		 * @param  {String} id    A specific element ID
		 * @return {Object}       HTML element
		 */
		$ = function (id) {
			return document.getElementById(id);
		};

		/**
		 * Alertify private object
		 * @type {Object}
		 */
		_alertify = {

			/**
			 * Labels object
			 * @type {Object}
			 */
			labels : {
				ok     : "OK",
				cancel : "Cancel"
			},

			/**
			 * Delay number
			 * @type {Number}
			 */
			delay : 5000,

			/**
			 * Whether buttons are reversed (default is secondary/primary)
			 * @type {Boolean}
			 */
			buttonReverse : false,

			/**
			 * Which button should be focused by default
			 * @type {String}	"ok" (default), "cancel", or "none"
			 */
			buttonFocus : "ok",

			/**
			 * Set the transition event on load
			 * @type {[type]}
			 */
			transition : undefined,

			/**
			 * Set the proper button click events
			 *
			 * @param {Function} fn    [Optional] Callback function
			 *
			 * @return {undefined}
			 */
			addListeners : function (fn) {
				var hasOK     = (typeof btnOK !== "undefined"),
				    hasCancel = (typeof btnCancel !== "undefined"),
				    hasInput  = (typeof input !== "undefined"),
				    val       = "",
				    self      = this,
				    ok, cancel, common, key, reset;

				// ok event handler
				ok = function (event) {
					if (typeof event.preventDefault !== "undefined") event.preventDefault();
					common(event);
					if (typeof input !== "undefined") val = input.value;
					if (typeof fn === "function") {
						if (typeof input !== "undefined") {
							fn(true, val);
						}
						else fn(true);
					}
					return false;
				};

				// cancel event handler
				cancel = function (event) {
					if (typeof event.preventDefault !== "undefined") event.preventDefault();
					common(event);
					if (typeof fn === "function") fn(false);
					return false;
				};

				// common event handler (keyup, ok and cancel)
				common = function (event) {
					self.hide();
					self.unbind(document.body, "keyup", key);
					self.unbind(btnReset, "focus", reset);
					if (hasOK) self.unbind(btnOK, "click", ok);
					if (hasCancel) self.unbind(btnCancel, "click", cancel);
				};

				// keyup handler
				key = function (event) {
					var keyCode = event.keyCode;
					if ((keyCode === keys.SPACE && !hasInput) || (hasInput && keyCode === keys.ENTER)) ok(event);
					if (keyCode === keys.ESC && hasCancel) cancel(event);
				};

				// reset focus to first item in the dialog
				reset = function (event) {
					if (hasInput) input.focus();
					else if (!hasCancel || self.buttonReverse) btnOK.focus();
					else btnCancel.focus();
				};

				// handle reset focus link
				// this ensures that the keyboard focus does not
				// ever leave the dialog box until an action has
				// been taken
				this.bind(btnReset, "focus", reset);
				this.bind(btnResetBack, "focus", reset);
				// handle OK click
				if (hasOK) this.bind(btnOK, "click", ok);
				// handle Cancel click
				if (hasCancel) this.bind(btnCancel, "click", cancel);
				// listen for keys, Cancel => ESC
				this.bind(document.body, "keyup", key);
				if (!this.transition.supported) {
					this.setFocus();
				}
			},

			/**
			 * Bind events to elements
			 *
			 * @param  {Object}   el       HTML Object
			 * @param  {Event}    event    Event to attach to element
			 * @param  {Function} fn       Callback function
			 *
			 * @return {undefined}
			 */
			bind : function (el, event, fn) {
				if (typeof el.addEventListener === "function") {
					el.addEventListener(event, fn, false);
				} else if (el.attachEvent) {
					el.attachEvent("on" + event, fn);
				}
			},

			/**
			 * Use alertify as the global error handler (using window.onerror)
			 *
			 * @return {boolean} success
			 */
			handleErrors : function () {
				if (typeof global.onerror !== "undefined") {
					var self = this;
					global.onerror = function (msg, url, line) {
						self.error("[" + msg + " on line " + line + " of " + url + "]", 0);
					};
					return true;
				} else {
					return false;
				}
			},

			/**
			 * Append button HTML strings
			 *
			 * @param {String} secondary    The secondary button HTML string
			 * @param {String} primary      The primary button HTML string
			 *
			 * @return {String}             The appended button HTML strings
			 */
			appendButtons : function (secondary, primary) {
				return this.buttonReverse ? primary + secondary : secondary + primary;
			},

			/**
			 * Build the proper message box
			 *
			 * @param  {Object} item    Current object in the queue
			 *
			 * @return {String}         An HTML string of the message box
			 */
			build : function (item) {
				var html    = "",
				    type    = item.type,
				    message = item.message,
				    css     = item.cssClass || "";

				html += "<div class=\"alertify-dialog\">";
				html += "<a id=\"alertify-resetFocusBack\" class=\"alertify-resetFocus\" href=\"#\">Reset Focus</a>";

				if (_alertify.buttonFocus === "none") html += "<a href=\"#\" id=\"alertify-noneFocus\" class=\"alertify-hidden\"></a>";

				// doens't require an actual form
				if (type === "prompt") html += "<div id=\"alertify-form\">";

				html += "<article class=\"alertify-inner\">";
				html += dialogs.message.replace("{{message}}", message);

				if (type === "prompt") html += dialogs.input;

				html += dialogs.buttons.holder;
				html += "</article>";

				if (type === "prompt") html += "</div>";

				html += "<a id=\"alertify-resetFocus\" class=\"alertify-resetFocus\" href=\"#\">Reset Focus</a>";
				html += "</div>";

				switch (type) {
				case "confirm":
					html = html.replace("{{buttons}}", this.appendButtons(dialogs.buttons.cancel, dialogs.buttons.ok));
					html = html.replace("{{ok}}", this.labels.ok).replace("{{cancel}}", this.labels.cancel);
					break;
				case "prompt":
					html = html.replace("{{buttons}}", this.appendButtons(dialogs.buttons.cancel, dialogs.buttons.submit));
					html = html.replace("{{ok}}", this.labels.ok).replace("{{cancel}}", this.labels.cancel);
					break;
				case "alert":
					html = html.replace("{{buttons}}", dialogs.buttons.ok);
					html = html.replace("{{ok}}", this.labels.ok);
					break;
				default:
					break;
				}

				elDialog.className = "alertify alertify-" + type + " " + css;
				elCover.className  = "alertify-cover";
				return html;
			},

			/**
			 * Close the log messages
			 *
			 * @param  {Object} elem    HTML Element of log message to close
			 * @param  {Number} wait    [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide
			 *
			 * @return {undefined}
			 */
			close : function (elem, wait) {
				// Unary Plus: +"2" === 2
				var timer = (wait && !isNaN(wait)) ? +wait : this.delay,
				    self  = this,
				    hideElement, transitionDone;

				// set click event on log messages
				this.bind(elem, "click", function () {
					hideElement(elem);
				});
				// Hide the dialog box after transition
				// This ensure it doens't block any element from being clicked
				transitionDone = function (event) {
					event.stopPropagation();
					// unbind event so function only gets called once
					self.unbind(this, self.transition.type, transitionDone);
					// remove log message
					elLog.removeChild(this);
					if (!elLog.hasChildNodes()) elLog.className += " alertify-logs-hidden";
				};
				// this sets the hide class to transition out
				// or removes the child if css transitions aren't supported
				hideElement = function (el) {
					// ensure element exists
					if (typeof el !== "undefined" && el.parentNode === elLog) {
						// whether CSS transition exists
						if (self.transition.supported) {
							self.bind(el, self.transition.type, transitionDone);
							el.className += " alertify-log-hide";
						} else {
							elLog.removeChild(el);
							if (!elLog.hasChildNodes()) elLog.className += " alertify-logs-hidden";
						}
					}
				};
				// never close (until click) if wait is set to 0
				if (wait === 0) return;
				// set timeout to auto close the log message
				setTimeout(function () { hideElement(elem); }, timer);
			},

			/**
			 * Create a dialog box
			 *
			 * @param  {String}   message        The message passed from the callee
			 * @param  {String}   type           Type of dialog to create
			 * @param  {Function} fn             [Optional] Callback function
			 * @param  {String}   placeholder    [Optional] Default value for prompt input field
			 * @param  {String}   cssClass       [Optional] Class(es) to append to dialog box
			 *
			 * @return {Object}
			 */
			dialog : function (message, type, fn, placeholder, cssClass) {
				// set the current active element
				// this allows the keyboard focus to be resetted
				// after the dialog box is closed
				elCallee = document.activeElement;
				// check to ensure the alertify dialog element
				// has been successfully created
				var check = function () {
					if ((elLog && elLog.scrollTop !== null) && (elCover && elCover.scrollTop !== null)) return;
					else check();
				};
				// error catching
				if (typeof message !== "string") throw new Error("message must be a string");
				if (typeof type !== "string") throw new Error("type must be a string");
				if (typeof fn !== "undefined" && typeof fn !== "function") throw new Error("fn must be a function");
				// initialize alertify if it hasn't already been done
				this.init();
				check();

				queue.push({ type: type, message: message, callback: fn, placeholder: placeholder, cssClass: cssClass });
				if (!isopen) this.setup();

				return this;
			},

			/**
			 * Extend the log method to create custom methods
			 *
			 * @param  {String} type    Custom method name
			 *
			 * @return {Function}
			 */
			extend : function (type) {
				if (typeof type !== "string") throw new Error("extend method must have exactly one paramter");
				return function (message, wait) {
					this.log(message, type, wait);
					return this;
				};
			},

			/**
			 * Hide the dialog and rest to defaults
			 *
			 * @return {undefined}
			 */
			hide : function () {
				var transitionDone,
				    self = this;
				// remove reference from queue
				queue.splice(0,1);
				// if items remaining in the queue
				if (queue.length > 0) this.setup(true);
				else {
					isopen = false;
					// Hide the dialog box after transition
					// This ensure it doens't block any element from being clicked
					transitionDone = function (event) {
						event.stopPropagation();
						// unbind event so function only gets called once
						self.unbind(elDialog, self.transition.type, transitionDone);
					};
					// whether CSS transition exists
					if (this.transition.supported) {
						this.bind(elDialog, this.transition.type, transitionDone);
						elDialog.className = "alertify alertify-hide alertify-hidden";
					} else {
						elDialog.className = "alertify alertify-hide alertify-hidden alertify-isHidden";
					}
					elCover.className  = "alertify-cover alertify-cover-hidden";
					// set focus to the last element or body
					// after the dialog is closed
					elCallee.focus();
				}
			},

			/**
			 * Initialize Alertify
			 * Create the 2 main elements
			 *
			 * @return {undefined}
			 */
			init : function () {
				// ensure legacy browsers support html5 tags
				document.createElement("nav");
				document.createElement("article");
				document.createElement("section");
				// cover
				if ($("alertify-cover") == null) {
					elCover = document.createElement("div");
					elCover.setAttribute("id", "alertify-cover");
					elCover.className = "alertify-cover alertify-cover-hidden";
					document.body.appendChild(elCover);
				}
				// main element
				if ($("alertify") == null) {
					isopen = false;
					queue = [];
					elDialog = document.createElement("section");
					elDialog.setAttribute("id", "alertify");
					elDialog.className = "alertify alertify-hidden";
					document.body.appendChild(elDialog);
				}
				// log element
				if ($("alertify-logs") == null) {
					elLog = document.createElement("section");
					elLog.setAttribute("id", "alertify-logs");
					elLog.className = "alertify-logs alertify-logs-hidden";
					document.body.appendChild(elLog);
				}
				// set tabindex attribute on body element
				// this allows script to give it focus
				// after the dialog is closed
				document.body.setAttribute("tabindex", "0");
				// set transition type
				this.transition = getTransitionEvent();
			},

			/**
			 * Show a new log message box
			 *
			 * @param  {String} message    The message passed from the callee
			 * @param  {String} type       [Optional] Optional type of log message
			 * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding the log
			 *
			 * @return {Object}
			 */
			log : function (message, type, wait) {
				// check to ensure the alertify dialog element
				// has been successfully created
				var check = function () {
					if (elLog && elLog.scrollTop !== null) return;
					else check();
				};
				// initialize alertify if it hasn't already been done
				this.init();
				check();

				elLog.className = "alertify-logs";
				this.notify(message, type, wait);
				return this;
			},

			/**
			 * Add new log message
			 * If a type is passed, a class name "alertify-log-{type}" will get added.
			 * This allows for custom look and feel for various types of notifications.
			 *
			 * @param  {String} message    The message passed from the callee
			 * @param  {String} type       [Optional] Type of log message
			 * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding
			 *
			 * @return {undefined}
			 */
			notify : function (message, type, wait) {
				var log = document.createElement("article");
				log.className = "alertify-log" + ((typeof type === "string" && type !== "") ? " alertify-log-" + type : "");
				log.innerHTML = message;
				// append child
				elLog.appendChild(log);
				// triggers the CSS animation
				setTimeout(function() { log.className = log.className + " alertify-log-show"; }, 50);
				this.close(log, wait);
			},

			/**
			 * Set properties
			 *
			 * @param {Object} args     Passing parameters
			 *
			 * @return {undefined}
			 */
			set : function (args) {
				var k;
				// error catching
				if (typeof args !== "object" && args instanceof Array) throw new Error("args must be an object");
				// set parameters
				for (k in args) {
					if (args.hasOwnProperty(k)) {
						this[k] = args[k];
					}
				}
			},

			/**
			 * Common place to set focus to proper element
			 *
			 * @return {undefined}
			 */
			setFocus : function () {
				if (input) {
					input.focus();
					input.select();
				}
				else btnFocus.focus();
			},

			/**
			 * Initiate all the required pieces for the dialog box
			 *
			 * @return {undefined}
			 */
			setup : function (fromQueue) {
				var item = queue[0],
				    self = this,
				    transitionDone;

				// dialog is open
				isopen = true;
				// Set button focus after transition
				transitionDone = function (event) {
					event.stopPropagation();
					self.setFocus();
					// unbind event so function only gets called once
					self.unbind(elDialog, self.transition.type, transitionDone);
				};
				// whether CSS transition exists
				if (this.transition.supported && !fromQueue) {
					this.bind(elDialog, this.transition.type, transitionDone);
				}
				// build the proper dialog HTML
				elDialog.innerHTML = this.build(item);
				// assign all the common elements
				btnReset  = $("alertify-resetFocus");
				btnResetBack  = $("alertify-resetFocusBack");
				btnOK     = $("alertify-ok")     || undefined;
				btnCancel = $("alertify-cancel") || undefined;
				btnFocus  = (_alertify.buttonFocus === "cancel") ? btnCancel : ((_alertify.buttonFocus === "none") ? $("alertify-noneFocus") : btnOK),
				input     = $("alertify-text")   || undefined;
				form      = $("alertify-form")   || undefined;
				// add placeholder value to the input field
				if (typeof item.placeholder === "string" && item.placeholder !== "") input.value = item.placeholder;
				if (fromQueue) this.setFocus();
				this.addListeners(item.callback);
			},

			/**
			 * Unbind events to elements
			 *
			 * @param  {Object}   el       HTML Object
			 * @param  {Event}    event    Event to detach to element
			 * @param  {Function} fn       Callback function
			 *
			 * @return {undefined}
			 */
			unbind : function (el, event, fn) {
				if (typeof el.removeEventListener === "function") {
					el.removeEventListener(event, fn, false);
				} else if (el.detachEvent) {
					el.detachEvent("on" + event, fn);
				}
			}
		};

		return {
			alert   : function (message, fn, cssClass) { _alertify.dialog(message, "alert", fn, "", cssClass); return this; },
			confirm : function (message, fn, cssClass) { _alertify.dialog(message, "confirm", fn, "", cssClass); return this; },
			extend  : _alertify.extend,
			init    : _alertify.init,
			log     : function (message, type, wait) { _alertify.log(message, type, wait); return this; },
			prompt  : function (message, fn, placeholder, cssClass) { _alertify.dialog(message, "prompt", fn, placeholder, cssClass); return this; },
			success : function (message, wait) { _alertify.log(message, "success", wait); return this; },
			error   : function (message, wait) { _alertify.log(message, "error", wait); return this; },
			set     : function (args) { _alertify.set(args); },
			labels  : _alertify.labels,
			debug   : _alertify.handleErrors
		};
	};

	// AMD and window support
	if (true) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () { return new Alertify(); }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}(window));


/***/ }),

/***/ "./src/app/components/about/about.component.scss":
/*!*******************************************************!*\
  !*** ./src/app/components/about/about.component.scss ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".pageHeader {\n  margin-bottom: 30px;\n}\n\n.reduced-font {\n  line-height: 1.4;\n}\n\n.bg-features {\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.bg-features ul {\n  position: relative;\n  z-index: 100;\n}\n\n.bg-features .logo {\n  font-size: 200px;\n  position: absolute;\n  top: 2rem;\n  right: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGFib3V0XFxhYm91dC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2VIZWFkZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG5cclxuLnJlZHVjZWQtZm9udCB7XHJcbiAgICBsaW5lLWhlaWdodDogMS40O1xyXG59XHJcblxyXG4uYmctZmVhdHVyZXMge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICAgIHBhZGRpbmc6IDAuNXJlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxufVxyXG5cclxuLmJnLWZlYXR1cmVzIHVsIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDEwMDtcclxufVxyXG5cclxuLmJnLWZlYXR1cmVzIC5sb2dvIHtcclxuICAgIGZvbnQtc2l6ZTogMjAwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDJyZW07XHJcbiAgICByaWdodDogMTBweDtcclxufVxyXG4iLCIucGFnZUhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5yZWR1Y2VkLWZvbnQge1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuXG4uYmctZmVhdHVyZXMge1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cblxuLmJnLWZlYXR1cmVzIHVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbi5iZy1mZWF0dXJlcyAubG9nbyB7XG4gIGZvbnQtc2l6ZTogMjAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAycmVtO1xuICByaWdodDogMTBweDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/about/about.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/about/about.component.ts ***!
  \*****************************************************/
/*! exports provided: AboutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AboutComponent", function() { return AboutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");



let AboutComponent = class AboutComponent {
};
AboutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'about',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./about.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/about/about.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_2__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./about.component.scss */ "./src/app/components/about/about.component.scss")).default]
    })
], AboutComponent);



/***/ }),

/***/ "./src/app/components/app.component.scss":
/*!***********************************************!*\
  !*** ./src/app/components/app.component.scss ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".app-container.app-component {\n  height: 100%;\n}\n\nmain.app-component {\n  height: calc(100% - 40px);\n  padding-top: 60px;\n}\n\n.footer-height.app-component {\n  height: 40px;\n}\n\nfooter.app-component {\n  width: 100%;\n  height: 40px;\n  line-height: 40px;\n  background-color: #f5f5f5;\n}\n\n.navbar-brand.app-component > img {\n  height: 30px;\n}\n\n.navbar.app-component .nav-pills > .active > a,\n.navbar.app-component .nav-pills > .active > a:hover,\n.navbar.app-component .nav-pills > .active > a:focus {\n  background-color: #efefef;\n  color: #808080;\n}\n\n.navbar.app-component .nav-pills > li > a {\n  font-weight: bold;\n  padding-top: 0.4rem;\n  padding-bottom: 0.4rem;\n}\n\n.navbar.app-component .nav-link,\n.navbar.app-component .navbar-text {\n  color: white;\n}\n\n@media screen and (max-width: 991px) {\n  .navbar.app-component .nav-pills > li + li {\n    margin-left: 0;\n    margin-top: 1px;\n  }\n}\n\n@media screen and (min-width: 992px) {\n  .navbar.app-component .nav-pills > li + li {\n    margin-left: 2px;\n  }\n}\n\n.prebootShow.app-component {\n  opacity: 1 !important;\n}\n\n.prebootStep.app-component {\n  opacity: 0;\n  -webkit-transition: 0.5s ease-in-out all;\n  transition: 0.5s ease-in-out all;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxZQUFBO0FDREo7O0FESUE7RUFDSSx5QkFBQTtFQUNBLGlCQUFBO0FDREo7O0FESUE7RUFDSSxZQVpXO0FDV2Y7O0FESUE7RUFDSSxXQUFBO0VBQ0EsWUFqQlc7RUFrQlgsaUJBbEJXO0VBbUJYLHlCQUFBO0FDREo7O0FES0E7RUFDSSxZQUFBO0FDRko7O0FES0E7OztFQUdJLHlCQUFBO0VBQ0EsY0FBQTtBQ0ZKOztBRE1BO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0FDSEo7O0FETUE7O0VBRUksWUFBQTtBQ0hKOztBRE9BO0VBQ0k7SUFDSSxjQUFBO0lBQ0EsZUFBQTtFQ0pOO0FBQ0Y7O0FET0E7RUFDSTtJQUNJLGdCQUFBO0VDTE47QUFDRjs7QURTQTtFQUNJLHFCQUFBO0FDUEo7O0FEVUE7RUFDSSxVQUFBO0VBQ0Esd0NBQUE7RUFBQSxnQ0FBQTtBQ1BKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkZm9vdGVySGVpZ2h0OiA0MHB4O1xyXG5cclxuLmFwcC1jb250YWluZXIuYXBwLWNvbXBvbmVudCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbm1haW4uYXBwLWNvbXBvbmVudCB7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtICN7JGZvb3RlckhlaWdodH0pO1xyXG4gICAgcGFkZGluZy10b3A6IDYwcHg7XHJcbn1cclxuXHJcbi5mb290ZXItaGVpZ2h0LmFwcC1jb21wb25lbnQge1xyXG4gICAgaGVpZ2h0OiAkZm9vdGVySGVpZ2h0O1xyXG59XHJcblxyXG5mb290ZXIuYXBwLWNvbXBvbmVudCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGZvb3RlckhlaWdodDtcclxuICAgIGxpbmUtaGVpZ2h0OiAkZm9vdGVySGVpZ2h0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxufVxyXG5cclxuXHJcbi5uYXZiYXItYnJhbmQuYXBwLWNvbXBvbmVudCA+IGltZyB7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbn1cclxuXHJcbi5uYXZiYXIuYXBwLWNvbXBvbmVudCAubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGEsXHJcbi5uYXZiYXIuYXBwLWNvbXBvbmVudCAubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGE6aG92ZXIsXHJcbi5uYXZiYXIuYXBwLWNvbXBvbmVudCAubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGE6Zm9jdXMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZWZlZjtcclxuICAgIGNvbG9yOiAjODA4MDgwO1xyXG59XHJcblxyXG5cclxuLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXYtcGlsbHMgPiBsaSA+IGEge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBwYWRkaW5nLXRvcDogMC40cmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDAuNHJlbTtcclxufVxyXG5cclxuLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXYtbGluayxcclxuLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXZiYXItdGV4dCB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xyXG4gICAgLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXYtcGlsbHMgPiBsaSArIGxpIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgICAubmF2YmFyLmFwcC1jb21wb25lbnQgLm5hdi1waWxscyA+IGxpICsgbGkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAycHg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4ucHJlYm9vdFNob3cuYXBwLWNvbXBvbmVudCB7XHJcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wcmVib290U3RlcC5hcHAtY29tcG9uZW50IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiAuNXMgZWFzZS1pbi1vdXQgYWxsO1xyXG59XHJcbiIsIi5hcHAtY29udGFpbmVyLmFwcC1jb21wb25lbnQge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbm1haW4uYXBwLWNvbXBvbmVudCB7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xufVxuXG4uZm9vdGVyLWhlaWdodC5hcHAtY29tcG9uZW50IHtcbiAgaGVpZ2h0OiA0MHB4O1xufVxuXG5mb290ZXIuYXBwLWNvbXBvbmVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xufVxuXG4ubmF2YmFyLWJyYW5kLmFwcC1jb21wb25lbnQgPiBpbWcge1xuICBoZWlnaHQ6IDMwcHg7XG59XG5cbi5uYXZiYXIuYXBwLWNvbXBvbmVudCAubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGEsXG4ubmF2YmFyLmFwcC1jb21wb25lbnQgLm5hdi1waWxscyA+IC5hY3RpdmUgPiBhOmhvdmVyLFxuLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXYtcGlsbHMgPiAuYWN0aXZlID4gYTpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZmVmZWY7XG4gIGNvbG9yOiAjODA4MDgwO1xufVxuXG4ubmF2YmFyLmFwcC1jb21wb25lbnQgLm5hdi1waWxscyA+IGxpID4gYSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nLXRvcDogMC40cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC40cmVtO1xufVxuXG4ubmF2YmFyLmFwcC1jb21wb25lbnQgLm5hdi1saW5rLFxuLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXZiYXItdGV4dCB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLm5hdmJhci5hcHAtY29tcG9uZW50IC5uYXYtcGlsbHMgPiBsaSArIGxpIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tdG9wOiAxcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5uYXZiYXIuYXBwLWNvbXBvbmVudCAubmF2LXBpbGxzID4gbGkgKyBsaSB7XG4gICAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgfVxufVxuLnByZWJvb3RTaG93LmFwcC1jb21wb25lbnQge1xuICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59XG5cbi5wcmVib290U3RlcC5hcHAtY29tcG9uZW50IHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dCBhbGw7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/app.component.ts":
/*!*********************************************!*\
  !*** ./src/app/components/app.component.ts ***!
  \*********************************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var ngx_toasta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toasta */ "./node_modules/ngx-toasta/fesm2015/ngx-toasta.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/notification.service */ "./src/app/services/notification.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_local_storage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/local-storage.service */ "./src/app/services/local-storage.service.ts");
/* harmony import */ var _services_app_title_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../services/app-title.service */ "./src/app/services/app-title.service.ts");
/* harmony import */ var _services_configuration_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../services/configuration.service */ "./src/app/services/configuration.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _components_login_login_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../components/login/login.component */ "./src/app/components/login/login.component.ts");













const alertify = __webpack_require__(/*! ../assets/scripts/alertify.js */ "./src/app/assets/scripts/alertify.js");
let AppComponent = class AppComponent {
    constructor(storageManager, toastaService, toastaConfig, accountService, alertService, notificationService, appTitleService, authEndpointService, translationService, configurations, router) {
        this.toastaService = toastaService;
        this.toastaConfig = toastaConfig;
        this.accountService = accountService;
        this.alertService = alertService;
        this.notificationService = notificationService;
        this.appTitleService = appTitleService;
        this.authEndpointService = authEndpointService;
        this.translationService = translationService;
        this.configurations = configurations;
        this.router = router;
        this.newNotificationCount = 0;
        this.appTitle = 'Grow Room Environment';
        this.appLogo = __webpack_require__(/*! ../assets/images/logo-white.png */ "./src/app/assets/images/logo-white.png");
        this.stickyToasties = [];
        this.dataLoadingConsecutiveFailures = 0;
        this.gT = (key, interpolateParams) => this.translationService.getTranslation(key, interpolateParams);
        storageManager.initialiseStorageSyncListener();
        this.toastaConfig.theme = 'bootstrap';
        this.toastaConfig.position = 'top-right';
        this.toastaConfig.limit = 100;
        this.toastaConfig.showClose = true;
        this.toastaConfig.showDuration = false;
        this.appTitleService.appName = this.appTitle;
    }
    get notificationsTitle() {
        if (this.newNotificationCount) {
            return `${this.gT('app.Notifications')} (${this.newNotificationCount} ${this.gT('app.New')})`;
        }
        else {
            return this.gT('app.Notifications');
        }
    }
    ngAfterViewInit() {
        this.modalLoginControls.changes.subscribe((controls) => {
            controls.forEach(control => {
                if (control) {
                    if (control instanceof _components_login_login_component__WEBPACK_IMPORTED_MODULE_12__["LoginComponent"]) {
                        this.loginControl = control;
                        this.loginControl.modalClosedCallback = () => this.loginModal.hide();
                    }
                    else {
                        this.loginModal = control;
                        this.loginModal.show();
                    }
                }
            });
        });
    }
    onLoginModalShown() {
        this.alertService.showStickyMessage('Session Expired', 'Your Session has expired. Please log in again', _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].info);
    }
    onLoginModalHidden() {
        this.alertService.resetStickyMessage();
        this.loginControl.reset();
        this.shouldShowLoginModal = false;
        if (this.authEndpointService.isSessionExpired) {
            this.alertService.showStickyMessage('Session Expired', 'Your Session has expired. Please log in again to renew your session', _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].warn);
        }
    }
    onLoginModalHide() {
        this.alertService.resetStickyMessage();
    }
    ngOnInit() {
        this.isUserLoggedIn = this.authEndpointService.isLoggedIn;
        // 0.5 extra sec to display preboot/loader information. Preboot screen is removed 0.5 sec later
        setTimeout(() => this.isAppLoaded = true, 500);
        setTimeout(() => this.removePrebootScreen = true, 1000);
        setTimeout(() => {
            if (this.isUserLoggedIn) {
                this.alertService.resetStickyMessage();
                // if (!this.authService.isSessionExpired)
                this.alertService.showMessage('Login', `Welcome back ${this.userName}!`, _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].default);
                // else
                //    this.alertService.showStickyMessage("Session Expired", "Your Session has expired. Please log in again", MessageSeverity.warn);
            }
        }, 2000);
        this.alertService.getDialogEvent().subscribe(alert => this.showDialog(alert));
        this.alertService.getMessageEvent().subscribe(message => this.showToast(message));
        this.authEndpointService.reLoginDelegate = () => this.shouldShowLoginModal = true;
        this.authEndpointService.getLoginStatusEvent().subscribe(isLoggedIn => {
            this.isUserLoggedIn = isLoggedIn;
            if (this.isUserLoggedIn) {
                this.initNotificationsLoading();
            }
            else {
                this.unsubscribeNotifications();
            }
            setTimeout(() => {
                if (!this.isUserLoggedIn) {
                    this.alertService.showMessage('Session Ended!', '', _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].default);
                }
            }, 500);
        });
    }
    ngOnDestroy() {
        this.unsubscribeNotifications();
    }
    unsubscribeNotifications() {
        if (this.notificationsLoadingSubscription) {
            this.notificationsLoadingSubscription.unsubscribe();
        }
    }
    initNotificationsLoading() {
        this.notificationsLoadingSubscription = this.notificationService.getNewNotificationsPeriodically()
            .subscribe(notifications => {
            this.dataLoadingConsecutiveFailures = 0;
            this.newNotificationCount = notifications.filter(n => !n.isRead).length;
        }, error => {
            this.alertService.logError(error);
            if (this.dataLoadingConsecutiveFailures++ < 20) {
                setTimeout(() => this.initNotificationsLoading(), 5000);
            }
            else {
                this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].error);
            }
        });
    }
    markNotificationsAsRead() {
        const recentNotifications = this.notificationService.recentNotifications;
        if (recentNotifications.length) {
            this.notificationService.readUnreadNotification(recentNotifications.map(n => n.notificationId), true)
                .subscribe(response => {
                for (const n of recentNotifications) {
                    n.isRead = true;
                }
                this.newNotificationCount = recentNotifications.filter(n => !n.isRead).length;
            }, error => {
                this.alertService.logError(error);
                this.alertService.showMessage('Notification Error', 'Marking read notifications failed', _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].error);
            });
        }
    }
    showDialog(dialog) {
        alertify.set({
            labels: {
                ok: dialog.okLabel || 'OK',
                cancel: dialog.cancelLabel || 'Cancel'
            }
        });
        switch (dialog.type) {
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["DialogType"].alert:
                alertify.alert(dialog.message);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["DialogType"].confirm:
                alertify
                    .confirm(dialog.message, (e) => {
                    if (e) {
                        dialog.okCallback();
                    }
                    else {
                        if (dialog.cancelCallback) {
                            dialog.cancelCallback();
                        }
                    }
                });
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["DialogType"].prompt:
                alertify
                    .prompt(dialog.message, (e, val) => {
                    if (e) {
                        dialog.okCallback(val);
                    }
                    else {
                        if (dialog.cancelCallback) {
                            dialog.cancelCallback();
                        }
                    }
                }, dialog.defaultValue);
                break;
        }
    }
    showToast(alert) {
        if (alert.operation == 'clear') {
            for (const id of this.stickyToasties.slice(0)) {
                this.toastaService.clear(id);
            }
            return;
        }
        const toastOptions = {
            title: alert.message.summary,
            msg: alert.message.detail,
        };
        if (alert.operation == 'add_sticky') {
            toastOptions.timeout = 0;
            toastOptions.onAdd = (toast) => {
                this.stickyToasties.push(toast.id);
            };
            toastOptions.onRemove = (toast) => {
                const index = this.stickyToasties.indexOf(toast.id, 0);
                if (index > -1) {
                    this.stickyToasties.splice(index, 1);
                }
                if (alert.onRemove) {
                    alert.onRemove();
                }
                toast.onAdd = null;
                toast.onRemove = null;
            };
        }
        else {
            toastOptions.timeout = 4000;
        }
        switch (alert.message.severity) {
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].default:
                this.toastaService.default(toastOptions);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].info:
                this.toastaService.info(toastOptions);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].success:
                this.toastaService.success(toastOptions);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].error:
                this.toastaService.error(toastOptions);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].warn:
                this.toastaService.warning(toastOptions);
                break;
            case _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["MessageSeverity"].wait:
                this.toastaService.wait(toastOptions);
                break;
        }
    }
    logout() {
        this.authEndpointService.logout();
        this.authEndpointService.redirectLogoutUser();
    }
    getYear() {
        return new Date().getUTCFullYear();
    }
    get userName() {
        return this.authEndpointService.currentUser ? this.authEndpointService.currentUser.userName : '';
    }
    get fullName() {
        return this.authEndpointService.currentUser ? this.authEndpointService.currentUser.fullName : '';
    }
    get canViewEvents() {
        return this.accountService.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_11__["PermissionValues"].ViewEvents);
    }
    get canViewLogs() {
        return this.accountService.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_11__["PermissionValues"].ViewLogs);
    }
};
AppComponent.ctorParameters = () => [
    { type: _services_local_storage_service__WEBPACK_IMPORTED_MODULE_8__["LocalStorageService"] },
    { type: ngx_toasta__WEBPACK_IMPORTED_MODULE_3__["ToastaService"] },
    { type: ngx_toasta__WEBPACK_IMPORTED_MODULE_3__["ToastaConfig"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_7__["AccountService"] },
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_4__["AlertService"] },
    { type: _services_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"] },
    { type: _services_app_title_service__WEBPACK_IMPORTED_MODULE_9__["AppTitleService"] },
    { type: _services_endpoint_services__WEBPACK_IMPORTED_MODULE_11__["AuthEndpointService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_6__["AppTranslationService"] },
    { type: _services_configuration_service__WEBPACK_IMPORTED_MODULE_10__["ConfigurationService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChildren"])('loginModal,loginControl')
], AppComponent.prototype, "modalLoginControls", void 0);
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/app.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./app.component.scss */ "./src/app/components/app.component.scss")).default]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/components/controls/notifications-management.component.scss":
/*!*****************************************************************************!*\
  !*** ./src/app/components/controls/notifications-management.component.scss ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".unread {\n  font-weight: bold;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb250cm9scy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGNvbnRyb2xzXFxub3RpZmljYXRpb25zLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvY29udHJvbHMvbm90aWZpY2F0aW9ucy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksaUJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udHJvbHMvbm90aWZpY2F0aW9ucy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi51bnJlYWQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIiwiLnVucmVhZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/controls/notifications-management.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/components/controls/notifications-management.component.ts ***!
  \***************************************************************************/
/*! exports provided: NotificationsManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationsManagementComponent", function() { return NotificationsManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/notification.service */ "./src/app/services/notification.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");








let NotificationsManagementComponent = class NotificationsManagementComponent {
    constructor(alertService, translationService, accountClient, notificationService) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.accountClient = accountClient;
        this.notificationService = notificationService;
        this.columns = [];
        this.rows = [];
        this.dataLoadingConsecutiveFailurs = 0;
        this.verticalScrollbar = false;
    }
    ngOnInit() {
        if (this.isViewOnly) {
            this.columns = [
                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },
                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },
            ];
        }
        else {
            const gT = (key) => this.translationService.getTranslation(key);
            this.columns = [
                { prop: '', name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },
                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },
                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },
                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }
            ];
        }
        this.initDataLoading();
    }
    ngOnDestroy() {
        if (this.dataLoadingSubscription) {
            this.dataLoadingSubscription.unsubscribe();
        }
    }
    initDataLoading() {
        if (this.isViewOnly && this.notificationService.recentNotifications) {
            this.rows = this.processResults(this.notificationService.recentNotifications);
            return;
        }
        this.loadingIndicator = true;
        const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();
        this.dataLoadingSubscription = dataLoadTask
            .subscribe(notifications => {
            this.loadingIndicator = false;
            this.dataLoadingConsecutiveFailurs = 0;
            this.rows = this.processResults(notifications);
        }, error => {
            this.loadingIndicator = false;
            this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].warn);
            this.alertService.logError(error);
            if (this.dataLoadingConsecutiveFailurs++ < 5) {
                setTimeout(() => this.initDataLoading(), 5000);
            }
            else {
                this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
            }
        });
        if (this.isViewOnly) {
            this.dataLoadingSubscription = null;
        }
    }
    processResults(notifications) {
        if (this.isViewOnly) {
            notifications.sort((a, b) => {
                return b.date.valueOf() - a.date.valueOf();
            });
        }
        return notifications;
    }
    getPrintedDate(value) {
        if (value) {
            return _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].printTimeOnly(value) + ' on ' + _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].printDateOnly(value);
        }
    }
    deleteNotification(row) {
        this.alertService.showDialog('Are you sure you want to delete the notification \"' + row.header + '\"?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.deleteNotificationHelper(row));
    }
    deleteNotificationHelper(row) {
        this.alertService.startLoadingMessage('Deleting...');
        this.loadingIndicator = true;
        this.notificationService.deleteNotification(row)
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.rows = this.rows.filter(item => item.notificationId != row.notificationId);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    togglePin(row) {
        const pin = !row.isPinned;
        const opText = pin ? 'Pinning' : 'Unpinning';
        this.alertService.startLoadingMessage(opText + '...');
        this.loadingIndicator = true;
        this.notificationService.pinUnpinNotification(row, pin)
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            row.isPinned = pin;
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    get canManageNotifications() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].ManageRoles); // Todo: Consider creating separate permission for notifications
    }
};
NotificationsManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_5__["AccountService"] },
    { type: _services_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], NotificationsManagementComponent.prototype, "isViewOnly", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], NotificationsManagementComponent.prototype, "verticalScrollbar", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('statusHeaderTemplate', { static: true })
], NotificationsManagementComponent.prototype, "statusHeaderTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('statusTemplate', { static: true })
], NotificationsManagementComponent.prototype, "statusTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dateTemplate', { static: true })
], NotificationsManagementComponent.prototype, "dateTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('contentHeaderTemplate', { static: true })
], NotificationsManagementComponent.prototype, "contentHeaderTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('contenBodytTemplate', { static: true })
], NotificationsManagementComponent.prototype, "contenBodytTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], NotificationsManagementComponent.prototype, "actionsTemplate", void 0);
NotificationsManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'notifications-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./notifications-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/notifications-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./notifications-management.component.scss */ "./src/app/components/controls/notifications-management.component.scss")).default]
    })
], NotificationsManagementComponent);



/***/ }),

/***/ "./src/app/components/controls/search-box.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/components/controls/search-box.component.scss ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".search-icon {\n  pointer-events: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb250cm9scy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGNvbnRyb2xzXFxzZWFyY2gtYm94LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2NvbnRyb2xzL3NlYXJjaC1ib3guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxvQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250cm9scy9zZWFyY2gtYm94LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5zZWFyY2gtaWNvbiB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4iLCIuc2VhcmNoLWljb24ge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/controls/search-box.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/controls/search-box.component.ts ***!
  \*************************************************************/
/*! exports provided: SearchBoxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchBoxComponent", function() { return SearchBoxComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SearchBoxComponent = class SearchBoxComponent {
    constructor() {
        this.placeholder = 'Search...';
        this.searchChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    onValueChange(value) {
        setTimeout(() => this.searchChange.emit(value));
    }
    clear() {
        this.searchInput.nativeElement.value = '';
        this.onValueChange(this.searchInput.nativeElement.value);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], SearchBoxComponent.prototype, "placeholder", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], SearchBoxComponent.prototype, "searchChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('searchInput', { static: true })
], SearchBoxComponent.prototype, "searchInput", void 0);
SearchBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'search-box',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./search-box.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/controls/search-box.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./search-box.component.scss */ "./src/app/components/controls/search-box.component.scss")).default]
    })
], SearchBoxComponent);



/***/ }),

/***/ "./src/app/components/events/event-conditions-management.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/components/events/event-conditions-management.component.scss ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".event-conditions {\n  font-size: 0.8em !important;\n  margin-right: 1px;\n}\n\n.control-box {\n  margin-bottom: 5px;\n}\n\n.search-box {\n  margin: 0;\n}\n\n.nav-item.toolbaritem a {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  min-width: 100px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvQzpcXFByb2plY3RzXFxJb3RcXEdyb3dSb29tRW52aXJvbm1lbnRcXFdlYlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxjb21wb25lbnRzXFxldmVudHNcXGV2ZW50LWNvbmRpdGlvbnMtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvZXZlbnQtY29uZGl0aW9ucy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7QUNDRjs7QURFQTtFQUNFLFNBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvZXZlbnQtY29uZGl0aW9ucy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV2ZW50LWNvbmRpdGlvbnMge1xyXG4gIGZvbnQtc2l6ZTogMC44ZW0gIWltcG9ydGFudDtcclxuICBtYXJnaW4tcmlnaHQ6IDFweDtcclxufVxyXG5cclxuLmNvbnRyb2wtYm94IHtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5zZWFyY2gtYm94IHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5uYXYtaXRlbS50b29sYmFyaXRlbSBhIHtcclxuICBwYWRkaW5nLXRvcDogM3B4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XHJcbiAgbWluLXdpZHRoOiAxMDBweDtcclxufVxyXG4iLCIuZXZlbnQtY29uZGl0aW9ucyB7XG4gIGZvbnQtc2l6ZTogMC44ZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XG59XG5cbi5jb250cm9sLWJveCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLnNlYXJjaC1ib3gge1xuICBtYXJnaW46IDA7XG59XG5cbi5uYXYtaXRlbS50b29sYmFyaXRlbSBhIHtcbiAgcGFkZGluZy10b3A6IDNweDtcbiAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgbWluLXdpZHRoOiAxMDBweDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/events/event-conditions-management.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/components/events/event-conditions-management.component.ts ***!
  \****************************************************************************/
/*! exports provided: EventConditionsManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventConditionsManagementComponent", function() { return EventConditionsManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_event_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/event.service */ "./src/app/services/event.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");







let EventConditionsManagementComponent = class EventConditionsManagementComponent {
    constructor(alertService, translationService, eventService) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.eventService = eventService;
        this.columns = [];
        this.rows = [];
        this.operators = _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["Operators"];
        this.operatorKeys = Object.keys(this.operators).filter(k => !isNaN(Number(k))).map(Number);
    }
    ngOnInit() {
        const translate = (key) => this.translationService.getTranslation(key);
        this.columns = [
            { prop: 'dataPointId', name: translate('eventConditions.management.DataPoint'), width: 230, cellTemplate: this.dataPointTemplate },
            { prop: 'operator', name: translate('eventConditions.management.Operator'), width: 160, cellTemplate: this.operatorTemplate },
            { prop: 'value', name: translate('eventConditions.management.Value'), width: 160, cellTemplate: this.valueTemplate },
            { name: '', width: 180, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }
        ];
        this.loadData();
    }
    get eventConditions() {
        return this.event.eventConditions;
    }
    getDataPointName(dataPointId) {
        var dataPoint = this.dataPoints.find(d => d.dataPointId == dataPointId);
        return dataPoint ? dataPoint.name : "";
    }
    onSearchChanged(value) {
        this.rows = this.event.eventConditions.filter(r => _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].searchArray(value, false, r.eventId, r.eventConditionId, r.dataPoint.name, r.operatorDescription, r.value));
    }
    newEventCondition() {
        var eventCondition = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["EventConditionViewModel"]();
        eventCondition.eventConditionId = 0;
        eventCondition.dataPointId = this.dataPoints[0].dataPointId;
        eventCondition.operator = _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["Operators"].Equal;
        eventCondition.eventId = this.event.eventId;
        this.rows.splice(this.rows.length, 0, eventCondition);
        this.rows = [...this.rows];
        this.event.eventConditions = [...this.rows];
        this.ngxDatatable.offset = Math.round(this.rows.length / this.ngxDatatable.pageSize);
    }
    deleteEventCondition(row) {
        this.alertService.showDialog(`Are you sure you want to delete condition \"${row.dataPoint.name} ${this.eventService.getOperatorSymbol(row.operator)} \'${row.value}\'\"?`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => {
            this.rows = this.rows.filter(item => item !== row);
            this.event.eventConditions = this.event.eventConditions.filter(item => item !== row);
        });
    }
    loadData() {
        if (this.event && this.event.eventConditions && this.event.eventConditions.length > 0) {
            this.rows = this.event.eventConditions;
        }
    }
};
EventConditionsManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_event_service__WEBPACK_IMPORTED_MODULE_4__["EventService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], EventConditionsManagementComponent.prototype, "event", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], EventConditionsManagementComponent.prototype, "dataPoints", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dataTable', { static: true })
], EventConditionsManagementComponent.prototype, "ngxDatatable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dataPointTemplate', { static: true })
], EventConditionsManagementComponent.prototype, "dataPointTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('operatorTemplate', { static: true })
], EventConditionsManagementComponent.prototype, "operatorTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('valueTemplate', { static: true })
], EventConditionsManagementComponent.prototype, "valueTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], EventConditionsManagementComponent.prototype, "actionsTemplate", void 0);
EventConditionsManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'event-conditions-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./event-conditions-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-conditions-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./event-conditions-management.component.scss */ "./src/app/components/events/event-conditions-management.component.scss")).default]
    })
], EventConditionsManagementComponent);



/***/ }),

/***/ "./src/app/components/events/event-editor.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/components/events/event-editor.component.scss ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".row:not(:last-child) {\n  /*border-bottom: 1px solid #ccc;*/\n}\n\n.separator-hr {\n  margin: 0 5px;\n  border-top-style: dashed;\n}\n\n.edit-separator-hr {\n  margin: 10px 5px;\n  border-top-style: dashed;\n}\n\n.last-separator-hr {\n  margin-top: 5px;\n}\n\n.edit-last-separator-hr {\n  margin-top: 15px;\n}\n\n.password-separator-hr {\n  margin: 5px;\n  border-style: none;\n}\n\n.form-group {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\ninput.form-control {\n  border-left-width: 5px;\n}\n\nselect.form-control {\n  border-left-width: 5px;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n.password-well {\n  padding: 0.5rem;\n}\n\n.hint-sm {\n  display: block;\n}\n\n.form-check.user-enabled {\n  display: inline-block;\n}\n\n.unblock-user {\n  margin-left: 34px;\n}\n\n@media (min-width: 992px) {\n  .user-enabled {\n    margin-left: 40px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvQzpcXFByb2plY3RzXFxJb3RcXEdyb3dSb29tRW52aXJvbm1lbnRcXFdlYlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxjb21wb25lbnRzXFxldmVudHNcXGV2ZW50LWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvZXZlbnQtZWRpdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUNBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx3QkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSx3QkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREdBO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxzQkFBQTtBQ0FGOztBREdBO0VBQ0Usc0JBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLHFCQUFBO0FDQUY7O0FER0E7RUFDRSxpQkFBQTtBQ0FGOztBRElBO0VBQ0U7SUFDRSxpQkFBQTtFQ0RGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2V2ZW50cy9ldmVudC1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93Om5vdCg6bGFzdC1jaGlsZCkge1xyXG4gIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7Ki9cclxufVxyXG5cclxuLnNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luOiAwIDVweDtcclxuICBib3JkZXItdG9wLXN0eWxlOiBkYXNoZWQ7XHJcbn1cclxuXHJcbi5lZGl0LXNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luOiAxMHB4IDVweDtcclxuICBib3JkZXItdG9wLXN0eWxlOiBkYXNoZWQ7XHJcbn1cclxuXHJcbi5sYXN0LXNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4uZWRpdC1sYXN0LXNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luLXRvcDogMTVweDtcclxufVxyXG5cclxuLnBhc3N3b3JkLXNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuaW5wdXQuZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItbGVmdC13aWR0aDogNXB4O1xyXG59XHJcblxyXG5zZWxlY3QuZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItbGVmdC13aWR0aDogNXB4O1xyXG59XHJcblxyXG4uaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5wYXNzd29yZC13ZWxsIHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbn1cclxuXHJcbi5oaW50LXNtIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmZvcm0tY2hlY2sudXNlci1lbmFibGVkIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi51bmJsb2NrLXVzZXIge1xyXG4gIG1hcmdpbi1sZWZ0OiAzNHB4O1xyXG59XHJcblxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgLnVzZXItZW5hYmxlZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDBweDtcclxuICB9XHJcbn1cclxuIiwiLnJvdzpub3QoOmxhc3QtY2hpbGQpIHtcbiAgLypib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsqL1xufVxuXG4uc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luOiAwIDVweDtcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xufVxuXG4uZWRpdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW46IDEwcHggNXB4O1xuICBib3JkZXItdG9wLXN0eWxlOiBkYXNoZWQ7XG59XG5cbi5sYXN0LXNlcGFyYXRvci1ociB7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmVkaXQtbGFzdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4ucGFzc3dvcmQtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luOiA1cHg7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5pbnB1dC5mb3JtLWNvbnRyb2wge1xuICBib3JkZXItbGVmdC13aWR0aDogNXB4O1xufVxuXG5zZWxlY3QuZm9ybS1jb250cm9sIHtcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IDVweDtcbn1cblxuLmludmFsaWQtZmVlZGJhY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBhc3N3b3JkLXdlbGwge1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5oaW50LXNtIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5mb3JtLWNoZWNrLnVzZXItZW5hYmxlZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVuYmxvY2stdXNlciB7XG4gIG1hcmdpbi1sZWZ0OiAzNHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnVzZXItZW5hYmxlZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gIH1cbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/events/event-editor.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/events/event-editor.component.ts ***!
  \*************************************************************/
/*! exports provided: EventEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventEditorComponent", function() { return EventEditorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_event_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/event.service */ "./src/app/services/event.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _models_enum_models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../models/enum.models */ "./src/app/models/enum.models.ts");







let EventEditorComponent = class EventEditorComponent {
    constructor(alertService, eventService) {
        this.alertService = alertService;
        this.eventService = eventService;
        this.isSaving = false;
        this.uniqueId = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].uniqueId();
        this.event = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["EventViewModel"]();
        this.formResetToggle = true;
        this.viewModelState = _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].View;
        this.states = _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["ActionDeviceStates"];
        this.stateKeys = Object.keys(this.states).filter(k => !isNaN(Number(k))).map(Number);
    }
    ngOnInit() {
        this.loadData();
    }
    loadData() {
        this.alertService.startLoadingMessage();
        this.eventService.getEditorData().subscribe(results => this.onLoadDataSuccessful(results[0], results[1]), error => this.onLoadDataFailed(error));
    }
    onLoadDataSuccessful(actionDevices, dataPoints) {
        this.alertService.stopLoadingMessage();
        this.actionDevices = actionDevices;
        this.dataPoints = dataPoints;
    }
    onLoadDataFailed(error) {
        this.alertService.stopLoadingMessage();
        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        this.actionDevices = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["ActionDeviceViewModel"][0];
        this.dataPoints = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["DataPointViewModel"][0];
    }
    onEventConditionsChanged(eventConditions) {
        this.event.eventConditions = [...eventConditions];
    }
    save() {
        this.isSaving = true;
        this.alertService.startLoadingMessage('Saving changes...');
        this.event.actionDevice = this.actionDevices.find(ad => ad.actionDeviceId == this.event.actionDeviceId);
        this.event.stateDescription = this.states[this.event.state];
        if (this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].New) {
            this.eventService.addEvent(this.event).subscribe(event => this.saveSuccessHelper(event), error => this.saveFailedHelper(error));
        }
        else if (this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].Edit) {
            this.eventService.updateEvent(this.event).subscribe(event => this.saveSuccessHelper(event), error => this.saveFailedHelper(error));
        }
    }
    saveSuccessHelper(event) {
        Object.assign(this.event, event);
        this.event.eventConditions = [...event.eventConditions];
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        var eventName = this.event.name;
        if (this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].New) {
            this.alertService.showMessage('Success', `Event \"${eventName}\" was created successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }
        else if (this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].Edit) {
            this.alertService.showMessage('Success', `Changes to event \"${eventName}\" was saved successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }
        this.viewModelState = _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].Edit;
        if (this.changesSavedCallback) {
            this.changesSavedCallback(this.event);
        }
        this.resetForm();
    }
    saveFailedHelper(error) {
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        this.alertService.showStickyMessage('Save Error', 'The below errors occurred while saving your changes:', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        this.alertService.showStickyMessage(error, null, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
        if (this.changesFailedCallback) {
            this.changesFailedCallback();
        }
    }
    cancel() {
        this.alertService.showMessage('Canceled', 'Operation canceled by user', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default);
        this.alertService.resetStickyMessage();
        if (this.changesCancelledCallback) {
            this.changesCancelledCallback();
        }
    }
    close() {
        if (this.changesCancelledCallback) {
            this.changesCancelledCallback();
        }
    }
    resetForm(replace = false) {
        if (!replace) {
            this.form.reset();
        }
        else {
            this.formResetToggle = false;
            setTimeout(() => {
                this.formResetToggle = true;
            });
        }
    }
    newEvent() {
        this.viewModelState = _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].New;
        this.event = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["EventViewModel"]();
        this.event.eventConditions = _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["EventConditionViewModel"][0];
        return this.event;
    }
    editEvent(event) {
        this.viewModelState = _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].Edit;
        return this.setEvent(event);
    }
    viewEvent(event) {
        this.viewModelState = _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].View;
        return this.setEvent(event);
    }
    setEvent(event) {
        if (event) {
            this.event = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["EventViewModel"]();
            Object.assign(this.event, event);
            return this.event;
        }
        else {
            return this.newEvent();
        }
    }
    get canManageEvents() {
        return this.eventService.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["PermissionValues"].ManageEvents);
    }
    get isEditMode() {
        return this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].Edit || this.viewModelState == _models_enum_models__WEBPACK_IMPORTED_MODULE_6__["ViewModelStates"].New;
    }
};
EventEditorComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_event_service__WEBPACK_IMPORTED_MODULE_3__["EventService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('form', { static: false })
], EventEditorComponent.prototype, "form", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('isEnabled', { static: false })
], EventEditorComponent.prototype, "name", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('name', { static: false })
], EventEditorComponent.prototype, "isEnabled", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionDevice', { static: false })
], EventEditorComponent.prototype, "actionDevice", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('state', { static: false })
], EventEditorComponent.prototype, "state", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('eventConditions', { static: false })
], EventEditorComponent.prototype, "eventConditions", void 0);
EventEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'event-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./event-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/event-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./event-editor.component.scss */ "./src/app/components/events/event-editor.component.scss")).default]
    })
], EventEditorComponent);



/***/ }),

/***/ "./src/app/components/events/events-management.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/components/events/events-management.component.scss ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".event-conditions {\n  font-size: 0.8em !important;\n  margin-right: 1px;\n}\n\n.control-box {\n  margin-bottom: 5px;\n}\n\n.search-box {\n  margin: 0;\n}\n\n.nav-item.toolbaritem a {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  min-width: 100px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ldmVudHMvQzpcXFByb2plY3RzXFxJb3RcXEdyb3dSb29tRW52aXJvbm1lbnRcXFdlYlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxjb21wb25lbnRzXFxldmVudHNcXGV2ZW50cy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2V2ZW50cy9ldmVudHMtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxTQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXZlbnRzL2V2ZW50cy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV2ZW50LWNvbmRpdGlvbnMge1xyXG4gIGZvbnQtc2l6ZTogMC44ZW0gIWltcG9ydGFudDtcclxuICBtYXJnaW4tcmlnaHQ6IDFweDtcclxufVxyXG5cclxuLmNvbnRyb2wtYm94IHtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5zZWFyY2gtYm94IHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5uYXYtaXRlbS50b29sYmFyaXRlbSBhIHtcclxuICBwYWRkaW5nLXRvcDogM3B4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XHJcbiAgbWluLXdpZHRoOiAxMDBweDtcclxufVxyXG5cclxuIiwiLmV2ZW50LWNvbmRpdGlvbnMge1xuICBmb250LXNpemU6IDAuOGVtICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogMXB4O1xufVxuXG4uY29udHJvbC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi5zZWFyY2gtYm94IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ubmF2LWl0ZW0udG9vbGJhcml0ZW0gYSB7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XG4gIG1pbi13aWR0aDogMTAwcHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/events/events-management.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/components/events/events-management.component.ts ***!
  \******************************************************************/
/*! exports provided: EventsManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsManagementComponent", function() { return EventsManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_event_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/event.service */ "./src/app/services/event.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");







let EventsManagementComponent = class EventsManagementComponent {
    constructor(alertService, translationService, eventService) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.eventService = eventService;
        this.columns = [];
        this.rows = [];
        this.cachedRows = [];
    }
    ngOnInit() {
        const gT = (key) => this.translationService.getTranslation(key);
        this.columns = [
            { prop: 'eventId', name: gT('events.management.EventId'), width: 40, cellTemplate: this.idTemplate, canAutoResize: false },
            { prop: 'name', name: gT('events.management.Name'), width: 50 },
            { prop: 'eventConditions', name: gT('events.management.EventConditions'), width: 350, cellTemplate: this.eventConditionsTemplate },
            { prop: 'actionDevice.name', name: gT('events.management.ActionDevice'), width: 50 },
            { prop: 'stateDescription', name: gT('events.management.State'), width: 50 }
        ];
        if (this.canManageEvents) {
            this.columns.push({ name: '', width: 200, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });
        }
        this.loadData();
    }
    ngAfterViewInit() {
        this.eventEditor.changesSavedCallback = (event) => {
            this.onEditorModalSaved(event);
            this.editorModal.hide();
        };
        this.eventEditor.changesCancelledCallback = () => {
            this.editedEvent = null;
            this.cachedEvent = null;
            this.editorModal.hide();
        };
    }
    loadData() {
        this.alertService.startLoadingMessage();
        this.loadingIndicator = true;
        this.eventService.getEvents(true).subscribe(events => this.onLoadDataSuccessful(events), error => this.onLoadDataFailed(error));
    }
    onLoadDataSuccessful(events) {
        this.alertService.stopLoadingMessage();
        this.loadingIndicator = false;
        this.cachedRows = [...events];
        this.rows = events;
    }
    onLoadDataFailed(error) {
        this.alertService.stopLoadingMessage();
        this.loadingIndicator = false;
        this.alertService.showStickyMessage('Load Error', `Unable to retrieve events from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
    }
    onSearchChanged(value) {
        this.rows = this.cachedRows.filter(r => _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].searchArray(value, false, r.eventId, r.name, r.state, r.actionDevice.name));
    }
    onEditorModalSaved(newEvent) {
        if (this.cachedEvent) {
            let sourceIndex = this.cachedRows.indexOf(this.cachedEvent, 0);
            if (sourceIndex > -1) {
                Object.assign(this.cachedEvent, newEvent);
                //this.cachedEvent.eventConditions = [...newEvent.eventConditions];
                Object.assign(this.cachedRows[sourceIndex], this.cachedEvent);
                //this.cachedRows[sourceIndex].eventConditions = [...this.cachedEvent.eventConditions];
                Object.assign(this.rows[sourceIndex], this.cachedEvent);
                //this.rows[sourceIndex].eventConditions = [...this.cachedEvent.eventConditions];
            }
        }
        else {
            const event = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["EventViewModel"]();
            Object.assign(event, newEvent);
            this.cachedRows.splice(this.cachedRows.length, 0, event);
            this.rows.splice(this.rows.length, 0, event);
            this.rows = [...this.rows];
            this.ngxDatatable.offset = Math.round(this.rows.length / this.ngxDatatable.pageSize);
        }
        this.editedEvent = null;
        this.cachedEvent = null;
    }
    onEditorModalHidden() {
        this.editingEventName = null;
        this.eventEditor.resetForm(true);
    }
    newEvent() {
        this.editingEventName = null;
        this.cachedEvent = null;
        this.editedEvent = this.eventEditor.newEvent();
        this.editorModal.show();
    }
    editEvent(row) {
        this.editingEventName = { name: row.name };
        this.cachedEvent = row;
        this.editedEvent = this.eventEditor.editEvent(row);
        this.editorModal.show();
    }
    deleteEvent(row) {
        this.alertService.showDialog('Are you sure you want to delete \"' + row.name + '\"?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.deleteEventHelper(row));
    }
    deleteEventHelper(row) {
        this.alertService.startLoadingMessage('Deleting...');
        this.loadingIndicator = true;
        this.eventService.deleteEvent(row.eventId)
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.cachedRows = this.cachedRows.filter(item => item !== row);
            this.rows = this.rows.filter(item => item !== row);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Delete Error', `An error occurred whilst deleting the event.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    get canManageEvents() {
        return this.eventService.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].ManageEvents);
    }
};
EventsManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_event_service__WEBPACK_IMPORTED_MODULE_4__["EventService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dataTable', { static: true })
], EventsManagementComponent.prototype, "ngxDatatable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('idTemplate', { static: true })
], EventsManagementComponent.prototype, "idTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('eventConditionsTemplate', { static: true })
], EventsManagementComponent.prototype, "eventConditionsTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], EventsManagementComponent.prototype, "actionsTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('editorModal', { static: true })
], EventsManagementComponent.prototype, "editorModal", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('eventEditor', { static: true })
], EventsManagementComponent.prototype, "eventEditor", void 0);
EventsManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'events-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./events-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./events-management.component.scss */ "./src/app/components/events/events-management.component.scss")).default]
    })
], EventsManagementComponent);



/***/ }),

/***/ "./src/app/components/events/events.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/components/events/events.component.scss ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXZlbnRzL2V2ZW50cy5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "./src/app/components/events/events.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/components/events/events.component.ts ***!
  \*******************************************************/
/*! exports provided: EventsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsComponent", function() { return EventsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");



let EventsComponent = 
/** events component*/
class EventsComponent {
    /** events ctor */
    constructor() {
    }
};
EventsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'events',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./events.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/events/events.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_2__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./events.component.scss */ "./src/app/components/events/events.component.scss")).default]
    })
    /** events component*/
], EventsComponent);



/***/ }),

/***/ "./src/app/components/extended-logs/extended-log-editor.component.scss":
/*!*****************************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-log-editor.component.scss ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".row:not(:last-child) {\n  /*border-bottom: 1px solid #ccc;*/\n}\n\n.separator-hr {\n  margin: 0 5px;\n  border-top-style: dashed;\n}\n\n.edit-separator-hr {\n  margin: 10px 5px;\n  border-top-style: dashed;\n}\n\n.last-separator-hr {\n  margin-top: 5px;\n}\n\n.edit-last-separator-hr {\n  margin-top: 15px;\n}\n\n.form-group {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\ninput.form-control {\n  border-left-width: 5px;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n.group-name {\n  padding-top: 0;\n  font-weight: 500;\n  padding-right: 0;\n}\n\n.permissionsColumn {\n  margin-bottom: 20px;\n}\n\n.permissionsRow {\n  margin: 0 15px;\n}\n\n.well-sm {\n  padding: 0.5rem;\n}\n\n@media (min-width: 992px) {\n  .user-enabled {\n    margin-left: 40px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leHRlbmRlZC1sb2dzL0M6XFxQcm9qZWN0c1xcSW90XFxHcm93Um9vbUVudmlyb25tZW50XFxXZWJcXENsaWVudEFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcZXh0ZW5kZWQtbG9nc1xcZXh0ZW5kZWQtbG9nLWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9leHRlbmRlZC1sb2dzL2V4dGVuZGVkLWxvZy1lZGl0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQ0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtFQUNBLHdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxlQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtBQ0NGOztBREdBO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxzQkFBQTtBQ0FGOztBREdBO0VBQ0UsY0FBQTtBQ0FGOztBREdBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLG1CQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0FDQUY7O0FESUE7RUFDRSxlQUFBO0FDREY7O0FESUE7RUFDRTtJQUNFLGlCQUFBO0VDREY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXh0ZW5kZWQtbG9ncy9leHRlbmRlZC1sb2ctZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdzpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyovXHJcbn1cclxuXHJcbi5zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbjogMCA1cHg7XHJcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xyXG59XHJcblxyXG4uZWRpdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbjogMTBweCA1cHg7XHJcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xyXG59XHJcblxyXG4ubGFzdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmVkaXQtbGFzdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbn1cclxuXHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG5pbnB1dC5mb3JtLWNvbnRyb2wge1xyXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiA1cHg7XHJcbn1cclxuXHJcbi5pbnZhbGlkLWZlZWRiYWNrIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmdyb3VwLW5hbWUge1xyXG4gIHBhZGRpbmctdG9wOiAwO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgcGFkZGluZy1yaWdodDogMDtcclxufVxyXG5cclxuLnBlcm1pc3Npb25zQ29sdW1uIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4ucGVybWlzc2lvbnNSb3cge1xyXG4gIG1hcmdpbjogMCAxNXB4O1xyXG59XHJcblxyXG5cclxuLndlbGwtc20ge1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgLnVzZXItZW5hYmxlZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDBweDtcclxuICB9XHJcbn1cclxuIiwiLnJvdzpub3QoOmxhc3QtY2hpbGQpIHtcbiAgLypib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsqL1xufVxuXG4uc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luOiAwIDVweDtcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xufVxuXG4uZWRpdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW46IDEwcHggNXB4O1xuICBib3JkZXItdG9wLXN0eWxlOiBkYXNoZWQ7XG59XG5cbi5sYXN0LXNlcGFyYXRvci1ociB7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmVkaXQtbGFzdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbmlucHV0LmZvcm0tY29udHJvbCB7XG4gIGJvcmRlci1sZWZ0LXdpZHRoOiA1cHg7XG59XG5cbi5pbnZhbGlkLWZlZWRiYWNrIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ncm91cC1uYW1lIHtcbiAgcGFkZGluZy10b3A6IDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbi5wZXJtaXNzaW9uc0NvbHVtbiB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5wZXJtaXNzaW9uc1JvdyB7XG4gIG1hcmdpbjogMCAxNXB4O1xufVxuXG4ud2VsbC1zbSB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC51c2VyLWVuYWJsZWQge1xuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICB9XG59Il19 */");

/***/ }),

/***/ "./src/app/components/extended-logs/extended-log-editor.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-log-editor.component.ts ***!
  \***************************************************************************/
/*! exports provided: ExtendedLogEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogEditorComponent", function() { return ExtendedLogEditorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");



let ExtendedLogEditorComponent = class ExtendedLogEditorComponent {
    constructor() {
        this.logEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ExtendedLogViewModel"]();
        this.selectedValues = {};
        this.formResetToggle = true;
    }
    cancel() {
        this.logEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ExtendedLogViewModel"]();
        this.resetForm();
        if (this.changesCancelledCallback) {
            this.changesCancelledCallback();
        }
    }
    resetForm(replace = false) {
        if (!replace) {
            this.form.reset();
        }
        else {
            this.formResetToggle = false;
            setTimeout(() => {
                this.formResetToggle = true;
            });
        }
    }
    editLog(log) {
        if (log) {
            this.editingLogId = log.id;
            this.selectedValues = {};
            this.logEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ExtendedLogViewModel"]();
            Object.assign(this.logEdit, log);
            return this.logEdit;
        }
    }
    get errorLevel() {
        return this.logEdit.level + " - " + this.logEdit.levelDescription;
    }
    set errorLevel(value) {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('f', { static: false })
], ExtendedLogEditorComponent.prototype, "form", void 0);
ExtendedLogEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'extended-log-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./extended-log-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-log-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./extended-log-editor.component.scss */ "./src/app/components/extended-logs/extended-log-editor.component.scss")).default]
    })
], ExtendedLogEditorComponent);



/***/ }),

/***/ "./src/app/components/extended-logs/extended-logs-management.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-logs-management.component.scss ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".control-box {\n  margin-bottom: 5px;\n}\n\n.search-box {\n  margin: 0;\n}\n\n.nav-item.toolbaritem a {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  min-width: 100px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leHRlbmRlZC1sb2dzL0M6XFxQcm9qZWN0c1xcSW90XFxHcm93Um9vbUVudmlyb25tZW50XFxXZWJcXENsaWVudEFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcZXh0ZW5kZWQtbG9nc1xcZXh0ZW5kZWQtbG9ncy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2V4dGVuZGVkLWxvZ3MvZXh0ZW5kZWQtbG9ncy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0Usa0JBQUE7QUNBRjs7QURHQTtFQUNFLFNBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9leHRlbmRlZC1sb2dzL2V4dGVuZGVkLWxvZ3MtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uY29udHJvbC1ib3gge1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLnNlYXJjaC1ib3gge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLm5hdi1pdGVtLnRvb2xiYXJpdGVtIGEge1xyXG4gIHBhZGRpbmctdG9wOiAzcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDNweDtcclxuICBtaW4td2lkdGg6IDEwMHB4O1xyXG59XHJcbiIsIi5jb250cm9sLWJveCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLnNlYXJjaC1ib3gge1xuICBtYXJnaW46IDA7XG59XG5cbi5uYXYtaXRlbS50b29sYmFyaXRlbSBhIHtcbiAgcGFkZGluZy10b3A6IDNweDtcbiAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgbWluLXdpZHRoOiAxMDBweDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/extended-logs/extended-logs-management.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-logs-management.component.ts ***!
  \********************************************************************************/
/*! exports provided: ExtendedLogsManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogsManagementComponent", function() { return ExtendedLogsManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_extended_log_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/extended-log.service */ "./src/app/services/extended-log.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");






let ExtendedLogsManagementComponent = class ExtendedLogsManagementComponent {
    constructor(alertService, translationService, extendedLogService) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.extendedLogService = extendedLogService;
        this.columns = [];
        this.rows = [];
        this.rowsCache = [];
    }
    ngOnInit() {
        const gT = (key) => this.translationService.getTranslation(key);
        this.columns = [
            { prop: 'id', name: gT('logs.management.Id'), width: 60, cellTemplate: this.idTemplate, canAutoResize: false },
            { prop: 'eventId', name: gT('logs.management.EventId'), width: 60 },
            { prop: 'level', name: gT('logs.management.Level'), width: 60 },
            { prop: 'name', name: gT('logs.management.Name'), width: 200 },
            { prop: 'message', name: gT('logs.management.Message'), width: 200 },
            { prop: 'browser', name: gT('logs.management.Browser'), width: 200 },
            { prop: 'host', name: gT('logs.management.Host'), width: 70 },
            { prop: 'path', name: gT('logs.management.Path'), width: 120 },
            { prop: 'user', name: gT('logs.management.User'), width: 70 },
            { prop: 'method', name: gT('logs.management.Method'), width: 70 },
            { prop: 'statusCode', name: gT('logs.management.StatusCode'), width: 70 },
            { prop: 'serverVariables', name: gT('logs.management.ServerVariables'), width: 100 },
            { prop: 'cookies', name: gT('logs.management.Cookies'), width: 100 },
            { prop: 'formVariables', name: gT('logs.management.FormVariables'), width: 100 },
            { prop: 'queryString', name: gT('logs.management.QueryString'), width: 100 },
            { prop: 'timeStamp', name: gT('logs.management.TimeStamp'), width: 180 }
        ];
        this.loadData();
    }
    ngAfterViewInit() {
        this.logEditor.changesCancelledCallback = () => {
            this.editorModal.hide();
        };
    }
    onActivate(event) {
        if (event.type == 'click') {
            this.editLog(event.row);
        }
    }
    loadData() {
        this.alertService.startLoadingMessage();
        this.loadingIndicator = true;
        this.extendedLogService.getExtendedLogs()
            .subscribe(logs => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.rowsCache = [...logs];
            this.rows = logs;
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Load Error', `Unable to retrieve logs from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    onSearchChanged(value) {
        this.rows = this.rowsCache.filter(r => _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].searchArray(value, false, r.name, r.message, r.browser, r.host, r.path, r.user));
    }
    onEditorModalHidden() {
        this.editingLogId = null;
        this.logEditor.resetForm(true);
    }
    editLog(row) {
        this.editingLogId = { id: row.id };
        this.sourceLog = row;
        this.editedLog = this.logEditor.editLog(row);
        this.editorModal.show();
    }
    clearLog() {
        this.alertService.showDialog('Are you sure you want to clear the log?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.clearLogHelper());
    }
    clearLogHelper() {
        this.alertService.startLoadingMessage('Deleting...');
        this.loadingIndicator = true;
        this.extendedLogService.clearExtendedLogs()
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.rowsCache = [];
            this.rows = [];
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Delete Error', `An error occurred while clearing the log.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
};
ExtendedLogsManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_extended_log_service__WEBPACK_IMPORTED_MODULE_4__["ExtendedLogService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('idTemplate', { static: true })
], ExtendedLogsManagementComponent.prototype, "idTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], ExtendedLogsManagementComponent.prototype, "actionsTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('editorModal', { static: true })
], ExtendedLogsManagementComponent.prototype, "editorModal", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('logEditor', { static: true })
], ExtendedLogsManagementComponent.prototype, "logEditor", void 0);
ExtendedLogsManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'extended-logs-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./extended-logs-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./extended-logs-management.component.scss */ "./src/app/components/extended-logs/extended-logs-management.component.scss")).default]
    })
], ExtendedLogsManagementComponent);



/***/ }),

/***/ "./src/app/components/extended-logs/extended-logs.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-logs.component.scss ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXh0ZW5kZWQtbG9ncy9leHRlbmRlZC1sb2dzLmNvbXBvbmVudC5zY3NzIn0= */");

/***/ }),

/***/ "./src/app/components/extended-logs/extended-logs.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/components/extended-logs/extended-logs.component.ts ***!
  \*********************************************************************/
/*! exports provided: ExtendedLogsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogsComponent", function() { return ExtendedLogsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");



let ExtendedLogsComponent = class ExtendedLogsComponent {
    constructor() {
    }
};
ExtendedLogsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'extended-logs',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./extended-logs.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/extended-logs/extended-logs.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_2__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./extended-logs.component.scss */ "./src/app/components/extended-logs/extended-logs.component.scss")).default]
    })
], ExtendedLogsComponent);



/***/ }),

/***/ "./src/app/components/home/home.component.scss":
/*!*****************************************************!*\
  !*** ./src/app/components/home/home.component.scss ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("button.close {\n  position: absolute;\n  top: 0.25rem;\n  right: 1.5rem;\n  z-index: 100;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL0M6XFxQcm9qZWN0c1xcSW90XFxHcm93Um9vbUVudmlyb25tZW50XFxXZWJcXENsaWVudEFwcC9zcmNcXGFwcFxcY29tcG9uZW50c1xcaG9tZVxcaG9tZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24uY2xvc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwLjI1cmVtO1xyXG4gICAgcmlnaHQ6IDEuNXJlbTtcclxuICAgIHotaW5kZXg6IDEwMDtcclxufVxyXG4iLCJidXR0b24uY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMC4yNXJlbTtcbiAgcmlnaHQ6IDEuNXJlbTtcbiAgei1pbmRleDogMTAwO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/home/home.component.ts":
/*!***************************************************!*\
  !*** ./src/app/components/home/home.component.ts ***!
  \***************************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");
/* harmony import */ var _services_configuration_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/configuration.service */ "./src/app/services/configuration.service.ts");




let HomeComponent = class HomeComponent {
    constructor(configurations) {
        this.configurations = configurations;
    }
};
HomeComponent.ctorParameters = () => [
    { type: _services_configuration_service__WEBPACK_IMPORTED_MODULE_3__["ConfigurationService"] }
];
HomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'home',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./home.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/home/home.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_2__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./home.component.scss */ "./src/app/components/home/home.component.scss")).default]
    })
], HomeComponent);



/***/ }),

/***/ "./src/app/components/login/login.component.scss":
/*!*******************************************************!*\
  !*** ./src/app/components/login/login.component.scss ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".boxshadow {\n  position: relative;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.5);\n  padding: 10px;\n  background: white;\n}\n\n.boxshadow::after {\n  content: \"\";\n  position: absolute;\n  z-index: -1;\n  /* hide shadow behind image */\n  box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3);\n  width: 70%;\n  left: 15%;\n  /* one half of the remaining 30% */\n  height: 100px;\n  bottom: 0;\n}\n\n.cardshadow {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.last-control-group {\n  margin-bottom: -0.75rem;\n}\n\n.h-90 {\n  height: 90%;\n}\n\n@media (min-width: 768px) {\n  .login-container {\n    width: 700px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .login-container {\n    width: 730px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsMENBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURHQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFBYSw2QkFBQTtFQUNiLDBDQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFBVyxrQ0FBQTtFQUNYLGFBQUE7RUFDQSxTQUFBO0FDRUY7O0FERUE7RUFDRSw0RUFBQTtBQ0NGOztBREdBO0VBQ0UsdUJBQUE7QUNBRjs7QURJQTtFQUNFLFdBQUE7QUNERjs7QURLQTtFQUNFO0lBQ0UsWUFBQTtFQ0ZGO0FBQ0Y7O0FETUE7RUFDRTtJQUNFLFlBQUE7RUNKRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3hzaGFkb3cge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBib3gtc2hhZG93OiAxcHggMnB4IDRweCByZ2JhKDAsIDAsIDAsIC41KTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG5cclxuLmJveHNoYWRvdzo6YWZ0ZXIge1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB6LWluZGV4OiAtMTsgLyogaGlkZSBzaGFkb3cgYmVoaW5kIGltYWdlICovXHJcbiAgYm94LXNoYWRvdzogMCAxNXB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gIHdpZHRoOiA3MCU7XHJcbiAgbGVmdDogMTUlOyAvKiBvbmUgaGFsZiBvZiB0aGUgcmVtYWluaW5nIDMwJSAqL1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgYm90dG9tOiAwO1xyXG59XHJcblxyXG5cclxuLmNhcmRzaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbn1cclxuXHJcblxyXG4ubGFzdC1jb250cm9sLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAtMC43NXJlbTtcclxufVxyXG5cclxuXHJcbi5oLTkwIHtcclxuICBoZWlnaHQ6IDkwJTtcclxufVxyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIC5sb2dpbi1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDcwMHB4O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuICAubG9naW4tY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiA3MzBweDtcclxuICB9XHJcbn1cclxuIiwiLmJveHNoYWRvdyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNoYWRvdzogMXB4IDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLmJveHNoYWRvdzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICAvKiBoaWRlIHNoYWRvdyBiZWhpbmQgaW1hZ2UgKi9cbiAgYm94LXNoYWRvdzogMCAxNXB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICB3aWR0aDogNzAlO1xuICBsZWZ0OiAxNSU7XG4gIC8qIG9uZSBoYWxmIG9mIHRoZSByZW1haW5pbmcgMzAlICovXG4gIGhlaWdodDogMTAwcHg7XG4gIGJvdHRvbTogMDtcbn1cblxuLmNhcmRzaGFkb3cge1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4ubGFzdC1jb250cm9sLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogLTAuNzVyZW07XG59XG5cbi5oLTkwIHtcbiAgaGVpZ2h0OiA5MCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubG9naW4tY29udGFpbmVyIHtcbiAgICB3aWR0aDogNzAwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmxvZ2luLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDczMHB4O1xuICB9XG59Il19 */");

/***/ }),

/***/ "./src/app/components/login/login.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/login/login.component.ts ***!
  \*****************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _services_configuration_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/configuration.service */ "./src/app/services/configuration.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _models_user_login_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../models/user-login.model */ "./src/app/models/user-login.model.ts");







let LoginComponent = class LoginComponent {
    constructor(alertService, authEndpointService, configurations) {
        this.alertService = alertService;
        this.authEndpointService = authEndpointService;
        this.configurations = configurations;
        this.userLogin = new _models_user_login_model__WEBPACK_IMPORTED_MODULE_6__["UserLoginModel"]();
        this.isLoading = false;
        this.formResetToggle = true;
        this.isModal = false;
    }
    ngOnInit() {
        this.userLogin.rememberMe = this.authEndpointService.rememberMe;
        if (this.getShouldRedirect()) {
            this.authEndpointService.redirectLoginUser();
        }
        else {
            this.loginStatusSubscription = this.authEndpointService.getLoginStatusEvent().subscribe(isLoggedIn => {
                if (this.getShouldRedirect()) {
                    this.authEndpointService.redirectLoginUser();
                }
            });
        }
    }
    ngOnDestroy() {
        if (this.loginStatusSubscription) {
            this.loginStatusSubscription.unsubscribe();
        }
    }
    getShouldRedirect() {
        return !this.isModal && this.authEndpointService.isLoggedIn && !this.authEndpointService.isSessionExpired;
    }
    showErrorAlert(caption, message) {
        this.alertService.showMessage(caption, message, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
    }
    closeModal() {
        if (this.modalClosedCallback) {
            this.modalClosedCallback();
        }
    }
    login() {
        this.isLoading = true;
        this.alertService.startLoadingMessage('', 'Attempting login...');
        this.authEndpointService.login(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe)
            .subscribe(user => {
            setTimeout(() => {
                this.alertService.stopLoadingMessage();
                this.isLoading = false;
                this.reset();
                if (!this.isModal) {
                    this.alertService.showMessage('Login', `Welcome ${user.userName}!`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
                }
                else {
                    this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
                    setTimeout(() => {
                        this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default);
                    }, 500);
                    this.closeModal();
                }
            }, 500);
        }, error => {
            this.alertService.stopLoadingMessage();
            if (_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].checkNoNetwork(error)) {
                this.alertService.showStickyMessage(_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].noNetworkMessageCaption, _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].noNetworkMessageDetail, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
                this.offerAlternateHost();
            }
            else {
                const errorMessage = _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessage(error);
                if (errorMessage) {
                    this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
                }
                else {
                    this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\nError: ' + _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getResponseBody(error), _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
                }
            }
            setTimeout(() => {
                this.isLoading = false;
            }, 500);
        });
    }
    offerAlternateHost() {
        if (_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].checkIsLocalHost(location.origin) && _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].checkIsLocalHost(this.configurations.baseUrl)) {
            this.alertService.showDialog('Dear Developer!\nIt appears your backend Web API service is not running...\n' +
                'Would you want to temporarily switch to the online Demo API below?(Or specify another)', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].prompt, (value) => {
                this.configurations.baseUrl = value;
                this.configurations.tokenUrl = value;
                this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].warn);
            }, null, null, null, this.configurations.fallbackBaseUrl);
        }
    }
    mapLoginErrorMessage(error) {
        if (error == 'invalid_username_or_password') {
            return 'Invalid username or password';
        }
        if (error == 'invalid_grant') {
            return 'This account has been disabled';
        }
        return error;
    }
    reset() {
        this.formResetToggle = false;
        setTimeout(() => {
            this.formResetToggle = true;
        });
    }
};
LoginComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_endpoint_services__WEBPACK_IMPORTED_MODULE_3__["AuthEndpointService"] },
    { type: _services_configuration_service__WEBPACK_IMPORTED_MODULE_4__["ConfigurationService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LoginComponent.prototype, "isModal", void 0);
LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-login',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/login/login.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./login.component.scss */ "./src/app/components/login/login.component.scss")).default]
    })
], LoginComponent);



/***/ }),

/***/ "./src/app/components/not-found/not-found.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/components/not-found/not-found.component.scss ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".icon-container {\n  font-size: 5rem;\n}\n\n.error-description {\n  font-size: 1.5rem;\n  padding-bottom: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvQzpcXFByb2plY3RzXFxJb3RcXEdyb3dSb29tRW52aXJvbm1lbnRcXFdlYlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxjb21wb25lbnRzXFxub3QtZm91bmRcXG5vdC1mb3VuZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZUFBQTtBQ0FKOztBREdBO0VBQ0ksaUJBQUE7RUFDQSxvQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5pY29uLWNvbnRhaW5lciB7XHJcbiAgICBmb250LXNpemU6IDVyZW07XHJcbn1cclxuXHJcbi5lcnJvci1kZXNjcmlwdGlvbiB7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG59XHJcbiIsIi5pY29uLWNvbnRhaW5lciB7XG4gIGZvbnQtc2l6ZTogNXJlbTtcbn1cblxuLmVycm9yLWRlc2NyaXB0aW9uIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/not-found/not-found.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/not-found/not-found.component.ts ***!
  \*************************************************************/
/*! exports provided: NotFoundComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotFoundComponent", function() { return NotFoundComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");



let NotFoundComponent = class NotFoundComponent {
};
NotFoundComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'not-found',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./not-found.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/not-found/not-found.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_2__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./not-found.component.scss */ "./src/app/components/not-found/not-found.component.scss")).default]
    })
], NotFoundComponent);



/***/ }),

/***/ "./src/app/components/settings/role-editor.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/components/settings/role-editor.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".row:not(:last-child) {\n  /*border-bottom: 1px solid #ccc;*/\n}\n\n.separator-hr {\n  margin: 0 5px;\n  border-top-style: dashed;\n}\n\n.edit-separator-hr {\n  margin: 10px 5px;\n  border-top-style: dashed;\n}\n\n.last-separator-hr {\n  margin-top: 5px;\n}\n\n.edit-last-separator-hr {\n  margin-top: 15px;\n}\n\n.form-group {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\ninput.form-control {\n  border-left-width: 5px;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n.group-name {\n  padding-top: 0;\n  font-weight: 500;\n  padding-right: 0;\n}\n\n.permissionsColumn {\n  margin-bottom: 20px;\n}\n\n.permissionsRow {\n  margin: 0 15px;\n}\n\n.well-sm {\n  padding: 0.5rem;\n}\n\n@media (min-width: 992px) {\n  .user-enabled {\n    margin-left: 40px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFxyb2xlLWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9yb2xlLWVkaXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlDQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0Esd0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0Esd0JBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0Y7O0FER0E7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLHNCQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsbUJBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURJQTtFQUNFLGVBQUE7QUNERjs7QURJQTtFQUNFO0lBQ0UsaUJBQUE7RUNERjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9yb2xlLWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3c6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgLypib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsqL1xyXG59XHJcblxyXG4uc2VwYXJhdG9yLWhyIHtcclxuICBtYXJnaW46IDAgNXB4O1xyXG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcclxufVxyXG5cclxuLmVkaXQtc2VwYXJhdG9yLWhyIHtcclxuICBtYXJnaW46IDEwcHggNXB4O1xyXG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcclxufVxyXG5cclxuLmxhc3Qtc2VwYXJhdG9yLWhyIHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbi5lZGl0LWxhc3Qtc2VwYXJhdG9yLWhyIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuaW5wdXQuZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItbGVmdC13aWR0aDogNXB4O1xyXG59XHJcblxyXG4uaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5ncm91cC1uYW1lIHtcclxuICBwYWRkaW5nLXRvcDogMDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDA7XHJcbn1cclxuXHJcbi5wZXJtaXNzaW9uc0NvbHVtbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLnBlcm1pc3Npb25zUm93IHtcclxuICBtYXJnaW46IDAgMTVweDtcclxufVxyXG5cclxuXHJcbi53ZWxsLXNtIHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4gIC51c2VyLWVuYWJsZWQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbiAgfVxyXG59XHJcbiIsIi5yb3c6bm90KDpsYXN0LWNoaWxkKSB7XG4gIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7Ki9cbn1cblxuLnNlcGFyYXRvci1ociB7XG4gIG1hcmdpbjogMCA1cHg7XG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcbn1cblxuLmVkaXQtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luOiAxMHB4IDVweDtcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xufVxuXG4ubGFzdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5lZGl0LWxhc3Qtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5pbnB1dC5mb3JtLWNvbnRyb2wge1xuICBib3JkZXItbGVmdC13aWR0aDogNXB4O1xufVxuXG4uaW52YWxpZC1mZWVkYmFjayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZ3JvdXAtbmFtZSB7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBmb250LXdlaWdodDogNTAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG4ucGVybWlzc2lvbnNDb2x1bW4ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ucGVybWlzc2lvbnNSb3cge1xuICBtYXJnaW46IDAgMTVweDtcbn1cblxuLndlbGwtc20ge1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAudXNlci1lbmFibGVkIHtcbiAgICBtYXJnaW4tbGVmdDogNDBweDtcbiAgfVxufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/settings/role-editor.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/components/settings/role-editor.component.ts ***!
  \**************************************************************/
/*! exports provided: RoleEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleEditorComponent", function() { return RoleEditorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");





let RoleEditorComponent = class RoleEditorComponent {
    constructor(alertService, accountClient) {
        this.alertService = alertService;
        this.accountClient = accountClient;
        this.isNewRole = false;
        this.showValidationErrors = true;
        this.roleEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["RoleViewModel"]();
        this.allPermissions = [];
        this.selectedValues = {};
        this.formResetToggle = true;
    }
    showErrorAlert(caption, message) {
        this.alertService.showMessage(caption, message, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
    }
    save() {
        this.isSaving = true;
        this.alertService.startLoadingMessage('Saving changes...');
        this.roleEdit.permissions = this.getSelectedPermissions();
        if (this.isNewRole) {
            this.accountClient.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));
        }
        else {
            this.accountClient.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));
        }
    }
    saveSuccessHelper(role) {
        if (role) {
            Object.assign(this.roleEdit, role);
        }
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        this.showValidationErrors = false;
        if (this.isNewRole) {
            this.alertService.showMessage('Success', `Role \"${this.roleEdit.name}\" was created successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }
        else {
            this.alertService.showMessage('Success', `Changes to role \"${this.roleEdit.name}\" was saved successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }
        this.roleEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["RoleViewModel"]();
        this.resetForm();
        if (!this.isNewRole && this.accountClient.currentUser.roles.some(r => r == this.editingRoleName)) {
            this.refreshLoggedInUser();
        }
        if (this.changesSavedCallback) {
            this.changesSavedCallback();
        }
    }
    refreshLoggedInUser() {
        this.accountClient.refreshLoggedInUser()
            .subscribe(user => { }, error => {
            this.alertService.resetStickyMessage();
            this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    saveFailedHelper(error) {
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        this.alertService.showStickyMessage(error, null, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
        if (this.changesFailedCallback) {
            this.changesFailedCallback();
        }
    }
    cancel() {
        this.roleEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["RoleViewModel"]();
        this.showValidationErrors = false;
        this.resetForm();
        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default);
        this.alertService.resetStickyMessage();
        if (this.changesCancelledCallback) {
            this.changesCancelledCallback();
        }
    }
    selectAll() {
        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);
    }
    selectNone() {
        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);
    }
    toggleGroup(groupName) {
        let firstMemberValue;
        this.allPermissions.forEach(p => {
            if (p.groupName != groupName) {
                return;
            }
            if (firstMemberValue == null) {
                firstMemberValue = this.selectedValues[p.value] == true;
            }
            this.selectedValues[p.value] = !firstMemberValue;
        });
    }
    getSelectedPermissions() {
        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);
    }
    resetForm(replace = false) {
        if (!replace) {
            this.form.reset();
        }
        else {
            this.formResetToggle = false;
            setTimeout(() => {
                this.formResetToggle = true;
            });
        }
    }
    newRole(allPermissions) {
        this.isNewRole = true;
        this.showValidationErrors = true;
        this.editingRoleName = null;
        this.allPermissions = allPermissions;
        this.selectedValues = {};
        this.roleEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["RoleViewModel"]();
        return this.roleEdit;
    }
    editRole(role, allPermissions) {
        if (role) {
            this.isNewRole = false;
            this.showValidationErrors = true;
            this.editingRoleName = role.name;
            this.allPermissions = allPermissions;
            this.selectedValues = {};
            role.permissions.forEach(p => this.selectedValues[p.value] = true);
            this.roleEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["RoleViewModel"]();
            Object.assign(this.roleEdit, role);
            return this.roleEdit;
        }
        else {
            return this.newRole(allPermissions);
        }
    }
    get canManageRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_4__["PermissionValues"].ManageRoles);
    }
};
RoleEditorComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_3__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('f', { static: false })
], RoleEditorComponent.prototype, "form", void 0);
RoleEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'role-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./role-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/role-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./role-editor.component.scss */ "./src/app/components/settings/role-editor.component.scss")).default]
    })
], RoleEditorComponent);



/***/ }),

/***/ "./src/app/components/settings/roles-management.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/components/settings/roles-management.component.scss ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".control-box {\n  margin-bottom: 5px;\n}\n\n.search-box {\n  margin: 0;\n}\n\n.nav-item.toolbaritem a {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  min-width: 100px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFxyb2xlcy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3JvbGVzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxrQkFBQTtBQ0FKOztBREdBO0VBQ0ksU0FBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3JvbGVzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNvbnRyb2wtYm94IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLnNlYXJjaC1ib3gge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4ubmF2LWl0ZW0udG9vbGJhcml0ZW0gYSB7XHJcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcclxuICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbn0iLCIuY29udHJvbC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi5zZWFyY2gtYm94IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ubmF2LWl0ZW0udG9vbGJhcml0ZW0gYSB7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XG4gIG1pbi13aWR0aDogMTAwcHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/settings/roles-management.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/settings/roles-management.component.ts ***!
  \*******************************************************************/
/*! exports provided: RolesManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RolesManagementComponent", function() { return RolesManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");







let RolesManagementComponent = class RolesManagementComponent {
    constructor(alertService, translationService, accountClient) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.accountClient = accountClient;
        this.columns = [];
        this.rows = [];
        this.rowsCache = [];
        this.allPermissions = [];
    }
    ngOnInit() {
        const gT = (key) => this.translationService.getTranslation(key);
        this.columns = [
            { prop: 'index', name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },
            { prop: 'name', name: gT('roles.management.Name'), width: 180 },
            { prop: 'description', name: gT('roles.management.Description'), width: 320 },
            { prop: 'usersCount', name: gT('roles.management.Users'), width: 50 },
            { name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }
        ];
        this.loadData();
    }
    ngAfterViewInit() {
        this.roleEditor.changesSavedCallback = () => {
            this.addNewRoleToList();
            this.editorModal.hide();
        };
        this.roleEditor.changesCancelledCallback = () => {
            this.editedRole = null;
            this.sourceRole = null;
            this.editorModal.hide();
        };
    }
    addNewRoleToList() {
        if (this.sourceRole) {
            Object.assign(this.sourceRole, this.editedRole);
            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);
            if (sourceIndex > -1) {
                _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].moveArrayItem(this.rowsCache, sourceIndex, 0);
            }
            sourceIndex = this.rows.indexOf(this.sourceRole, 0);
            if (sourceIndex > -1) {
                _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].moveArrayItem(this.rows, sourceIndex, 0);
            }
            this.editedRole = null;
            this.sourceRole = null;
        }
        else {
            const role = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["RoleViewModel"]();
            Object.assign(role, this.editedRole);
            this.editedRole = null;
            let maxIndex = 0;
            for (const r of this.rowsCache) {
                if (r.index > maxIndex) {
                    maxIndex = r.index;
                }
            }
            role.index = maxIndex + 1;
            this.rowsCache.splice(0, 0, role);
            this.rows.splice(0, 0, role);
            this.rows = [...this.rows];
        }
    }
    loadData() {
        this.alertService.startLoadingMessage();
        this.loadingIndicator = true;
        this.accountClient.getRolesAndPermissions()
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            const roles = results[0];
            const permissions = results[1];
            roles.forEach((role, index, roles) => {
                role.index = index + 1;
            });
            this.rowsCache = [...roles];
            this.rows = roles;
            this.allPermissions = permissions;
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Load Error', `Unable to retrieve roles from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    onSearchChanged(value) {
        this.rows = this.rowsCache.filter(r => _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].searchArray(value, false, r.name, r.description));
    }
    onEditorModalHidden() {
        this.editingRoleName = null;
        this.roleEditor.resetForm(true);
    }
    newRole() {
        this.editingRoleName = null;
        this.sourceRole = null;
        this.editedRole = this.roleEditor.newRole(this.allPermissions);
        this.editorModal.show();
    }
    editRole(row) {
        this.editingRoleName = { name: row.name };
        this.sourceRole = row;
        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);
        this.editorModal.show();
    }
    deleteRole(row) {
        this.alertService.showDialog('Are you sure you want to delete the \"' + row.name + '\" role?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.deleteRoleHelper(row));
    }
    deleteRoleHelper(row) {
        this.alertService.startLoadingMessage('Deleting...');
        this.loadingIndicator = true;
        this.accountClient.deleteRole(row)
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.rowsCache = this.rowsCache.filter(item => item !== row);
            this.rows = this.rows.filter(item => item !== row);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the role.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    get canManageRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].ManageRoles);
    }
};
RolesManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_4__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('indexTemplate', { static: true })
], RolesManagementComponent.prototype, "indexTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], RolesManagementComponent.prototype, "actionsTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('editorModal', { static: true })
], RolesManagementComponent.prototype, "editorModal", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('roleEditor', { static: true })
], RolesManagementComponent.prototype, "roleEditor", void 0);
RolesManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'roles-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./roles-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/roles-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./roles-management.component.scss */ "./src/app/components/settings/roles-management.component.scss")).default]
    })
], RolesManagementComponent);



/***/ }),

/***/ "./src/app/components/settings/settings.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/components/settings/settings.component.scss ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".separator-hr {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n[hidden] {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFxzZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZXBhcmF0b3ItaHIge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbltoaWRkZW5dIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIiwiLnNlcGFyYXRvci1ociB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/settings/settings.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/components/settings/settings.component.ts ***!
  \***********************************************************/
/*! exports provided: SettingsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsComponent", function() { return SettingsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _helpers_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/animations */ "./src/app/helpers/animations.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");






let SettingsComponent = class SettingsComponent {
    constructor(router, route, accountClient) {
        this.router = router;
        this.route = route;
        this.accountClient = accountClient;
        this.isProfileActivated = true;
        this.isPreferencesActivated = false;
        this.isUsersActivated = false;
        this.isRolesActivated = false;
        this.profileTab = 'profile';
        this.preferencesTab = 'preferences';
        this.usersTab = 'users';
        this.rolesTab = 'roles';
    }
    ngOnInit() {
        this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));
    }
    ngOnDestroy() {
        this.fragmentSubscription.unsubscribe();
    }
    showContent(anchor) {
        if (anchor) {
            anchor = anchor.toLowerCase();
        }
        if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||
            (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles)) {
            return;
        }
        this.tab.show(`#${anchor || this.profileTab}Tab`);
    }
    isFragmentEquals(fragment1, fragment2) {
        if (fragment1 == null) {
            fragment1 = '';
        }
        if (fragment2 == null) {
            fragment2 = '';
        }
        return fragment1.toLowerCase() == fragment2.toLowerCase();
    }
    onShowTab(event) {
        const activeTab = event.target.hash.split('#', 2).pop();
        this.isProfileActivated = activeTab == this.profileTab;
        this.isPreferencesActivated = activeTab == this.preferencesTab;
        this.isUsersActivated = activeTab == this.usersTab;
        this.isRolesActivated = activeTab == this.rolesTab;
        this.router.navigate([], { fragment: activeTab });
    }
    get canViewUsers() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["PermissionValues"].ViewUsers);
    }
    get canViewRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["PermissionValues"].ViewRoles);
    }
};
SettingsComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_4__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('tab', { static: true })
], SettingsComponent.prototype, "tab", void 0);
SettingsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'settings',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./settings.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/settings.component.html")).default,
        animations: [_helpers_animations__WEBPACK_IMPORTED_MODULE_3__["fadeInOut"]],
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./settings.component.scss */ "./src/app/components/settings/settings.component.scss")).default]
    })
], SettingsComponent);



/***/ }),

/***/ "./src/app/components/settings/user-editor.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/components/settings/user-editor.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".row:not(:last-child) {\n  /*border-bottom: 1px solid #ccc;*/\n}\n\n.separator-hr {\n  margin: 0 5px;\n  border-top-style: dashed;\n}\n\n.edit-separator-hr {\n  margin: 10px 5px;\n  border-top-style: dashed;\n}\n\n.last-separator-hr {\n  margin-top: 5px;\n}\n\n.edit-last-separator-hr {\n  margin-top: 15px;\n}\n\n.password-separator-hr {\n  margin: 5px;\n  border-style: none;\n}\n\n.form-group {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\ninput.form-control {\n  border-left-width: 5px;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n.password-well {\n  padding: 0.5rem;\n}\n\n.hint-sm {\n  display: block;\n}\n\n.form-check.user-enabled {\n  display: inline-block;\n}\n\n.unblock-user {\n  margin-left: 34px;\n}\n\n@media (min-width: 992px) {\n  .user-enabled {\n    margin-left: 40px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFx1c2VyLWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy91c2VyLWVkaXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlDQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0Esd0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0Esd0JBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURHQTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0Usc0JBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLHFCQUFBO0FDQUY7O0FER0E7RUFDRSxpQkFBQTtBQ0FGOztBRElBO0VBQ0U7SUFDRSxpQkFBQTtFQ0RGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3VzZXItZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdzpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyovXHJcbn1cclxuXHJcbi5zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbjogMCA1cHg7XHJcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xyXG59XHJcblxyXG4uZWRpdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbjogMTBweCA1cHg7XHJcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xyXG59XHJcblxyXG4ubGFzdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmVkaXQtbGFzdC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbn1cclxuXHJcbi5wYXNzd29yZC1zZXBhcmF0b3ItaHIge1xyXG4gIG1hcmdpbjogNXB4O1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tdG9wOiAwO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbmlucHV0LmZvcm0tY29udHJvbCB7XHJcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IDVweDtcclxufVxyXG5cclxuLmludmFsaWQtZmVlZGJhY2sge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4ucGFzc3dvcmQtd2VsbCB7XHJcbiAgcGFkZGluZzogMC41cmVtO1xyXG59XHJcblxyXG4uaGludC1zbSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5mb3JtLWNoZWNrLnVzZXItZW5hYmxlZCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4udW5ibG9jay11c2VyIHtcclxuICBtYXJnaW4tbGVmdDogMzRweDtcclxufVxyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4gIC51c2VyLWVuYWJsZWQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbiAgfVxyXG59XHJcbiIsIi5yb3c6bm90KDpsYXN0LWNoaWxkKSB7XG4gIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7Ki9cbn1cblxuLnNlcGFyYXRvci1ociB7XG4gIG1hcmdpbjogMCA1cHg7XG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcbn1cblxuLmVkaXQtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luOiAxMHB4IDVweDtcbiAgYm9yZGVyLXRvcC1zdHlsZTogZGFzaGVkO1xufVxuXG4ubGFzdC1zZXBhcmF0b3ItaHIge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5lZGl0LWxhc3Qtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuLnBhc3N3b3JkLXNlcGFyYXRvci1ociB7XG4gIG1hcmdpbjogNXB4O1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuaW5wdXQuZm9ybS1jb250cm9sIHtcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IDVweDtcbn1cblxuLmludmFsaWQtZmVlZGJhY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBhc3N3b3JkLXdlbGwge1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5oaW50LXNtIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5mb3JtLWNoZWNrLnVzZXItZW5hYmxlZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVuYmxvY2stdXNlciB7XG4gIG1hcmdpbi1sZWZ0OiAzNHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnVzZXItZW5hYmxlZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gIH1cbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/settings/user-editor.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/components/settings/user-editor.component.ts ***!
  \**************************************************************/
/*! exports provided: UserEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserEditorComponent", function() { return UserEditorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");






let UserEditorComponent = class UserEditorComponent {
    constructor(alertService, accountClient) {
        this.alertService = alertService;
        this.accountClient = accountClient;
        this.isEditMode = false;
        this.isNewUser = false;
        this.isSaving = false;
        this.isChangePassword = false;
        this.isEditingSelf = false;
        this.showValidationErrors = false;
        this.uniqueId = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].uniqueId();
        this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserViewModel"]();
        this.allRoles = [];
        this.formResetToggle = true;
        this.isGeneralEditor = false;
    }
    ngOnInit() {
        if (!this.isGeneralEditor) {
            this.loadCurrentUserData();
        }
    }
    loadCurrentUserData() {
        this.alertService.startLoadingMessage();
        if (this.canViewAllRoles) {
            this.accountClient.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));
        }
        else {
            this.accountClient.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => { let r = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["RoleViewModel"](); r.name = x; return r; })), error => this.onCurrentUserDataLoadFailed(error));
        }
    }
    onCurrentUserDataLoadSuccessful(user, roles) {
        this.alertService.stopLoadingMessage();
        this.user = user;
        this.allRoles = roles;
    }
    onCurrentUserDataLoadFailed(error) {
        this.alertService.stopLoadingMessage();
        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserViewModel"]();
    }
    getRoleByName(name) {
        return this.allRoles.find((r) => r.name == name);
    }
    showErrorAlert(caption, message) {
        this.alertService.showMessage(caption, message, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
    }
    deletePasswordFromUser(user) {
        const userEdit = user;
        delete userEdit.currentPassword;
        delete userEdit.newPassword;
    }
    edit() {
        if (!this.isGeneralEditor) {
            this.isEditingSelf = true;
            this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
            Object.assign(this.userEdit, this.user);
        }
        else {
            if (!this.userEdit) {
                this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
            }
            this.isEditingSelf = this.accountClient.currentUser ? this.userEdit.id == this.accountClient.currentUser.id : false;
        }
        this.isEditMode = true;
        this.showValidationErrors = true;
        this.isChangePassword = false;
    }
    save() {
        this.isSaving = true;
        this.alertService.startLoadingMessage('Saving changes...');
        if (this.isNewUser) {
            this.accountClient.newUser(this.userEdit).subscribe(user => this.saveSuccessHelper(user), error => this.saveFailedHelper(error));
        }
        else {
            this.accountClient.updateUser(this.userEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));
        }
    }
    saveSuccessHelper(user) {
        this.testIsRoleUserCountChanged(this.user, this.userEdit);
        if (user) {
            Object.assign(this.userEdit, user);
        }
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        this.isChangePassword = false;
        this.showValidationErrors = false;
        this.deletePasswordFromUser(this.userEdit);
        Object.assign(this.user, this.userEdit);
        this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
        this.resetForm();
        if (this.isGeneralEditor) {
            if (this.isNewUser) {
                this.alertService.showMessage('Success', `User \"${this.user.userName}\" was created successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
            }
            else if (!this.isEditingSelf) {
                this.alertService.showMessage('Success', `Changes to user \"${this.user.userName}\" was saved successfully`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
            }
        }
        if (this.isEditingSelf) {
            this.alertService.showMessage('Success', 'Changes to your User Profile was saved successfully', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
            this.refreshLoggedInUser();
        }
        this.isEditMode = false;
        if (this.changesSavedCallback) {
            this.changesSavedCallback();
        }
    }
    saveFailedHelper(error) {
        this.isSaving = false;
        this.alertService.stopLoadingMessage();
        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        this.alertService.showStickyMessage(error, null, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
        if (this.changesFailedCallback) {
            this.changesFailedCallback();
        }
    }
    testIsRoleUserCountChanged(currentUser, editedUser) {
        const rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);
        const rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);
        const modifiedRoles = rolesAdded.concat(rolesRemoved);
        if (modifiedRoles.length) {
            setTimeout(() => this.accountClient.onRolesUserCountChanged(modifiedRoles));
        }
    }
    cancel() {
        if (this.isGeneralEditor) {
            this.userEdit = this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
        }
        else {
            this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
        }
        this.showValidationErrors = false;
        this.resetForm();
        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default);
        this.alertService.resetStickyMessage();
        if (!this.isGeneralEditor) {
            this.isEditMode = false;
        }
        if (this.changesCancelledCallback) {
            this.changesCancelledCallback();
        }
    }
    close() {
        this.userEdit = this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
        this.showValidationErrors = false;
        this.resetForm();
        this.isEditMode = false;
        if (this.changesSavedCallback) {
            this.changesSavedCallback();
        }
    }
    refreshLoggedInUser() {
        this.accountClient.refreshLoggedInUser()
            .subscribe(user => {
            this.loadCurrentUserData();
        }, error => {
            this.alertService.resetStickyMessage();
            this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    changePassword() {
        this.isChangePassword = true;
    }
    unlockUser() {
        this.isSaving = true;
        this.alertService.startLoadingMessage('Unblocking user...');
        this.accountClient.unblockUser(this.userEdit.id)
            .subscribe(() => {
            this.isSaving = false;
            //this.userEdit.isLockedOut = false;
            this.alertService.stopLoadingMessage();
            this.alertService.showMessage('Success', 'User has been successfully unblocked', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }, error => {
            this.isSaving = false;
            this.alertService.stopLoadingMessage();
            this.alertService.showStickyMessage('Unblock Error', 'The below errors occured whilst unblocking the user:', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
            this.alertService.showStickyMessage(error, null, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error);
        });
    }
    resetForm(replace = false) {
        this.isChangePassword = false;
        if (!replace) {
            this.form.reset();
        }
        else {
            this.formResetToggle = false;
            setTimeout(() => {
                this.formResetToggle = true;
            });
        }
    }
    newUser(allRoles) {
        this.isGeneralEditor = true;
        this.isNewUser = true;
        this.allRoles = [...allRoles];
        this.user = this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
        this.userEdit.isEnabled = true;
        this.edit();
        return this.userEdit;
    }
    editUser(user, allRoles) {
        if (user) {
            this.isGeneralEditor = true;
            this.isNewUser = false;
            this.setRoles(user, allRoles);
            this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserViewModel"]();
            this.userEdit = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserEditViewModel"]();
            Object.assign(this.user, user);
            Object.assign(this.userEdit, user);
            this.edit();
            return this.userEdit;
        }
        else {
            return this.newUser(allRoles);
        }
    }
    displayUser(user, allRoles) {
        this.user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["UserViewModel"]();
        Object.assign(this.user, user);
        this.deletePasswordFromUser(this.user);
        this.setRoles(user, allRoles);
        this.isEditMode = false;
    }
    setRoles(user, allRoles) {
        this.allRoles = allRoles ? [...allRoles] : [];
        if (user.roles) {
            for (let ur of user.roles) {
                if (!this.allRoles.some(r => r.name == ur)) {
                    let rl = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["RoleViewModel"]();
                    rl.name = ur;
                    this.allRoles.unshift(rl);
                }
            }
        }
        if (allRoles == null || this.allRoles.length != allRoles.length) {
            setTimeout(() => {
                if (this.rolesSelector) {
                    this.rolesSelector.refresh();
                }
            });
        }
    }
    get canViewAllRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["PermissionValues"].ViewRoles);
    }
    get canAssignRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_5__["PermissionValues"].AssignRoles);
    }
};
UserEditorComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_3__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], UserEditorComponent.prototype, "isViewOnly", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], UserEditorComponent.prototype, "isGeneralEditor", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('f', { static: false })
], UserEditorComponent.prototype, "form", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userName', { static: false })
], UserEditorComponent.prototype, "userName", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userPassword', { static: false })
], UserEditorComponent.prototype, "userPassword", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('email', { static: false })
], UserEditorComponent.prototype, "email", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('currentPassword', { static: false })
], UserEditorComponent.prototype, "currentPassword", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('newPassword', { static: false })
], UserEditorComponent.prototype, "newPassword", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('confirmPassword', { static: false })
], UserEditorComponent.prototype, "confirmPassword", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('roles', { static: false })
], UserEditorComponent.prototype, "roles", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('rolesSelector', { static: false })
], UserEditorComponent.prototype, "rolesSelector", void 0);
UserEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'user-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./user-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./user-editor.component.scss */ "./src/app/components/settings/user-editor.component.scss")).default]
    })
], UserEditorComponent);



/***/ }),

/***/ "./src/app/components/settings/user-preferences.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/components/settings/user-preferences.component.scss ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".separator-hr {\n  margin: 7px 5px;\n  border-top-style: dashed;\n}\n\n.subseparator-hr {\n  margin: 7px 5px;\n  border-top-style: none;\n}\n\n.last-separator-hr {\n  margin-top: 7px;\n}\n\n.form-group {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.form-control-plaintext {\n  min-height: 0;\n}\n\n.checkbox {\n  padding-top: 0;\n}\n\n.col-reset-default {\n  padding-right: 0;\n}\n\n.col-set-default {\n  padding-left: 5px;\n}\n\n.col-reset-default .btn,\n.col-set-default .btn {\n  min-width: 150px;\n}\n\n@media (min-width: 768px) {\n  .col-form-label {\n    padding-top: 5px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFx1c2VyLXByZWZlcmVuY2VzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3VzZXItcHJlZmVyZW5jZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxlQUFBO0VBQ0Esd0JBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtBQ0FGOztBREdBO0VBQ0UsZUFBQTtBQ0FGOztBREdBO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxhQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0FDQUY7O0FER0E7RUFDRSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7QUNBRjs7QURHQTs7RUFFRSxnQkFBQTtBQ0FGOztBREdBO0VBQ0U7SUFDRSxnQkFBQTtFQ0FGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3VzZXItcHJlZmVyZW5jZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luOiA3cHggNXB4O1xyXG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcclxufVxyXG5cclxuLnN1YnNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luOiA3cHggNXB4O1xyXG4gIGJvcmRlci10b3Atc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi5sYXN0LXNlcGFyYXRvci1ociB7XHJcbiAgbWFyZ2luLXRvcDogN3B4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sLXBsYWludGV4dCB7XHJcbiAgbWluLWhlaWdodDogMDtcclxufVxyXG5cclxuLmNoZWNrYm94IHtcclxuICBwYWRkaW5nLXRvcDogMDtcclxufVxyXG5cclxuLmNvbC1yZXNldC1kZWZhdWx0IHtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4uY29sLXNldC1kZWZhdWx0IHtcclxuICBwYWRkaW5nLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLmNvbC1yZXNldC1kZWZhdWx0IC5idG4sXHJcbi5jb2wtc2V0LWRlZmF1bHQgLmJ0biB7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgLmNvbC1mb3JtLWxhYmVsIHtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG59XHJcbiIsIi5zZXBhcmF0b3ItaHIge1xuICBtYXJnaW46IDdweCA1cHg7XG4gIGJvcmRlci10b3Atc3R5bGU6IGRhc2hlZDtcbn1cblxuLnN1YnNlcGFyYXRvci1ociB7XG4gIG1hcmdpbjogN3B4IDVweDtcbiAgYm9yZGVyLXRvcC1zdHlsZTogbm9uZTtcbn1cblxuLmxhc3Qtc2VwYXJhdG9yLWhyIHtcbiAgbWFyZ2luLXRvcDogN3B4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0IHtcbiAgbWluLWhlaWdodDogMDtcbn1cblxuLmNoZWNrYm94IHtcbiAgcGFkZGluZy10b3A6IDA7XG59XG5cbi5jb2wtcmVzZXQtZGVmYXVsdCB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbi5jb2wtc2V0LWRlZmF1bHQge1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbn1cblxuLmNvbC1yZXNldC1kZWZhdWx0IC5idG4sXG4uY29sLXNldC1kZWZhdWx0IC5idG4ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbC1mb3JtLWxhYmVsIHtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICB9XG59Il19 */");

/***/ }),

/***/ "./src/app/components/settings/user-preferences.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/settings/user-preferences.component.ts ***!
  \*******************************************************************/
/*! exports provided: UserPreferencesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserPreferencesComponent", function() { return UserPreferencesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_configuration_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/configuration.service */ "./src/app/services/configuration.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_app_theme_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/app-theme.service */ "./src/app/services/app-theme.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");









let UserPreferencesComponent = class UserPreferencesComponent {
    constructor(alertService, translationService, accountClient, themeManager, configurations) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.accountClient = accountClient;
        this.themeManager = themeManager;
        this.configurations = configurations;
        this.themeSelectorToggle = true;
    }
    ngOnInit() {
        this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {
            this.themeSelectorToggle = false;
            setTimeout(() => {
                this.languageSelector.refresh();
                this.homePageSelector.refresh();
                this.themeSelectorToggle = true;
            });
        });
    }
    ngOnDestroy() {
        this.languageChangedSubscription.unsubscribe();
    }
    reloadFromServer() {
        this.alertService.startLoadingMessage();
        this.accountClient.getUserPreferences()
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.configurations.import(results);
            this.alertService.showMessage('Defaults loaded!', '', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].info);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.alertService.showStickyMessage('Load Error', `Unable to retrieve user preferences from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    setAsDefault() {
        this.alertService.showDialog('Are you sure you want to set the current configuration as your new defaults?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.setAsDefaultHelper(), () => this.alertService.showMessage('Operation Cancelled!', '', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default));
    }
    setAsDefaultHelper() {
        this.alertService.startLoadingMessage('', 'Saving new defaults');
        this.accountClient.updateUserPreferences(this.configurations.export())
            .subscribe(response => {
            this.alertService.stopLoadingMessage();
            this.alertService.showMessage('New Defaults', 'Account defaults updated successfully', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.alertService.showStickyMessage('Save Error', `An error occured whilst saving configuration defaults.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    resetDefault() {
        this.alertService.showDialog('Are you sure you want to reset your defaults?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.resetDefaultHelper(), () => this.alertService.showMessage('Operation Cancelled!', '', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].default));
    }
    resetDefaultHelper() {
        this.alertService.startLoadingMessage('', 'Resetting defaults');
        this.accountClient.updateUserPreferences(null)
            .subscribe(response => {
            this.alertService.stopLoadingMessage();
            this.configurations.import(null);
            this.alertService.showMessage('Defaults Reset', 'Account defaults reset completed successfully', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].success);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.alertService.showStickyMessage('Save Error', `An error occured whilst resetting configuration defaults.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    get canViewCustomers() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_8__["PermissionValues"].ViewUsers); // eg. viewCustomersPermission
    }
    get canViewProducts() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_8__["PermissionValues"].ViewUsers); // eg. viewProductsPermission
    }
    get canViewOrders() {
        return true; // eg. viewOrdersPermission
    }
};
UserPreferencesComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_4__["AppTranslationService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_5__["AccountService"] },
    { type: _services_app_theme_service__WEBPACK_IMPORTED_MODULE_6__["AppThemeService"] },
    { type: _services_configuration_service__WEBPACK_IMPORTED_MODULE_3__["ConfigurationService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('languageSelector', { static: true })
], UserPreferencesComponent.prototype, "languageSelector", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('homePageSelector', { static: true })
], UserPreferencesComponent.prototype, "homePageSelector", void 0);
UserPreferencesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'user-preferences',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./user-preferences.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/user-preferences.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./user-preferences.component.scss */ "./src/app/components/settings/user-preferences.component.scss")).default]
    })
], UserPreferencesComponent);



/***/ }),

/***/ "./src/app/components/settings/users-management.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/components/settings/users-management.component.scss ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".user-role {\n  font-size: 0.8em !important;\n  margin-right: 1px;\n}\n\n.control-box {\n  margin-bottom: 5px;\n}\n\n.search-box {\n  margin: 0;\n}\n\n.nav-item.toolbaritem a {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  min-width: 100px;\n}\n\n.user-disabled {\n  color: #777;\n  font-style: italic;\n}\n\n.locked-out {\n  background-color: orangered;\n  color: whitesmoke;\n  width: 100%;\n  display: inline-block;\n  padding-left: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9DOlxcUHJvamVjdHNcXElvdFxcR3Jvd1Jvb21FbnZpcm9ubWVudFxcV2ViXFxDbGllbnRBcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdzXFx1c2Vycy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmdzL3VzZXJzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSwyQkFBQTtFQUNBLGlCQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtBQ0FKOztBREdBO0VBQ0ksU0FBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDQUo7O0FER0E7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QUNBSjs7QURHQTtFQUNJLDJCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7RUFDQSxpQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy91c2Vycy1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi51c2VyLXJvbGUge1xyXG4gICAgZm9udC1zaXplOiAwLjhlbSAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcHg7XHJcbn1cclxuXHJcbi5jb250cm9sLWJveCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5zZWFyY2gtYm94IHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLm5hdi1pdGVtLnRvb2xiYXJpdGVtIGEge1xyXG4gICAgcGFkZGluZy10b3A6IDNweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzcHg7XHJcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4udXNlci1kaXNhYmxlZCB7XHJcbiAgICBjb2xvcjogIzc3NztcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLmxvY2tlZC1vdXQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlcmVkO1xyXG4gICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG59IiwiLnVzZXItcm9sZSB7XG4gIGZvbnQtc2l6ZTogMC44ZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XG59XG5cbi5jb250cm9sLWJveCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLnNlYXJjaC1ib3gge1xuICBtYXJnaW46IDA7XG59XG5cbi5uYXYtaXRlbS50b29sYmFyaXRlbSBhIHtcbiAgcGFkZGluZy10b3A6IDNweDtcbiAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgbWluLXdpZHRoOiAxMDBweDtcbn1cblxuLnVzZXItZGlzYWJsZWQge1xuICBjb2xvcjogIzc3NztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4ubG9ja2VkLW91dCB7XG4gIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZXJlZDtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctbGVmdDogNXB4O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/settings/users-management.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/settings/users-management.component.ts ***!
  \*******************************************************************/
/*! exports provided: UsersManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsersManagementComponent", function() { return UsersManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/alert.service */ "./src/app/services/alert.service.ts");
/* harmony import */ var _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _services_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/endpoint.services */ "./src/app/services/endpoint.services.ts");







let UsersManagementComponent = class UsersManagementComponent {
    constructor(alertService, translationService, accountClient) {
        this.alertService = alertService;
        this.translationService = translationService;
        this.accountClient = accountClient;
        this.columns = [];
        this.rows = [];
        this.rowsCache = [];
        this.allRoles = [];
    }
    ngOnInit() {
        const gT = (key) => this.translationService.getTranslation(key);
        this.columns = [
            { prop: 'index', name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },
            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },
            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },
            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },
            { prop: 'email', name: gT('users.management.Email'), width: 140 },
            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },
            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 }
        ];
        if (this.canManageUsers) {
            this.columns.push({ name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });
        }
        this.loadData();
    }
    ngAfterViewInit() {
        this.userEditor.changesSavedCallback = () => {
            this.addNewUserToList();
            this.editorModal.hide();
        };
        this.userEditor.changesCancelledCallback = () => {
            this.editedUser = null;
            this.sourceUser = null;
            this.editorModal.hide();
        };
    }
    addNewUserToList() {
        if (this.sourceUser) {
            Object.assign(this.sourceUser, this.editedUser);
            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);
            if (sourceIndex > -1) {
                _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].moveArrayItem(this.rowsCache, sourceIndex, 0);
            }
            sourceIndex = this.rows.indexOf(this.sourceUser, 0);
            if (sourceIndex > -1) {
                _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].moveArrayItem(this.rows, sourceIndex, 0);
            }
            this.editedUser = null;
            this.sourceUser = null;
        }
        else {
            const user = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["UserViewModel"]();
            Object.assign(user, this.editedUser);
            this.editedUser = null;
            let maxIndex = 0;
            for (const u of this.rowsCache) {
                if (u.index > maxIndex) {
                    maxIndex = u.index;
                }
            }
            user.index = maxIndex + 1;
            this.rowsCache.splice(0, 0, user);
            this.rows.splice(0, 0, user);
            this.rows = [...this.rows];
        }
    }
    loadData() {
        this.alertService.startLoadingMessage();
        this.loadingIndicator = true;
        if (this.canViewRoles) {
            this.accountClient.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));
        }
        else {
            this.accountClient.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountClient.currentUser.roles.map(x => { let r = new _services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["RoleViewModel"](); r.name = x; return r; })), error => this.onDataLoadFailed(error));
        }
    }
    onDataLoadSuccessful(users, roles) {
        this.alertService.stopLoadingMessage();
        this.loadingIndicator = false;
        users.forEach((user, index, users) => {
            user.index = index + 1;
        });
        this.rowsCache = [...users];
        this.rows = users;
        this.allRoles = roles;
    }
    onDataLoadFailed(error) {
        this.alertService.stopLoadingMessage();
        this.loadingIndicator = false;
        this.alertService.showStickyMessage('Load Error', `Unable to retrieve users from the server.\r\nErrors: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
    }
    onSearchChanged(value) {
        this.rows = this.rowsCache.filter(r => _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].searchArray(value, false, r.userName, r.fullName, r.email, r.phoneNumber, r.jobTitle, r.roles));
    }
    onEditorModalHidden() {
        this.editingUserName = null;
        this.userEditor.resetForm(true);
    }
    newUser() {
        this.editingUserName = null;
        this.sourceUser = null;
        this.editedUser = this.userEditor.newUser(this.allRoles);
        this.editorModal.show();
    }
    editUser(row) {
        this.editingUserName = { name: row.userName };
        this.sourceUser = row;
        this.editedUser = this.userEditor.editUser(row, this.allRoles);
        this.editorModal.show();
    }
    deleteUser(row) {
        this.alertService.showDialog('Are you sure you want to delete \"' + row.userName + '\"?', _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["DialogType"].confirm, () => this.deleteUserHelper(row));
    }
    deleteUserHelper(row) {
        this.alertService.startLoadingMessage('Deleting...');
        this.loadingIndicator = true;
        this.accountClient.deleteUser(row)
            .subscribe(results => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.rowsCache = this.rowsCache.filter(item => item !== row);
            this.rows = this.rows.filter(item => item !== row);
        }, error => {
            this.alertService.stopLoadingMessage();
            this.loadingIndicator = false;
            this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the user.\r\nError: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].getHttpResponseMessages(error)}"`, _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["MessageSeverity"].error, error);
        });
    }
    get canAssignRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].AssignRoles);
    }
    get canViewRoles() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].ViewRoles);
    }
    get canManageUsers() {
        return this.accountClient.userHasPermission(_services_endpoint_services__WEBPACK_IMPORTED_MODULE_6__["PermissionValues"].ManageUsers);
    }
};
UsersManagementComponent.ctorParameters = () => [
    { type: _services_alert_service__WEBPACK_IMPORTED_MODULE_2__["AlertService"] },
    { type: _services_app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _services_account_service__WEBPACK_IMPORTED_MODULE_4__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('indexTemplate', { static: true })
], UsersManagementComponent.prototype, "indexTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userNameTemplate', { static: true })
], UsersManagementComponent.prototype, "userNameTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('rolesTemplate', { static: true })
], UsersManagementComponent.prototype, "rolesTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('actionsTemplate', { static: true })
], UsersManagementComponent.prototype, "actionsTemplate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('editorModal', { static: true })
], UsersManagementComponent.prototype, "editorModal", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('userEditor', { static: true })
], UsersManagementComponent.prototype, "userEditor", void 0);
UsersManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'users-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./users-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/settings/users-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./users-management.component.scss */ "./src/app/components/settings/users-management.component.scss")).default]
    })
], UsersManagementComponent);



/***/ }),

/***/ "./src/app/directives/autofocus.directive.ts":
/*!***************************************************!*\
  !*** ./src/app/directives/autofocus.directive.ts ***!
  \***************************************************/
/*! exports provided: AutofocusDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutofocusDirective", function() { return AutofocusDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let AutofocusDirective = class AutofocusDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
    ngOnInit() {
        setTimeout(() => this.elementRef.nativeElement.focus(), 500);
    }
};
AutofocusDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
];
AutofocusDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[autofocus]'
    })
], AutofocusDirective);



/***/ }),

/***/ "./src/app/directives/bootstrap-datepicker.directive.ts":
/*!**************************************************************!*\
  !*** ./src/app/directives/bootstrap-datepicker.directive.ts ***!
  \**************************************************************/
/*! exports provided: BootstrapDatepickerDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BootstrapDatepickerDirective", function() { return BootstrapDatepickerDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let BootstrapDatepickerDirective = class BootstrapDatepickerDirective {
    constructor(el) {
        this.el = el;
        this._isShown = false;
        this.options = {};
        this.ngModelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.changedSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'change').subscribe((e) => setTimeout(() => this.ngModelChange.emit(e.target.value)));
        this.shownSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'show').subscribe((e) => this._isShown = true);
        this.hiddenSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'hide').subscribe((e) => this._isShown = false);
    }
    get isShown() {
        return this._isShown;
    }
    set ngModel(value) {
        this.tryUpdate(value);
    }
    ngOnInit() {
        this.initialize(this.options);
    }
    ngOnDestroy() {
        this.destroy();
    }
    initialize(options) {
        $(this.el.nativeElement).datepicker(options);
    }
    destroy() {
        if (this.changedSubscription) {
            this.changedSubscription.unsubscribe();
            this.shownSubscription.unsubscribe();
            this.hiddenSubscription.unsubscribe();
        }
        $(this.el.nativeElement).datepicker('destroy');
    }
    show() {
        $(this.el.nativeElement).datepicker('show');
    }
    hide() {
        $(this.el.nativeElement).datepicker('hide');
    }
    toggle() {
        this.isShown ? this.hide() : this.show();
    }
    tryUpdate(value) {
        clearTimeout(this.updateTimeout);
        if (!$(this.el.nativeElement).is(':focus')) {
            this.update(value);
        }
        else {
            this.updateTimeout = setTimeout(() => {
                this.updateTimeout = null;
                this.tryUpdate(value);
            }, 100);
        }
    }
    update(value) {
        setTimeout(() => $(this.el.nativeElement).datepicker('update', value));
    }
    setDate(value) {
        setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));
    }
    setUTCDate(value) {
        setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));
    }
    clearDates() {
        setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));
    }
    getDate() {
        $(this.el.nativeElement).datepicker('getDate');
    }
    getUTCDate() {
        $(this.el.nativeElement).datepicker('getUTCDate');
    }
};
BootstrapDatepickerDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BootstrapDatepickerDirective.prototype, "options", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BootstrapDatepickerDirective.prototype, "ngModel", null);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapDatepickerDirective.prototype, "ngModelChange", void 0);
BootstrapDatepickerDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[bootstrapDatepicker]',
        exportAs: 'bootstrap-datepicker'
    })
], BootstrapDatepickerDirective);



/***/ }),

/***/ "./src/app/directives/bootstrap-select.directive.ts":
/*!**********************************************************!*\
  !*** ./src/app/directives/bootstrap-select.directive.ts ***!
  \**********************************************************/
/*! exports provided: BootstrapSelectDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BootstrapSelectDirective", function() { return BootstrapSelectDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let BootstrapSelectDirective = class BootstrapSelectDirective {
    constructor(el) {
        this.el = el;
        this.oldValues = '';
        this.ngModelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.shown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.hidden = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.changedSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'changed.bs.select').subscribe((e) => setTimeout(() => {
            if (this.checkIsValuesChanged(this.selected)) {
                this.ngModelChange.emit(this.selected);
            }
        }));
        this.shownSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'shown.bs.select').subscribe((e) => setTimeout(() => this.shown.emit()));
        this.hiddenSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'hidden.bs.select').subscribe((e) => setTimeout(() => this.hidden.emit()));
    }
    set ngModel(values) {
        setTimeout(() => this.selected = values);
    }
    ngOnInit() {
        $(this.el.nativeElement).selectpicker();
        if (this.requiredAttribute) {
            $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');
        }
        setTimeout(() => {
            this.refresh();
            this.doValidation();
        });
    }
    ngOnDestroy() {
        if (this.changedSubscription) {
            this.changedSubscription.unsubscribe();
        }
        if (this.shownSubscription) {
            this.shownSubscription.unsubscribe();
        }
        if (this.hiddenSubscription) {
            this.hiddenSubscription.unsubscribe();
        }
        $(this.el.nativeElement).selectpicker('destroy');
    }
    checkIsValuesChanged(newValue) {
        return !(newValue == this.oldValues ||
            (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));
    }
    doValidation() {
        if (this.requiredAttribute) {
            $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');
            $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');
        }
    }
    get requiredAttribute() {
        return this.required === '' || this.required == 'true';
    }
    refresh() {
        setTimeout(() => {
            $(this.el.nativeElement).selectpicker('refresh');
        });
    }
    render() {
        setTimeout(() => {
            $(this.el.nativeElement).selectpicker('render');
        });
    }
    get valid() {
        return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;
    }
    set selected(values) {
        if (!this.checkIsValuesChanged(values)) {
            return;
        }
        this.oldValues = this.selected;
        $(this.el.nativeElement).selectpicker('val', values);
        this.doValidation();
    }
    get selected() {
        return $(this.el.nativeElement).selectpicker('val');
    }
};
BootstrapSelectDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BootstrapSelectDirective.prototype, "required", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BootstrapSelectDirective.prototype, "ngModel", null);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapSelectDirective.prototype, "ngModelChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapSelectDirective.prototype, "shown", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapSelectDirective.prototype, "hidden", void 0);
BootstrapSelectDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[bootstrapSelect]',
        exportAs: 'bootstrap-select'
    })
], BootstrapSelectDirective);



/***/ }),

/***/ "./src/app/directives/bootstrap-tab.directive.ts":
/*!*******************************************************!*\
  !*** ./src/app/directives/bootstrap-tab.directive.ts ***!
  \*******************************************************/
/*! exports provided: BootstrapTabDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BootstrapTabDirective", function() { return BootstrapTabDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let BootstrapTabDirective = class BootstrapTabDirective {
    constructor(el, zone) {
        this.el = el;
        this.zone = zone;
        this.showBSTab = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.hideBSTab = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.tabShownSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'show.bs.tab')
            .subscribe((e) => {
            this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));
        });
        this.tabHiddenSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'hidden.bs.tab')
            .subscribe((e) => {
            this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));
        });
    }
    ngOnDestroy() {
        this.tabShownSubscription.unsubscribe();
        this.tabHiddenSubscription.unsubscribe();
    }
    runInZone(delegate) {
        this.zone.run(() => {
            delegate();
        });
    }
    show(selector) {
        $(selector).tab('show');
    }
};
BootstrapTabDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapTabDirective.prototype, "showBSTab", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapTabDirective.prototype, "hideBSTab", void 0);
BootstrapTabDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[bootstrapTab]',
        exportAs: 'bootstrap-tab'
    })
], BootstrapTabDirective);



/***/ }),

/***/ "./src/app/directives/bootstrap-toggle.directive.ts":
/*!**********************************************************!*\
  !*** ./src/app/directives/bootstrap-toggle.directive.ts ***!
  \**********************************************************/
/*! exports provided: BootstrapToggleDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BootstrapToggleDirective", function() { return BootstrapToggleDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let BootstrapToggleDirective = class BootstrapToggleDirective {
    constructor(el) {
        this.el = el;
        this.ngModelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.checkedSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["fromEvent"])($(this.el.nativeElement), 'change')
            .subscribe((e) => this.ngModelChange.emit(e.target.checked));
    }
    set ngModel(value) {
        this.toggle(value);
    }
    ngOnInit() {
        this.initialize();
    }
    ngOnDestroy() {
        this.destroy();
    }
    initialize(options) {
        $(this.el.nativeElement).bootstrapToggle(options);
    }
    destroy() {
        if (this.checkedSubscription) {
            this.checkedSubscription.unsubscribe();
        }
        $(this.el.nativeElement).bootstrapToggle('destroy');
    }
    toggleOn() {
        $(this.el.nativeElement).bootstrapToggle('on');
    }
    toggleOff() {
        $(this.el.nativeElement).bootstrapToggle('off');
    }
    toggle(value) {
        if (value == null) {
            $(this.el.nativeElement).bootstrapToggle('toggle');
        }
        else {
            $(this.el.nativeElement).prop('checked', value).change();
        }
    }
    enable() {
        $(this.el.nativeElement).bootstrapToggle('enable');
    }
    disable() {
        $(this.el.nativeElement).bootstrapToggle('disable');
    }
};
BootstrapToggleDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BootstrapToggleDirective.prototype, "ngModel", null);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BootstrapToggleDirective.prototype, "ngModelChange", void 0);
BootstrapToggleDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[bootstrapToggle]',
        exportAs: 'bootstrap-toggle'
    })
], BootstrapToggleDirective);



/***/ }),

/***/ "./src/app/directives/equal-validator.directive.ts":
/*!*********************************************************!*\
  !*** ./src/app/directives/equal-validator.directive.ts ***!
  \*********************************************************/
/*! exports provided: EqualValidatorDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EqualValidatorDirective", function() { return EqualValidatorDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
var EqualValidatorDirective_1;



let EqualValidatorDirective = EqualValidatorDirective_1 = class EqualValidatorDirective {
    constructor(validateEqual, reverse) {
        this.validateEqual = validateEqual;
        this.reverse = reverse;
    }
    validate(c) {
        const other = c.root.get(this.validateEqual);
        if (!other) {
            return null;
        }
        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);
    }
    validateNoReverse(c, other) {
        return other.value === c.value ? null : { validateEqual: true };
    }
    validateReverse(c, other) {
        if (c.value === other.value) {
            if (other.errors) {
                delete other.errors.validateEqual;
                if (Object.keys(other.errors).length == 0) {
                    other.setErrors(null);
                }
            }
        }
        else {
            other.setErrors({ validateEqual: true });
        }
        return null;
    }
};
EqualValidatorDirective.ctorParameters = () => [
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"], args: ['validateEqual',] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"], args: ['reverse',] }] }
];
EqualValidatorDirective = EqualValidatorDirective_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',
        providers: [
            { provide: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALIDATORS"], useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(() => EqualValidatorDirective_1), multi: true }
        ]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"])('validateEqual')),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Attribute"])('reverse'))
], EqualValidatorDirective);



/***/ }),

/***/ "./src/app/directives/last-element.directive.ts":
/*!******************************************************!*\
  !*** ./src/app/directives/last-element.directive.ts ***!
  \******************************************************/
/*! exports provided: LastElementDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LastElementDirective", function() { return LastElementDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let LastElementDirective = class LastElementDirective {
    constructor() {
        this.lastFunction = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    set lastElement(isLastElement) {
        if (isLastElement) {
            setTimeout(() => {
                this.lastFunction.emit();
            });
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LastElementDirective.prototype, "lastElement", null);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], LastElementDirective.prototype, "lastFunction", void 0);
LastElementDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[lastElement]'
    })
], LastElementDirective);



/***/ }),

/***/ "./src/app/helpers/animations.ts":
/*!***************************************!*\
  !*** ./src/app/helpers/animations.ts ***!
  \***************************************/
/*! exports provided: fadeInOut, flyInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fadeInOut", function() { return fadeInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flyInOut", function() { return flyInOut; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm2015/animations.js");


const fadeInOut = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('fadeInOut', [
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])(':enter', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 0 }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('0.4s ease-in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 1 }))]),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])(':leave', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('0.4s 10ms ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 0 }))])
]);
function flyInOut(duration = 0.2) {
    return Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('flyInOut', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 1, transform: 'translateX(0)' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => *', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 0, transform: 'translateX(-100%)' }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])(`${duration}s ease-in`)]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('* => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])(`${duration}s 10ms ease-out`, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({ opacity: 0, transform: 'translateX(100%)' }))])
    ]);
}


/***/ }),

/***/ "./src/app/helpers/db-keys.ts":
/*!************************************!*\
  !*** ./src/app/helpers/db-keys.ts ***!
  \************************************/
/*! exports provided: DbKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DbKeys", function() { return DbKeys; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let DbKeys = class DbKeys {
};
DbKeys.CURRENT_USER = 'current_user';
DbKeys.USER_PERMISSIONS = 'user_permissions';
DbKeys.USER_DATA = 'user_data';
DbKeys.SYNC_KEYS = 'sync_keys';
DbKeys.REMEMBER_ME = 'remember_me';
DbKeys.LANGUAGE = 'language';
DbKeys.HOME_URL = 'home_url';
DbKeys.THEME_ID = 'themeId';
DbKeys.SHOW_DASHBOARD_STATISTICS = 'show_dashboard_statistics';
DbKeys.SHOW_DASHBOARD_NOTIFICATIONS = 'show_dashboard_notifications';
DbKeys.SHOW_DASHBOARD_TODO = 'show_dashboard_todo';
DbKeys.SHOW_DASHBOARD_BANNER = 'show_dashboard_banner';
DbKeys = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], DbKeys);



/***/ }),

/***/ "./src/app/helpers/jwt-helper.ts":
/*!***************************************!*\
  !*** ./src/app/helpers/jwt-helper.ts ***!
  \***************************************/
/*! exports provided: JwtHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JwtHelper", function() { return JwtHelper; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");

/**
 * Helper class to decode and find JWT expiration.
 */

let JwtHelper = class JwtHelper {
    urlBase64Decode(str) {
        let output = str.replace(/-/g, '+').replace(/_/g, '/');
        switch (output.length % 4) {
            case 0: {
                break;
            }
            case 2: {
                output += '==';
                break;
            }
            case 3: {
                output += '=';
                break;
            }
            default: {
                throw new Error('Illegal base64url string!');
            }
        }
        return this.b64DecodeUnicode(output);
    }
    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem
    b64DecodeUnicode(str) {
        return decodeURIComponent(Array.prototype.map.call(atob(str), (c) => {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
    }
    decodeToken(token) {
        const parts = token.split('.');
        if (parts.length !== 3) {
            throw new Error('JWT must have 3 parts');
        }
        const decoded = this.urlBase64Decode(parts[1]);
        if (!decoded) {
            throw new Error('Cannot decode the token');
        }
        return JSON.parse(decoded);
    }
    getTokenExpirationDate(token) {
        let decoded;
        decoded = this.decodeToken(token);
        if (!decoded.hasOwnProperty('exp')) {
            return null;
        }
        const date = new Date(0); // The 0 here is the key, which sets the date to the epoch
        date.setUTCSeconds(decoded.exp);
        return date;
    }
    isTokenExpired(token, offsetSeconds) {
        const date = this.getTokenExpirationDate(token);
        offsetSeconds = offsetSeconds || 0;
        if (date == null) {
            return false;
        }
        // Token expired?
        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));
    }
};
JwtHelper = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], JwtHelper);



/***/ }),

/***/ "./src/app/helpers/utilities.ts":
/*!**************************************!*\
  !*** ./src/app/helpers/utilities.ts ***!
  \**************************************/
/*! exports provided: Utilities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Utilities", function() { return Utilities; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
var Utilities_1;



let Utilities = Utilities_1 = class Utilities {
    static getHttpResponseMessages(data) {
        const responses = [];
        if (data instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            if (this.checkNoNetwork(data)) {
                responses.push(`${this.noNetworkMessageCaption}${this.captionAndMessageSeparator} ${this.noNetworkMessageDetail}`);
            }
            else {
                const responseObject = this.getResponseBody(data);
                if (responseObject && (typeof responseObject === 'object' || responseObject instanceof Object)) {
                    for (const key in responseObject) {
                        if (key) {
                            responses.push(`${key}${this.captionAndMessageSeparator} ${responseObject[key]}`);
                        }
                        else if (responseObject[key]) {
                            responses.push(responseObject[key].toString());
                        }
                    }
                }
            }
            if (!responses.length) {
                if (data.body) {
                    responses.push(`body: ${data.body}`);
                }
                if (data.error) {
                    responses.push(`error: ${data.error}`);
                }
            }
        }
        if (!responses.length) {
            if (this.getResponseBody(data)) {
                responses.push(this.getResponseBody(data).toString());
            }
            else {
                responses.push(data.toString());
            }
        }
        if (this.checkAccessDenied(data)) {
            responses.splice(0, 0, `${this.accessDeniedMessageCaption}${this.captionAndMessageSeparator} ${this.accessDeniedMessageDetail}`);
        }
        if (this.checkNotFound(data)) {
            let message = `${this.notFoundMessageCaption}${this.captionAndMessageSeparator} ${this.notFoundMessageDetail}`;
            if (data.url) {
                message += `. ${data.url}`;
            }
            responses.splice(0, 0, message);
        }
        return responses;
    }
    static getHttpResponseMessage(data) {
        const httpMessage = Utilities_1.findHttpResponseMessage(Utilities_1.noNetworkMessageCaption, data) ||
            Utilities_1.findHttpResponseMessage(Utilities_1.notFoundMessageCaption, data) ||
            Utilities_1.findHttpResponseMessage('error_description', data) ||
            Utilities_1.findHttpResponseMessage('error', data) ||
            Utilities_1.getHttpResponseMessages(data).join();
        return httpMessage;
    }
    static findHttpResponseMessage(messageToFind, data, seachInCaptionOnly = true, includeCaptionInResult = false) {
        const searchString = messageToFind.toLowerCase();
        const httpMessages = this.getHttpResponseMessages(data);
        for (const message of httpMessages) {
            const fullMessage = Utilities_1.splitInTwo(message, this.captionAndMessageSeparator);
            if (fullMessage.firstPart && fullMessage.firstPart.toLowerCase().indexOf(searchString) != -1) {
                return includeCaptionInResult ? message : fullMessage.secondPart || fullMessage.firstPart;
            }
        }
        if (!seachInCaptionOnly) {
            for (const message of httpMessages) {
                if (message.toLowerCase().indexOf(searchString) != -1) {
                    if (includeCaptionInResult) {
                        return message;
                    }
                    else {
                        const fullMessage = Utilities_1.splitInTwo(message, this.captionAndMessageSeparator);
                        return fullMessage.secondPart || fullMessage.firstPart;
                    }
                }
            }
        }
        return null;
    }
    static getResponseBody(response) {
        if (response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"]) {
            return response.body;
        }
        if (response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpErrorResponse"]) {
            return response.error || response.message || response.statusText;
        }
    }
    static checkNoNetwork(response) {
        if (response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            return response.status == 0;
        }
        return false;
    }
    static checkAccessDenied(response) {
        if (response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            return response.status == 403;
        }
        return false;
    }
    static checkNotFound(response) {
        if (response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            return response.status == 404;
        }
        return false;
    }
    static checkIsLocalHost(url, base) {
        if (url) {
            const location = new URL(url, base);
            return location.hostname === 'localhost' || location.hostname === '127.0.0.1';
        }
        return false;
    }
    static getQueryParamsFromString(paramString) {
        if (!paramString) {
            return null;
        }
        const params = {};
        for (const param of paramString.split('&')) {
            const keyValue = Utilities_1.splitInTwo(param, '=');
            params[keyValue.firstPart] = keyValue.secondPart;
        }
        return params;
    }
    static splitInTwo(text, separator) {
        const separatorIndex = text.indexOf(separator);
        if (separatorIndex == -1) {
            return { firstPart: text, secondPart: null };
        }
        const part1 = text.substr(0, separatorIndex).trim();
        const part2 = text.substr(separatorIndex + 1).trim();
        return { firstPart: part1, secondPart: part2 };
    }
    static safeStringify(object) {
        let result;
        try {
            result = JSON.stringify(object);
            return result;
        }
        catch (error) {
        }
        const simpleObject = {};
        for (const prop in object) {
            if (!object.hasOwnProperty(prop)) {
                continue;
            }
            if (typeof (object[prop]) == 'object') {
                continue;
            }
            if (typeof (object[prop]) == 'function') {
                continue;
            }
            simpleObject[prop] = object[prop];
        }
        result = '[***Sanitized Object***]: ' + JSON.stringify(simpleObject);
        return result;
    }
    static JsonTryParse(value) {
        try {
            return JSON.parse(value);
        }
        catch (e) {
            if (value === 'undefined') {
                return void 0;
            }
            return value;
        }
    }
    static TestIsObjectEmpty(obj) {
        for (const prop in obj) {
            if (obj.hasOwnProperty(prop)) {
                return false;
            }
        }
        return true;
    }
    static TestIsUndefined(value) {
        return typeof value === 'undefined';
        // return value === undefined;
    }
    static TestIsString(value) {
        return typeof value === 'string' || value instanceof String;
    }
    static capitalizeFirstLetter(text) {
        if (text) {
            return text.charAt(0).toUpperCase() + text.slice(1);
        }
        else {
            return text;
        }
    }
    static toTitleCase(text) {
        return text.replace(/\w\S*/g, (subString) => {
            return subString.charAt(0).toUpperCase() + subString.substr(1).toLowerCase();
        });
    }
    static toLowerCase(items) {
        if (items instanceof Array) {
            const loweredRoles = [];
            for (let i = 0; i < items.length; i++) {
                loweredRoles[i] = items[i].toLowerCase();
            }
            return loweredRoles;
        }
        else if (typeof items === 'string' || items instanceof String) {
            return items.toLowerCase();
        }
    }
    static uniqueId() {
        return this.randomNumber(1000000, 9000000).toString();
    }
    static randomNumber(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }
    static baseUrl() {
        let base = '';
        if (window.location.origin) {
            base = window.location.origin;
        }
        else {
            base = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
        }
        return base.replace(/\/$/, '');
    }
    static printDateOnly(date) {
        date = new Date(date);
        const dayNames = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
        const monthNames = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
        const dayOfWeek = date.getDay();
        const dayOfMonth = date.getDate();
        let sup = '';
        const month = date.getMonth();
        const year = date.getFullYear();
        if (dayOfMonth == 1 || dayOfMonth == 21 || dayOfMonth == 31) {
            sup = 'st';
        }
        else if (dayOfMonth == 2 || dayOfMonth == 22) {
            sup = 'nd';
        }
        else if (dayOfMonth == 3 || dayOfMonth == 23) {
            sup = 'rd';
        }
        else {
            sup = 'th';
        }
        const dateString = dayNames[dayOfWeek] + ', ' + dayOfMonth + sup + ' ' + monthNames[month] + ' ' + year;
        return dateString;
    }
    static printTimeOnly(date) {
        date = new Date(date);
        let period = '';
        let minute = date.getMinutes().toString();
        let hour = date.getHours();
        period = hour < 12 ? 'AM' : 'PM';
        if (hour == 0) {
            hour = 12;
        }
        if (hour > 12) {
            hour = hour - 12;
        }
        if (minute.length == 1) {
            minute = '0' + minute;
        }
        const timeString = hour + ':' + minute + ' ' + period;
        return timeString;
    }
    static printDate(date, separator = 'at') {
        return `${Utilities_1.printDateOnly(date)} ${separator} ${Utilities_1.printTimeOnly(date)}`;
    }
    static printFriendlyDate(date, separator = '-') {
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        const yesterday = new Date(today);
        yesterday.setDate(yesterday.getDate() - 1);
        const test = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        if (test.toDateString() == today.toDateString()) {
            return `Today ${separator} ${Utilities_1.printTimeOnly(date)}`;
        }
        if (test.toDateString() == yesterday.toDateString()) {
            return `Yesterday ${separator} ${Utilities_1.printTimeOnly(date)}`;
        }
        else {
            return Utilities_1.printDate(date, separator);
        }
    }
    static printShortDate(date, separator = '/', dateTimeSeparator = '-') {
        let day = date.getDate().toString();
        let month = (date.getMonth() + 1).toString();
        const year = date.getFullYear();
        if (day.length == 1) {
            day = '0' + day;
        }
        if (month.length == 1) {
            month = '0' + month;
        }
        return `${month}${separator}${day}${separator}${year} ${dateTimeSeparator} ${Utilities_1.printTimeOnly(date)}`;
    }
    static parseDate(date) {
        if (date) {
            if (date instanceof Date) {
                return date;
            }
            if (typeof date === 'string' || date instanceof String) {
                if (date.search(/[a-su-z+]/i) == -1) {
                    date = date + 'Z';
                }
                return new Date(date);
            }
            if (typeof date === 'number' || date instanceof Number) {
                return new Date(date);
            }
        }
    }
    static printDuration(start, end) {
        start = new Date(start);
        end = new Date(end);
        // get total seconds between the times
        let delta = Math.abs(start.valueOf() - end.valueOf()) / 1000;
        // calculate (and subtract) whole days
        const days = Math.floor(delta / 86400);
        delta -= days * 86400;
        // calculate (and subtract) whole hours
        const hours = Math.floor(delta / 3600) % 24;
        delta -= hours * 3600;
        // calculate (and subtract) whole minutes
        const minutes = Math.floor(delta / 60) % 60;
        delta -= minutes * 60;
        // what's left is seconds
        const seconds = delta % 60; // in theory the modulus is not required
        let printedDays = '';
        if (days) {
            printedDays = `${days} days`;
        }
        if (hours) {
            printedDays += printedDays ? `, ${hours} hours` : `${hours} hours`;
        }
        if (minutes) {
            printedDays += printedDays ? `, ${minutes} minutes` : `${minutes} minutes`;
        }
        if (seconds) {
            printedDays += printedDays ? ` and ${seconds} seconds` : `${seconds} seconds`;
        }
        if (!printedDays) {
            printedDays = '0';
        }
        return printedDays;
    }
    static getAge(birthDate, otherDate) {
        birthDate = new Date(birthDate);
        otherDate = new Date(otherDate);
        let years = (otherDate.getFullYear() - birthDate.getFullYear());
        if (otherDate.getMonth() < birthDate.getMonth() ||
            otherDate.getMonth() == birthDate.getMonth() && otherDate.getDate() < birthDate.getDate()) {
            years--;
        }
        return years;
    }
    static searchArray(searchTerm, caseSensitive, ...values) {
        if (!searchTerm) {
            return true;
        }
        let filter = searchTerm.trim();
        let data = values.join();
        if (!caseSensitive) {
            filter = filter.toLowerCase();
            data = data.toLowerCase();
        }
        return data.indexOf(filter) != -1;
    }
    static moveArrayItem(array, oldIndex, newIndex) {
        if (oldIndex < 0) {
            return;
        }
        if (newIndex < 0) {
            newIndex += array.length;
        }
        if (newIndex >= array.length) {
            let k = newIndex - array.length;
            while ((k--) + 1) {
                array.push(undefined);
            }
        }
        array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);
    }
    static expandCamelCase(text) {
        if (!text) {
            return text;
        }
        return text.replace(/([A-Z][a-z]+)/g, ' $1')
            .replace(/([A-Z][A-Z]+)/g, ' $1')
            .replace(/([^A-Za-z ]+)/g, ' $1');
    }
    static testIsAbsoluteUrl(url) {
        const r = new RegExp('^(?:[a-z]+:)?//', 'i');
        return r.test(url);
    }
    static convertToAbsoluteUrl(url) {
        return Utilities_1.testIsAbsoluteUrl(url) ? url : '//' + url;
    }
    static removeNulls(obj) {
        const isArray = obj instanceof Array;
        for (const k in obj) {
            if (obj[k] === null) {
                isArray ? obj.splice(k, 1) : delete obj[k];
            }
            else if (typeof obj[k] == 'object') {
                Utilities_1.removeNulls(obj[k]);
            }
            if (isArray && obj.length == k) {
                Utilities_1.removeNulls(obj);
            }
        }
        return obj;
    }
    static debounce(func, wait, immediate) {
        let timeout;
        return function () {
            const context = this;
            const args_ = arguments;
            const later = function () {
                timeout = null;
                if (!immediate) {
                    func.apply(context, args_);
                }
            };
            const callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) {
                func.apply(context, args_);
            }
        };
    }
};
Utilities.captionAndMessageSeparator = ':';
Utilities.noNetworkMessageCaption = 'No Network';
Utilities.noNetworkMessageDetail = 'The server cannot be reached';
Utilities.accessDeniedMessageCaption = 'Access Denied!';
Utilities.accessDeniedMessageDetail = '';
Utilities.notFoundMessageCaption = 'Not Found';
Utilities.notFoundMessageDetail = 'The target resource cannot be found';
Utilities.cookies = {
    getItem: (sKey) => {
        return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\s*' + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=\\s*([^;]*).*$)|^.*$'), '$1')) || null;
    },
    setItem: (sKey, sValue, vEnd, sPath, sDomain, bSecure) => {
        if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) {
            return false;
        }
        let sExpires = '';
        if (vEnd) {
            switch (vEnd.constructor) {
                case Number:
                    sExpires = vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + vEnd;
                    break;
                case String:
                    sExpires = '; expires=' + vEnd;
                    break;
                case Date:
                    sExpires = '; expires=' + vEnd.toUTCString();
                    break;
            }
        }
        document.cookie = encodeURIComponent(sKey) + '=' + encodeURIComponent(sValue) + sExpires + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '') + (bSecure ? '; secure' : '');
        return true;
    },
    removeItem: (sKey, sPath, sDomain) => {
        if (!sKey) {
            return false;
        }
        document.cookie = encodeURIComponent(sKey) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '');
        return true;
    },
    hasItem: (sKey) => {
        return (new RegExp('(?:^|;\\s*)' + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=')).test(document.cookie);
    },
    keys: () => {
        const aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, '').split(/\s*(?:\=[^;]*)?;\s*/);
        for (let nIdx = 0; nIdx < aKeys.length; nIdx++) {
            aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);
        }
        return aKeys;
    }
};
Utilities = Utilities_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], Utilities);



/***/ }),

/***/ "./src/app/models/enum.models.ts":
/*!***************************************!*\
  !*** ./src/app/models/enum.models.ts ***!
  \***************************************/
/*! exports provided: GenderEnumModel, ViewModelStates */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenderEnumModel", function() { return GenderEnumModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewModelStates", function() { return ViewModelStates; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

var GenderEnumModel;
(function (GenderEnumModel) {
    GenderEnumModel[GenderEnumModel["None"] = 0] = "None";
    GenderEnumModel[GenderEnumModel["Female"] = 1] = "Female";
    GenderEnumModel[GenderEnumModel["Male"] = 2] = "Male";
})(GenderEnumModel || (GenderEnumModel = {}));
var ViewModelStates;
(function (ViewModelStates) {
    ViewModelStates[ViewModelStates["New"] = 0] = "New";
    ViewModelStates[ViewModelStates["Edit"] = 1] = "Edit";
    ViewModelStates[ViewModelStates["View"] = 2] = "View";
    ViewModelStates[ViewModelStates["Delete"] = 3] = "Delete";
})(ViewModelStates || (ViewModelStates = {}));


/***/ }),

/***/ "./src/app/models/user-login.model.ts":
/*!********************************************!*\
  !*** ./src/app/models/user-login.model.ts ***!
  \********************************************/
/*! exports provided: UserLoginModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserLoginModel", function() { return UserLoginModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class UserLoginModel {
    constructor(userName, password, rememberMe) {
        this.userName = userName;
        this.password = password;
        this.rememberMe = rememberMe;
    }
}


/***/ }),

/***/ "./src/app/pipes/enum-to-array.pipe.ts":
/*!*********************************************!*\
  !*** ./src/app/pipes/enum-to-array.pipe.ts ***!
  \*********************************************/
/*! exports provided: EnumToArrayPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnumToArrayPipe", function() { return EnumToArrayPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let EnumToArrayPipe = class EnumToArrayPipe {
    transform(value) {
        return Object.keys(value).filter(e => !isNaN(+e)).map(o => { return { index: +o, name: value[o] }; });
    }
};
EnumToArrayPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({ name: 'enumToArray' })
], EnumToArrayPipe);



/***/ }),

/***/ "./src/app/pipes/group-by.pipe.ts":
/*!****************************************!*\
  !*** ./src/app/pipes/group-by.pipe.ts ***!
  \****************************************/
/*! exports provided: GroupByPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupByPipe", function() { return GroupByPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let GroupByPipe = class GroupByPipe {
    transform(value, field) {
        if (!value) {
            return value;
        }
        const groupedObj = value.reduce((prev, cur) => {
            if (!prev[cur[field]]) {
                prev[cur[field]] = [cur];
            }
            else {
                prev[cur[field]].push(cur);
            }
            return prev;
        }, {});
        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));
    }
};
GroupByPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({ name: 'groupBy' })
], GroupByPipe);



/***/ }),

/***/ "./src/app/services/account.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/account.service.ts ***!
  \*********************************************/
/*! exports provided: AccountService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountService", function() { return AccountService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");
var AccountService_1;





let AccountService = AccountService_1 = class AccountService {
    constructor(authEndpointService, accountEndpointService) {
        this.authEndpointService = authEndpointService;
        this.accountEndpointService = accountEndpointService;
        this._rolesChanged = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    }
    getUser(userId) {
        return userId ? this.accountEndpointService.getUserById(userId) : this.accountEndpointService.getCurrentUser();
    }
    getUserAndRoles(userId) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["forkJoin"])(this.getUser(userId), this.accountEndpointService.getRolesAll());
    }
    getUsers(page, pageSize) {
        return page && pageSize ? this.accountEndpointService.getUsers(page, pageSize) : this.accountEndpointService.getUsersAll();
    }
    getUsersAndRoles(page, pageSize) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["forkJoin"])(this.getUsers(page, pageSize), this.accountEndpointService.getRolesAll());
    }
    updateUser(user) {
        if (user.id) {
            return this.accountEndpointService.updateUser(user.id, user);
        }
        else {
            return this.accountEndpointService.getUserByUserName(user.userName).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(foundUser => {
                user.id = foundUser.id;
                return this.accountEndpointService.updateUser(user.id, user);
            }));
        }
    }
    newUser(user) {
        return this.accountEndpointService.register(user);
    }
    getUserPreferences() {
        return this.accountEndpointService.userPreferences();
    }
    updateUserPreferences(configuration) {
        return this.accountEndpointService.userPreferences2(configuration);
    }
    deleteUser(userOrUserId) {
        if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {
            return this.accountEndpointService.deleteUser(userOrUserId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(data => this.onRolesUserCountChanged(data.roles)));
        }
        else {
            if (userOrUserId.id) {
                return this.deleteUser(userOrUserId.id);
            }
            else {
                return this.accountEndpointService.getUserByUserName(userOrUserId.userName).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(user => this.deleteUser(user.id)));
            }
        }
    }
    unblockUser(userId) {
        return this.accountEndpointService.unblockUser(userId);
    }
    userHasPermission(permissionValue) {
        return this.permissions.some(p => p == permissionValue);
    }
    refreshLoggedInUser() {
        return this.accountEndpointService.refreshLogin();
    }
    getRoles(page, pageSize) {
        return page && pageSize ? this.accountEndpointService.getRoles(page, pageSize) : this.accountEndpointService.getRolesAll();
    }
    getRolesAndPermissions(page, pageSize) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["forkJoin"])(this.getRoles(page, pageSize), this.accountEndpointService.getAllPermissions());
    }
    updateRole(role) {
        if (role.id) {
            return this.accountEndpointService.updateRole(role.id, role).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(data => this.onRolesChanged([role], AccountService_1.roleModifiedOperation)));
        }
        else {
            return this.accountEndpointService.getRoleByName(role.name).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(foundRole => {
                role.id = foundRole.id;
                return this.accountEndpointService.updateRole(role.id, role);
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(data => this.onRolesChanged([role], AccountService_1.roleModifiedOperation)));
        }
    }
    newRole(role) {
        return this.accountEndpointService.createRole(role).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(data => this.onRolesChanged([role], AccountService_1.roleAddedOperation)));
    }
    deleteRole(roleOrRoleId) {
        if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {
            return this.accountEndpointService.deleteRole(roleOrRoleId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(data => this.onRolesChanged([data], AccountService_1.roleDeletedOperation)));
        }
        else {
            if (roleOrRoleId.id) {
                return this.deleteRole(roleOrRoleId.id);
            }
            else {
                return this.accountEndpointService.getRoleByName(roleOrRoleId.name).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(role => this.deleteRole(role.id)));
            }
        }
    }
    getPermissions() {
        return this.accountEndpointService.getAllPermissions();
    }
    onRolesChanged(roles, op) {
        this._rolesChanged.next({ roles, operation: op });
    }
    onRolesUserCountChanged(roles) {
        return this.onRolesChanged(roles, AccountService_1.roleModifiedOperation);
    }
    getRolesChangedEvent() {
        return this._rolesChanged.asObservable();
    }
    get permissions() {
        return this.authEndpointService.userPermissions;
    }
    get currentUser() {
        return this.authEndpointService.currentUser;
    }
};
AccountService.roleAddedOperation = 'add';
AccountService.roleDeletedOperation = 'delete';
AccountService.roleModifiedOperation = 'modify';
AccountService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["AuthEndpointService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["AccountEndpointService"] }
];
AccountService = AccountService_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AccountService);



/***/ }),

/***/ "./src/app/services/action-device.service.ts":
/*!***************************************************!*\
  !*** ./src/app/services/action-device.service.ts ***!
  \***************************************************/
/*! exports provided: ActionDeviceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeviceService", function() { return ActionDeviceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");



let ActionDeviceService = class ActionDeviceService {
    constructor(actionDeviceEndpointService) {
        this.actionDeviceEndpointService = actionDeviceEndpointService;
    }
    getActionDevices(getDisabled, pageNumber, pageSize) {
        if (getDisabled == null)
            getDisabled = false;
        return pageNumber && pageSize ? this.actionDeviceEndpointService.getAllPaged(pageNumber, pageSize, getDisabled) :
            this.actionDeviceEndpointService.getAll(getDisabled);
    }
    getActionDevice(actionDeviceId) {
        return this.actionDeviceEndpointService.get(actionDeviceId);
    }
    setActionDeviceState(actionDeviceId, state) {
        return this.actionDeviceEndpointService.putState(actionDeviceId, state);
    }
    addActionDevice(actionDevice) {
        return this.actionDeviceEndpointService.post(actionDevice);
    }
    updateActionDevice(actionDevice) {
        return this.actionDeviceEndpointService.put(actionDevice.actionDeviceId, actionDevice);
    }
    patchActionDevice(actionDeviceId, actionDevice) {
        return this.actionDeviceEndpointService.patch(actionDeviceId, actionDevice);
    }
    deleteActionDevice(actionDeviceId) {
        return this.actionDeviceEndpointService.delete(actionDeviceId);
    }
};
ActionDeviceService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ActionDeviceEndpointService"] }
];
ActionDeviceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ActionDeviceService);



/***/ }),

/***/ "./src/app/services/alert.service.ts":
/*!*******************************************!*\
  !*** ./src/app/services/alert.service.ts ***!
  \*******************************************/
/*! exports provided: AlertService, AlertDialog, DialogType, AlertCommand, AlertMessage, MessageSeverity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertService", function() { return AlertService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertDialog", function() { return AlertDialog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogType", function() { return DialogType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertCommand", function() { return AlertCommand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertMessage", function() { return AlertMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageSeverity", function() { return MessageSeverity; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/utilities */ "./src/app/helpers/utilities.ts");





let AlertService = class AlertService {
    constructor() {
        this.messages = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.dialogs = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    }
    showDialog(message, type, okCallback, cancelCallback, okLabel, cancelLabel, defaultValue) {
        if (!type) {
            type = DialogType.alert;
        }
        this.dialogs.next({ message, type, okCallback, cancelCallback, okLabel, cancelLabel, defaultValue });
    }
    showMessage(data, separatorOrDetail, severity) {
        if (!severity) {
            severity = MessageSeverity.default;
        }
        if (data instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            data = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].getHttpResponseMessages(data);
            separatorOrDetail = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].captionAndMessageSeparator;
        }
        if (data instanceof Array) {
            for (const message of data) {
                const msgObject = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].splitInTwo(message, separatorOrDetail);
                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, false);
            }
        }
        else {
            this.showMessageHelper(data, separatorOrDetail, severity, false);
        }
    }
    showStickyMessage(data, separatorOrDetail, severity, error, onRemove) {
        if (!severity) {
            severity = MessageSeverity.default;
        }
        if (data instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponseBase"]) {
            data = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].getHttpResponseMessages(data);
            separatorOrDetail = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].captionAndMessageSeparator;
        }
        if (data instanceof Array) {
            for (const message of data) {
                const msgObject = _helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].splitInTwo(message, separatorOrDetail);
                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, true);
            }
        }
        else {
            if (error) {
                const msg = `Severity: "${MessageSeverity[severity]}", Summary: "${data}", Detail: "${separatorOrDetail}", Error: "${_helpers_utilities__WEBPACK_IMPORTED_MODULE_4__["Utilities"].safeStringify(error)}"`;
                switch (severity) {
                    case MessageSeverity.default:
                        this.logInfo(msg);
                        break;
                    case MessageSeverity.info:
                        this.logInfo(msg);
                        break;
                    case MessageSeverity.success:
                        this.logMessage(msg);
                        break;
                    case MessageSeverity.error:
                        this.logError(msg);
                        break;
                    case MessageSeverity.warn:
                        this.logWarning(msg);
                        break;
                    case MessageSeverity.wait:
                        this.logTrace(msg);
                        break;
                }
            }
            this.showMessageHelper(data, separatorOrDetail, severity, true, onRemove);
        }
    }
    showMessageHelper(summary, detail, severity, isSticky, onRemove) {
        const alertCommand = {
            operation: isSticky ? 'add_sticky' : 'add',
            message: { severity, summary, detail },
            onRemove
        };
        this.messages.next(alertCommand);
    }
    resetStickyMessage() {
        this.messages.next({ operation: 'clear' });
    }
    startLoadingMessage(message = 'Loading...', caption = '') {
        clearTimeout(this.loadingMessageTimeoutId);
        this.loadingMessageTimeoutId = setTimeout(() => {
            this.showStickyMessage(caption, message, MessageSeverity.wait);
        }, 1000);
    }
    stopLoadingMessage() {
        clearTimeout(this.loadingMessageTimeoutId);
        this.resetStickyMessage();
    }
    logDebug(msg) {
        console.debug(msg);
    }
    logError(msg) {
        console.error(msg);
    }
    logInfo(msg) {
        console.info(msg);
    }
    logMessage(msg) {
        console.log(msg);
    }
    logTrace(msg) {
        console.trace(msg);
    }
    logWarning(msg) {
        console.warn(msg);
    }
    getDialogEvent() {
        return this.dialogs.asObservable();
    }
    getMessageEvent() {
        return this.messages.asObservable();
    }
};
AlertService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AlertService);

// ******************** Dialog ********************//
class AlertDialog {
    constructor(message, type, okCallback, cancelCallback, defaultValue, okLabel, cancelLabel) {
        this.message = message;
        this.type = type;
        this.okCallback = okCallback;
        this.cancelCallback = cancelCallback;
        this.defaultValue = defaultValue;
        this.okLabel = okLabel;
        this.cancelLabel = cancelLabel;
    }
}
var DialogType;
(function (DialogType) {
    DialogType[DialogType["alert"] = 0] = "alert";
    DialogType[DialogType["confirm"] = 1] = "confirm";
    DialogType[DialogType["prompt"] = 2] = "prompt";
})(DialogType || (DialogType = {}));
// ******************** End ********************//
// ******************** Growls ********************//
class AlertCommand {
    constructor(operation, message, onRemove) {
        this.operation = operation;
        this.message = message;
        this.onRemove = onRemove;
    }
}
class AlertMessage {
    constructor(severity, summary, detail) {
        this.severity = severity;
        this.summary = summary;
        this.detail = detail;
    }
}
var MessageSeverity;
(function (MessageSeverity) {
    MessageSeverity[MessageSeverity["default"] = 0] = "default";
    MessageSeverity[MessageSeverity["info"] = 1] = "info";
    MessageSeverity[MessageSeverity["success"] = 2] = "success";
    MessageSeverity[MessageSeverity["error"] = 3] = "error";
    MessageSeverity[MessageSeverity["warn"] = 4] = "warn";
    MessageSeverity[MessageSeverity["wait"] = 5] = "wait";
})(MessageSeverity || (MessageSeverity = {}));
// ******************** End ********************//


/***/ }),

/***/ "./src/app/services/app-theme.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/app-theme.service.ts ***!
  \***********************************************/
/*! exports provided: AppThemeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppThemeService", function() { return AppThemeService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let AppThemeService = class AppThemeService {
    constructor() {
        this.themes = [
            {
                id: 1,
                name: 'Default',
                href: 'bootstrap.css',
                isDefault: true,
                background: '#007bff',
                color: '#fff'
            },
            {
                id: 2,
                name: 'Cosmo',
                href: 'cosmo.css',
                background: '#2780E3',
                color: '#373a3c'
            },
            {
                id: 3,
                name: 'Lumen',
                href: 'lumen.css',
                background: '#158CBA',
                color: '#f0f0f0'
            },
            {
                id: 4,
                name: 'Cerulean',
                href: 'cerulean.css',
                background: '#2FA4E7',
                color: '#e9ecef'
            },
            {
                id: 5,
                name: 'Minty',
                href: 'minty.css',
                background: '#78C2AD',
                color: '#F3969A'
            },
            {
                id: 6,
                name: 'Sketchy',
                href: 'sketchy.css',
                background: '#333',
                color: 'white'
            },
            {
                id: 7,
                name: 'Slate',
                href: 'slate.css',
                background: '#3A3F44',
                color: '#7A8288',
                isDark: true
            },
            {
                id: 8,
                name: 'Flatly',
                href: 'flatly.css',
                background: '#2C3E50',
                color: '#18BC9C'
            },
            {
                id: 9,
                name: 'Pulse',
                href: 'pulse.css',
                background: '#593196',
                color: '#A991D4'
            },
            {
                id: 10,
                name: 'Spacelab',
                href: 'spacelab.css',
                background: '#446E9B',
                color: '#999'
            },
            {
                id: 11,
                name: 'United',
                href: 'united.css',
                background: '#E95420',
                color: '#fff'
            },
            {
                id: 12,
                name: 'Journal',
                href: 'journal.css',
                background: '#EB6864',
                color: '#aaa'
            },
            {
                id: 13,
                name: 'Superhero',
                href: 'superhero.css',
                background: '#DF691A',
                color: '#2B3E50',
                isDark: true
            },
            {
                id: 14,
                name: 'Solar',
                href: 'solar.css',
                background: '#B58900',
                color: '#002B36',
                isDark: true
            }
        ];
    }
    installTheme(theme) {
        if (theme == null || theme.isDefault) {
            this.removeStyle('theme');
        }
        else {
            this.setStyle('theme', `assets/themes/${theme.href}`);
        }
    }
    getDefaultTheme() {
        return this.themes.find(theme => theme.isDefault);
    }
    getThemeByID(id) {
        return this.themes.find(theme => theme.id === id);
    }
    setStyle(key, href) {
        this.getLinkElementForKey(key).setAttribute('href', href);
    }
    removeStyle(key) {
        const existingLinkElement = this.getExistingLinkElementByKey(key);
        if (existingLinkElement) {
            document.head.removeChild(existingLinkElement);
        }
    }
    getLinkElementForKey(key) {
        return this.getExistingLinkElementByKey(key) || this.createLinkElementWithKey(key);
    }
    getExistingLinkElementByKey(key) {
        return document.head.querySelector(`link[rel="stylesheet"].${this.getClassNameForKey(key)}`);
    }
    createLinkElementWithKey(key) {
        const linkEl = document.createElement('link');
        linkEl.setAttribute('rel', 'stylesheet');
        linkEl.classList.add(this.getClassNameForKey(key));
        document.head.appendChild(linkEl);
        return linkEl;
    }
    getClassNameForKey(key) {
        return `style-manager-${key}`;
    }
};
AppThemeService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AppThemeService);



/***/ }),

/***/ "./src/app/services/app-title.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/app-title.service.ts ***!
  \***********************************************/
/*! exports provided: AppTitleService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppTitleService", function() { return AppTitleService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/utilities */ "./src/app/helpers/utilities.ts");






let AppTitleService = class AppTitleService {
    constructor(titleService, router) {
        this.titleService = titleService;
        this.router = router;
        this.sub = this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__["NavigationEnd"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(_ => this.router.routerState.root), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(route => {
            while (route.firstChild) {
                route = route.firstChild;
            }
            return route;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["flatMap"])(route => route.data))
            .subscribe(data => {
            let title = data.title;
            if (title) {
                const fragment = this.router.url.split('#')[1];
                if (fragment) {
                    title += ' | ' + _helpers_utilities__WEBPACK_IMPORTED_MODULE_5__["Utilities"].toTitleCase(fragment);
                }
            }
            if (title && this.appName) {
                title += ' - ' + this.appName;
            }
            else if (this.appName) {
                title = this.appName;
            }
            if (title) {
                this.titleService.setTitle(title);
            }
        });
    }
};
AppTitleService.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["Title"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
AppTitleService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AppTitleService);



/***/ }),

/***/ "./src/app/services/app-translation.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/services/app-translation.service.ts ***!
  \*****************************************************/
/*! exports provided: AppTranslationService, TranslateLanguageLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppTranslationService", function() { return AppTranslationService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TranslateLanguageLoader", function() { return TranslateLanguageLoader; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");




let AppTranslationService = class AppTranslationService {
    constructor(translate) {
        this.translate = translate;
        this.onLanguageChanged = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.languageChanged$ = this.onLanguageChanged.asObservable();
        this.addLanguages(['en', 'fr', 'de', 'pt', 'ar', 'ko']);
        this.setDefaultLanguage('en');
    }
    addLanguages(lang) {
        this.translate.addLangs(lang);
    }
    setDefaultLanguage(lang) {
        this.translate.setDefaultLang(lang);
    }
    getDefaultLanguage() {
        return this.translate.defaultLang;
    }
    getBrowserLanguage() {
        return this.translate.getBrowserLang();
    }
    getCurrentLanguage() {
        return this.translate.currentLang;
    }
    getLoadedLanguages() {
        return this.translate.langs;
    }
    useBrowserLanguage() {
        const browserLang = this.getBrowserLanguage();
        if (browserLang.match(/en|fr|de|pt|ar|ko/)) {
            this.changeLanguage(browserLang);
            return browserLang;
        }
    }
    useDefaultLangage() {
        return this.changeLanguage(null);
    }
    changeLanguage(language) {
        if (!language) {
            language = this.getDefaultLanguage();
        }
        if (language != this.translate.currentLang) {
            setTimeout(() => {
                this.translate.use(language);
                this.onLanguageChanged.next(language);
            });
        }
        return language;
    }
    getTranslation(key, interpolateParams) {
        return this.translate.instant(key, interpolateParams);
    }
    getTranslationAsync(key, interpolateParams) {
        return this.translate.get(key, interpolateParams);
    }
};
AppTranslationService.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"] }
];
AppTranslationService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AppTranslationService);

class TranslateLanguageLoader {
    getTranslation(lang) {
        // Note Dynamic require(variable) will not work. Require is always at compile time
        switch (lang) {
            case 'en':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/en.json */ "./src/app/assets/locale/en.json"));
            case 'fr':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/fr.json */ "./src/app/assets/locale/fr.json"));
            case 'de':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/de.json */ "./src/app/assets/locale/de.json"));
            case 'pt':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/pt.json */ "./src/app/assets/locale/pt.json"));
            case 'ar':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/ar.json */ "./src/app/assets/locale/ar.json"));
            case 'ko':
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(__webpack_require__(/*! ../assets/locale/ko.json */ "./src/app/assets/locale/ko.json"));
            default:
        }
    }
}


/***/ }),

/***/ "./src/app/services/auth-guard.service.ts":
/*!************************************************!*\
  !*** ./src/app/services/auth-guard.service.ts ***!
  \************************************************/
/*! exports provided: AuthGuardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuardService", function() { return AuthGuardService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");




let AuthGuardService = class AuthGuardService {
    constructor(authEndpointService, router) {
        this.authEndpointService = authEndpointService;
        this.router = router;
    }
    canActivate(route, state) {
        const url = state.url;
        return this.checkLogin(url);
    }
    canActivateChild(route, state) {
        return this.canActivate(route, state);
    }
    canLoad(route) {
        const url = `/${route.path}`;
        return this.checkLogin(url);
    }
    checkLogin(url) {
        if (this.authEndpointService.isLoggedIn) {
            return true;
        }
        this.authEndpointService.loginRedirectUrl = url;
        this.router.navigate(['/login']);
        return false;
    }
};
AuthGuardService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_3__["AuthEndpointService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
AuthGuardService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AuthGuardService);



/***/ }),

/***/ "./src/app/services/auth-storage.service.ts":
/*!**************************************************!*\
  !*** ./src/app/services/auth-storage.service.ts ***!
  \**************************************************/
/*! exports provided: AuthStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthStorageService", function() { return AuthStorageService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_local_storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/local-storage.service */ "./src/app/services/local-storage.service.ts");
var AuthStorageService_1;



let AuthStorageService = AuthStorageService_1 = class AuthStorageService {
    constructor(localStorage) {
        this.localStorage = localStorage;
        this.dbKeyPrefix = 'AUTH:';
    }
    getItem(key) {
        return this.localStorage.getData(this.dbKeyPrefix + key);
    }
    removeItem(key) {
        this.localStorage.deleteData(this.dbKeyPrefix + key);
    }
    setItem(key, data) {
        if (AuthStorageService_1.RememberMe) {
            this.localStorage.savePermanentData(data, this.dbKeyPrefix + key);
        }
        else {
            this.localStorage.saveSyncedSessionData(data, this.dbKeyPrefix + key);
        }
    }
};
AuthStorageService.ctorParameters = () => [
    { type: _services_local_storage_service__WEBPACK_IMPORTED_MODULE_2__["LocalStorageService"] }
];
AuthStorageService.RememberMe = false;
AuthStorageService = AuthStorageService_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], AuthStorageService);



/***/ }),

/***/ "./src/app/services/configuration.service.ts":
/*!***************************************************!*\
  !*** ./src/app/services/configuration.service.ts ***!
  \***************************************************/
/*! exports provided: ConfigurationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationService", function() { return ConfigurationService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _app_translation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app-translation.service */ "./src/app/services/app-translation.service.ts");
/* harmony import */ var _app_theme_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app-theme.service */ "./src/app/services/app-theme.service.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./local-storage.service */ "./src/app/services/local-storage.service.ts");
/* harmony import */ var _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/db-keys */ "./src/app/helpers/db-keys.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../environments/environment */ "./src/environments/environment.ts");
var ConfigurationService_1;









let ConfigurationService = ConfigurationService_1 = class ConfigurationService {
    constructor(localStorageService, appTranslationService, appThemeService) {
        this.localStorageService = localStorageService;
        this.appTranslationService = appTranslationService;
        this.appThemeService = appThemeService;
        this.baseUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl || _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].baseUrl();
        this.tokenUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].tokenUrl || _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl || _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].baseUrl();
        this.loginUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].loginUrl;
        this.fallbackBaseUrl = 'http://www.wimberlytech.com';
        // ***End of defaults***
        this._language = null;
        this._homeUrl = null;
        this._themeId = null;
        this._showDashboardStatistics = null;
        this._showDashboardNotifications = null;
        this._showDashboardTodo = null;
        this._showDashboardBanner = null;
        this.onConfigurationImported = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.configurationImported$ = this.onConfigurationImported.asObservable();
        this.loadLocalChanges();
    }
    set language(value) {
        this._language = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].LANGUAGE);
        this.appTranslationService.changeLanguage(value);
    }
    get language() {
        return this._language || ConfigurationService_1.defaultLanguage;
    }
    set themeId(value) {
        value = +value;
        this._themeId = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].THEME_ID);
        this.appThemeService.installTheme(this.appThemeService.getThemeByID(value));
    }
    get themeId() {
        return this._themeId || ConfigurationService_1.defaultThemeId;
    }
    set homeUrl(value) {
        this._homeUrl = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].HOME_URL);
    }
    get homeUrl() {
        return this._homeUrl || ConfigurationService_1.defaultHomeUrl;
    }
    set showDashboardStatistics(value) {
        this._showDashboardStatistics = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_STATISTICS);
    }
    get showDashboardStatistics() {
        return this._showDashboardStatistics != null ? this._showDashboardStatistics : ConfigurationService_1.defaultShowDashboardStatistics;
    }
    set showDashboardNotifications(value) {
        this._showDashboardNotifications = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_NOTIFICATIONS);
    }
    get showDashboardNotifications() {
        return this._showDashboardNotifications != null ? this._showDashboardNotifications : ConfigurationService_1.defaultShowDashboardNotifications;
    }
    set showDashboardTodo(value) {
        this._showDashboardTodo = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_TODO);
    }
    get showDashboardTodo() {
        return this._showDashboardTodo != null ? this._showDashboardTodo : ConfigurationService_1.defaultShowDashboardTodo;
    }
    set showDashboardBanner(value) {
        this._showDashboardBanner = value;
        this.saveToLocalStore(value, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_BANNER);
    }
    get showDashboardBanner() {
        return this._showDashboardBanner != null ? this._showDashboardBanner : ConfigurationService_1.defaultShowDashboardBanner;
    }
    loadLocalChanges() {
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].LANGUAGE)) {
            this._language = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].LANGUAGE);
            this.appTranslationService.changeLanguage(this._language);
        }
        else {
            this.resetLanguage();
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].THEME_ID)) {
            this._themeId = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].THEME_ID);
            this.appThemeService.installTheme(this.appThemeService.getThemeByID(this._themeId));
        }
        else {
            this.resetTheme();
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].HOME_URL)) {
            this._homeUrl = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].HOME_URL);
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_STATISTICS)) {
            this._showDashboardStatistics = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_STATISTICS);
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_NOTIFICATIONS)) {
            this._showDashboardNotifications = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_NOTIFICATIONS);
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_TODO)) {
            this._showDashboardTodo = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_TODO);
        }
        if (this.localStorageService.exists(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_BANNER)) {
            this._showDashboardBanner = this.localStorageService.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_BANNER);
        }
    }
    saveToLocalStore(data, key) {
        setTimeout(() => this.localStorageService.savePermanentData(data, key));
    }
    import(jsonValue) {
        this.clearLocalChanges();
        if (jsonValue) {
            const importValue = _helpers_utilities__WEBPACK_IMPORTED_MODULE_7__["Utilities"].JsonTryParse(jsonValue);
            if (importValue.language != null) {
                this.language = importValue.language;
            }
            if (importValue.themeId != null) {
                this.themeId = +importValue.themeId;
            }
            if (importValue.homeUrl != null) {
                this.homeUrl = importValue.homeUrl;
            }
            if (importValue.showDashboardStatistics != null) {
                this.showDashboardStatistics = importValue.showDashboardStatistics;
            }
            if (importValue.showDashboardNotifications != null) {
                this.showDashboardNotifications = importValue.showDashboardNotifications;
            }
            if (importValue.showDashboardTodo != null) {
                this.showDashboardTodo = importValue.showDashboardTodo;
            }
            if (importValue.showDashboardBanner != null) {
                this.showDashboardBanner = importValue.showDashboardBanner;
            }
        }
        this.onConfigurationImported.next();
    }
    export(changesOnly = true) {
        const exportValue = {
            language: changesOnly ? this._language : this.language,
            themeId: changesOnly ? this._themeId : this.themeId,
            homeUrl: changesOnly ? this._homeUrl : this.homeUrl,
            showDashboardStatistics: changesOnly ? this._showDashboardStatistics : this.showDashboardStatistics,
            showDashboardNotifications: changesOnly ? this._showDashboardNotifications : this.showDashboardNotifications,
            showDashboardTodo: changesOnly ? this._showDashboardTodo : this.showDashboardTodo,
            showDashboardBanner: changesOnly ? this._showDashboardBanner : this.showDashboardBanner
        };
        return JSON.stringify(exportValue);
    }
    clearLocalChanges() {
        this._language = null;
        this._themeId = null;
        this._homeUrl = null;
        this._showDashboardStatistics = null;
        this._showDashboardNotifications = null;
        this._showDashboardTodo = null;
        this._showDashboardBanner = null;
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].LANGUAGE);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].THEME_ID);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].HOME_URL);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_STATISTICS);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_NOTIFICATIONS);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_TODO);
        this.localStorageService.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_6__["DbKeys"].SHOW_DASHBOARD_BANNER);
        this.resetLanguage();
        this.resetTheme();
    }
    resetLanguage() {
        const language = this.appTranslationService.useBrowserLanguage();
        if (language) {
            this._language = language;
        }
        else {
            this._language = this.appTranslationService.useDefaultLangage();
        }
    }
    resetTheme() {
        this.appThemeService.installTheme();
        this._themeId = null;
    }
};
ConfigurationService.ctorParameters = () => [
    { type: _local_storage_service__WEBPACK_IMPORTED_MODULE_5__["LocalStorageService"] },
    { type: _app_translation_service__WEBPACK_IMPORTED_MODULE_3__["AppTranslationService"] },
    { type: _app_theme_service__WEBPACK_IMPORTED_MODULE_4__["AppThemeService"] }
];
ConfigurationService.appVersion = '3.0.0';
// ***Specify default configurations here***
ConfigurationService.defaultLanguage = 'en';
ConfigurationService.defaultHomeUrl = '/';
ConfigurationService.defaultThemeId = 1;
ConfigurationService.defaultShowDashboardStatistics = true;
ConfigurationService.defaultShowDashboardNotifications = true;
ConfigurationService.defaultShowDashboardTodo = false;
ConfigurationService.defaultShowDashboardBanner = true;
ConfigurationService = ConfigurationService_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ConfigurationService);



/***/ }),

/***/ "./src/app/services/data-point.service.ts":
/*!************************************************!*\
  !*** ./src/app/services/data-point.service.ts ***!
  \************************************************/
/*! exports provided: DataPointService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointService", function() { return DataPointService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");



let DataPointService = class DataPointService {
    constructor(dataPointEndpointService) {
        this.dataPointEndpointService = dataPointEndpointService;
    }
    getDataPoints(getDisabled, pageNumber, pageSize) {
        if (getDisabled == null)
            getDisabled = false;
        return pageNumber && pageSize ? this.dataPointEndpointService.getAllPaged(pageNumber, pageSize, getDisabled) :
            this.dataPointEndpointService.getAll(getDisabled);
    }
    getDataPoint(dataPointId) {
        return this.dataPointEndpointService.get(dataPointId);
    }
    addDataPoint(dataPoint) {
        return this.dataPointEndpointService.post(dataPoint);
    }
    updateDataPoint(dataPoint) {
        return this.dataPointEndpointService.put(dataPoint.dataPointId, dataPoint);
    }
    patchDataPoint(dataPointId, dataPoint) {
        return this.dataPointEndpointService.patch(dataPointId, dataPoint);
    }
    deleteDataPoint(dataPointId) {
        return this.dataPointEndpointService.delete(dataPointId);
    }
};
DataPointService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["DataPointEndpointService"] }
];
DataPointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], DataPointService);



/***/ }),

/***/ "./src/app/services/endpoint.services.ts":
/*!***********************************************!*\
  !*** ./src/app/services/endpoint.services.ts ***!
  \***********************************************/
/*! exports provided: API_BASE_URL, AuthEndpointService, BaseEndpointService, AccountEndpointService, ActionDeviceEndpointService, DataPointEndpointService, EventConditionEndpointService, EventEndpointService, ExtendedLogEndpointService, NotificationEndpointService, ApplicationViewModelBase, UserBaseViewModel, UserViewModel, ProblemDetails, UserEditViewModel, OperationBase, Operation, RoleViewModel, PermissionViewModel, ActionDeviceViewModel, ActionDeviceTypes, EventViewModel, ActionDeviceStates, EventConditionViewModel, DataPointViewModel, Operators, ExtendedLogViewModel, NotificationViewModel, ServiceException, PermissionValues */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_BASE_URL", function() { return API_BASE_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthEndpointService", function() { return AuthEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseEndpointService", function() { return BaseEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountEndpointService", function() { return AccountEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeviceEndpointService", function() { return ActionDeviceEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointEndpointService", function() { return DataPointEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventConditionEndpointService", function() { return EventConditionEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventEndpointService", function() { return EventEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogEndpointService", function() { return ExtendedLogEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationEndpointService", function() { return NotificationEndpointService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationViewModelBase", function() { return ApplicationViewModelBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserBaseViewModel", function() { return UserBaseViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserViewModel", function() { return UserViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProblemDetails", function() { return ProblemDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserEditViewModel", function() { return UserEditViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationBase", function() { return OperationBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Operation", function() { return Operation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleViewModel", function() { return RoleViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionViewModel", function() { return PermissionViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeviceViewModel", function() { return ActionDeviceViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeviceTypes", function() { return ActionDeviceTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventViewModel", function() { return EventViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeviceStates", function() { return ActionDeviceStates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventConditionViewModel", function() { return EventConditionViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointViewModel", function() { return DataPointViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Operators", function() { return Operators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogViewModel", function() { return ExtendedLogViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationViewModel", function() { return NotificationViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceException", function() { return ServiceException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionValues", function() { return PermissionValues; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-oauth2-oidc */ "./node_modules/angular-oauth2-oidc/fesm2015/angular-oauth2-oidc.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./local-storage.service */ "./src/app/services/local-storage.service.ts");
/* harmony import */ var _configuration_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./configuration.service */ "./src/app/services/configuration.service.ts");
/* harmony import */ var _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/db-keys */ "./src/app/helpers/db-keys.ts");
/* harmony import */ var _helpers_jwt_helper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/jwt-helper */ "./src/app/helpers/jwt-helper.ts");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _auth_storage_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth-storage.service */ "./src/app/services/auth-storage.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.7.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming















const API_BASE_URL = new _angular_core__WEBPACK_IMPORTED_MODULE_11__["InjectionToken"]('API_BASE_URL');
let AuthEndpointService = class AuthEndpointService {
    constructor(router, oAuthService, configurations, localStorage) {
        this.router = router;
        this.oAuthService = oAuthService;
        this.configurations = configurations;
        this.localStorage = localStorage;
        this._discoveryDocUrl = '/.well-known/openid-configuration';
        this.previousIsLoggedInCheck = false;
        this._loginStatus = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.initializeLoginStatus();
    }
    get discoveryDocUrl() { return this.configurations.tokenUrl + this._discoveryDocUrl; }
    get baseUrl() { return this.configurations.baseUrl; }
    get loginUrl() { return this.configurations.loginUrl; }
    get homeUrl() { return this.configurations.homeUrl; }
    initializeLoginStatus() {
        this.localStorage.getInitEvent().subscribe(() => {
            this.reevaluateLoginStatus();
        });
    }
    gotoPage(page, preserveParams = true) {
        const navigationExtras = {
            queryParamsHandling: preserveParams ? 'merge' : '', preserveFragment: preserveParams
        };
        this.router.navigate([page], navigationExtras);
    }
    gotoHomePage() {
        this.router.navigate([this.homeUrl]);
    }
    redirectLoginUser() {
        const redirect = this.loginRedirectUrl && this.loginRedirectUrl != '/' && this.loginRedirectUrl != _configuration_service__WEBPACK_IMPORTED_MODULE_6__["ConfigurationService"].defaultHomeUrl ? this.loginRedirectUrl : this.homeUrl;
        this.loginRedirectUrl = null;
        const urlParamsAndFragment = _helpers_utilities__WEBPACK_IMPORTED_MODULE_9__["Utilities"].splitInTwo(redirect, '#');
        const urlAndParams = _helpers_utilities__WEBPACK_IMPORTED_MODULE_9__["Utilities"].splitInTwo(urlParamsAndFragment.firstPart, '?');
        const navigationExtras = {
            fragment: urlParamsAndFragment.secondPart,
            queryParams: _helpers_utilities__WEBPACK_IMPORTED_MODULE_9__["Utilities"].getQueryParamsFromString(urlAndParams.secondPart),
            queryParamsHandling: 'merge'
        };
        this.router.navigate([urlAndParams.firstPart], navigationExtras);
    }
    redirectLogoutUser() {
        const redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;
        this.logoutRedirectUrl = null;
        this.router.navigate([redirect]);
    }
    redirectForLogin() {
        this.loginRedirectUrl = this.router.url;
        this.router.navigate([this.loginUrl]);
    }
    reLogin() {
        if (this.reLoginDelegate) {
            this.reLoginDelegate();
        }
        else {
            this.redirectForLogin();
        }
    }
    refreshLogin() {
        if (this.oAuthService.discoveryDocumentLoaded) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.oAuthService.refreshToken()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(() => this.processLoginResponse(this.oAuthService.getAccessToken(), this.rememberMe)));
        }
        else {
            this.configureOauthService(this.rememberMe);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.oAuthService.loadDiscoveryDocument(this.discoveryDocUrl))
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(() => this.refreshLogin()));
        }
    }
    login(userName, password, rememberMe) {
        if (this.isLoggedIn) {
            this.logout();
        }
        this.configureOauthService(rememberMe);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.oAuthService.loadDiscoveryDocument(this.discoveryDocUrl)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(() => {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.oAuthService.fetchTokenUsingPasswordFlow(userName, password)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(() => this.processLoginResponse(this.oAuthService.getAccessToken(), rememberMe)));
        }));
    }
    configureOauthService(rememberMe) {
        this.oAuthService.issuer = this.baseUrl;
        this.oAuthService.clientId = 'growroom_web';
        this.oAuthService.scope = 'openid email phone profile offline_access roles growroom_api';
        this.oAuthService.skipSubjectCheck = true;
        this.oAuthService.dummyClientSecret = 'not_used';
        _auth_storage_service__WEBPACK_IMPORTED_MODULE_10__["AuthStorageService"].RememberMe = rememberMe;
    }
    processLoginResponse(accessToken, rememberMe) {
        if (accessToken == null) {
            throw new Error('accessToken cannot be null');
        }
        const jwtHelper = new _helpers_jwt_helper__WEBPACK_IMPORTED_MODULE_8__["JwtHelper"]();
        const decodedAccessToken = jwtHelper.decodeToken(accessToken);
        const permissions = Array.isArray(decodedAccessToken.permission) ? decodedAccessToken.permission : [decodedAccessToken.permission];
        if (!this.isLoggedIn) {
            this.configurations.import(decodedAccessToken.configuration);
        }
        const user = new UserViewModel();
        user.id = decodedAccessToken.sub;
        user.userName = decodedAccessToken.name;
        user.fullName = decodedAccessToken.fullname;
        user.email = decodedAccessToken.email;
        user.jobTitle = decodedAccessToken.jobtitle;
        user.phoneNumber = decodedAccessToken.phone_number;
        user.roles = Array.isArray(decodedAccessToken.role) ? decodedAccessToken.role : [decodedAccessToken.role];
        user.isEnabled = true;
        this.saveUserDetails(user, permissions, rememberMe);
        this.reevaluateLoginStatus(user);
        return user;
    }
    saveUserDetails(user, permissions, rememberMe) {
        if (rememberMe) {
            this.localStorage.savePermanentData(permissions, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].USER_PERMISSIONS);
            this.localStorage.savePermanentData(user, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].CURRENT_USER);
        }
        else {
            this.localStorage.saveSyncedSessionData(permissions, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].USER_PERMISSIONS);
            this.localStorage.saveSyncedSessionData(user, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].CURRENT_USER);
        }
        this.localStorage.savePermanentData(rememberMe, _helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].REMEMBER_ME);
    }
    logout() {
        this.localStorage.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].USER_PERMISSIONS);
        this.localStorage.deleteData(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].CURRENT_USER);
        this.configurations.clearLocalChanges();
        this.oAuthService.logOut(true);
        this.reevaluateLoginStatus();
    }
    reevaluateLoginStatus(currentUser) {
        const user = currentUser || this.localStorage.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].CURRENT_USER);
        const isLoggedIn = user != null;
        if (this.previousIsLoggedInCheck != isLoggedIn) {
            setTimeout(() => {
                this._loginStatus.next(isLoggedIn);
            });
        }
        this.previousIsLoggedInCheck = isLoggedIn;
    }
    getLoginStatusEvent() {
        return this._loginStatus.asObservable();
    }
    get currentUser() {
        const user = this.localStorage.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].CURRENT_USER);
        this.reevaluateLoginStatus(user);
        return user;
    }
    get userPermissions() {
        return this.localStorage.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].USER_PERMISSIONS) || [];
    }
    get accessToken() {
        return this.oAuthService.getAccessToken();
    }
    get accessTokenExpiryDate() {
        return new Date(this.oAuthService.getAccessTokenExpiration());
    }
    get isSessionExpired() {
        if (this.accessTokenExpiryDate == null) {
            return true;
        }
        return this.accessTokenExpiryDate.valueOf() <= new Date().valueOf();
    }
    get refreshToken() {
        return this.oAuthService.getRefreshToken();
    }
    get isLoggedIn() {
        return this.currentUser != null;
    }
    get rememberMe() {
        return this.localStorage.getDataObject(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_7__["DbKeys"].REMEMBER_ME) == true;
    }
};
AuthEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_4__["OAuthService"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_configuration_service__WEBPACK_IMPORTED_MODULE_6__["ConfigurationService"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_local_storage_service__WEBPACK_IMPORTED_MODULE_5__["LocalStorageService"]))
], AuthEndpointService);

class BaseEndpointService {
    constructor(authEndpointService) {
        this.authEndpointService = authEndpointService;
    }
    getBaseUrl(defaultUrl) {
        return this.authEndpointService.baseUrl;
    }
    transformOptions(options) {
        options.headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
            Authorization: 'Bearer ' + this.authEndpointService.accessToken,
            'Content-Type': 'application/json',
            Accept: 'application/json, text/plain, */*'
        });
        return Promise.resolve(options);
    }
    transformResult(url, response, processResponse) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(processResponse(response)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(error => {
            return this.handleError(error, () => processResponse(response));
        }));
    }
    refreshLogin() {
        return this.authEndpointService.refreshLogin().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(error => {
            return this.handleError(error, () => this.refreshLogin());
        }));
    }
    handleError(error, continuation) {
        if (error.status == 401) {
            if (this.isRefreshingLogin) {
                return this.pauseTask(continuation);
            }
            this.isRefreshingLogin = true;
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.authEndpointService.refreshLogin()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(() => {
                this.isRefreshingLogin = false;
                this.resumeTasks(true);
                return continuation();
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(refreshLoginError => {
                this.isRefreshingLogin = false;
                this.resumeTasks(false);
                this.authEndpointService.reLogin();
                if (refreshLoginError.status == 401 || (refreshLoginError.error && refreshLoginError.error.error == 'invalid_grant')) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])('session expired');
                }
                else {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(refreshLoginError || 'server error');
                }
            }));
        }
        if (error.error && error.error.error == 'invalid_grant') {
            this.authEndpointService.reLogin();
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])((error.error && error.error.error_description) ? `session expired (${error.error.error_description})` : 'session expired');
        }
        else {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(error);
        }
    }
    pauseTask(continuation) {
        if (!this.taskPauser) {
            this.taskPauser = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        }
        return this.taskPauser.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(continueOp => {
            return continueOp ? continuation() : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])('session expired');
        }));
    }
    resumeTasks(continueOp) {
        setTimeout(() => {
            if (this.taskPauser) {
                this.taskPauser.next(continueOp);
                this.taskPauser.complete();
                this.taskPauser = null;
            }
        });
    }
}
let AccountEndpointService = class AccountEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getCurrentUser() {
        let url_ = this.baseUrl + "/api/Account/users/me";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetCurrentUser(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetCurrentUser(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCurrentUser(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    updateCurrentUser(user) {
        let url_ = this.baseUrl + "/api/Account/users/me";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(user);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUpdateCurrentUser(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUpdateCurrentUser(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCurrentUser(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    updateCurrentUser2(patch) {
        let url_ = this.baseUrl + "/api/Account/users/me";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUpdateCurrentUser2(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUpdateCurrentUser2(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCurrentUser2(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getUserById(id) {
        let url_ = this.baseUrl + "/api/Account/users/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetUserById(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetUserById(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetUserById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    updateUser(id, user) {
        let url_ = this.baseUrl + "/api/Account/users/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(user);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUpdateUser(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUpdateUser(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateUser(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    updateUser2(id, patch) {
        let url_ = this.baseUrl + "/api/Account/users/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUpdateUser2(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUpdateUser2(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateUser2(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    deleteUser(id) {
        let url_ = this.baseUrl + "/api/Account/users/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDeleteUser(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDeleteUser(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteUser(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getUserByUserName(userName) {
        let url_ = this.baseUrl + "/api/Account/users/username/{userName}";
        if (userName === undefined || userName === null)
            throw new Error("The parameter 'userName' must be defined.");
        url_ = url_.replace("{userName}", encodeURIComponent("" + userName));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetUserByUserName(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetUserByUserName(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetUserByUserName(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getUsersAll() {
        let url_ = this.baseUrl + "/api/Account/users";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetUsersAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetUsersAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetUsersAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UserViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    register(user) {
        let url_ = this.baseUrl + "/api/Account/users";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(user);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processRegister(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processRegister(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processRegister(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = UserViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getUsers(pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/Account/users/{pageNumber}/{pageSize}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetUsers(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetUsers(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetUsers(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UserViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    unblockUser(id) {
        let url_ = this.baseUrl + "/api/Account/users/unblock/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({})
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUnblockUser(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUnblockUser(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUnblockUser(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    userPreferences() {
        let url_ = this.baseUrl + "/api/Account/users/me/preferences";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUserPreferences(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUserPreferences(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUserPreferences(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    userPreferences2(data) {
        let url_ = this.baseUrl + "/api/Account/users/me/preferences";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(data);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUserPreferences2(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUserPreferences2(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUserPreferences2(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getRoleById(id) {
        let url_ = this.baseUrl + "/api/Account/roles/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetRoleById(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetRoleById(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoleById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    updateRole(id, role) {
        let url_ = this.baseUrl + "/api/Account/roles/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(role);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processUpdateRole(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processUpdateRole(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateRole(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    deleteRole(id) {
        let url_ = this.baseUrl + "/api/Account/roles/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDeleteRole(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDeleteRole(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteRole(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getRoleByName(name) {
        let url_ = this.baseUrl + "/api/Account/roles/name/{name}";
        if (name === undefined || name === null)
            throw new Error("The parameter 'name' must be defined.");
        url_ = url_.replace("{name}", encodeURIComponent("" + name));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetRoleByName(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetRoleByName(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoleByName(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 403) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result403 = null;
                let resultData403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result403 = ProblemDetails.fromJS(resultData403);
                return throwException("A server side error occurred.", status, _responseText, _headers, result403);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getRolesAll() {
        let url_ = this.baseUrl + "/api/Account/roles";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetRolesAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetRolesAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRolesAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(RoleViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    createRole(role) {
        let url_ = this.baseUrl + "/api/Account/roles";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(role);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processCreateRole(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processCreateRole(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreateRole(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = RoleViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getRoles(pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/Account/roles/{pageNumber}/{pageSize}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetRoles(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetRoles(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoles(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(RoleViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPermissions() {
        let url_ = this.baseUrl + "/api/Account/permissions";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPermissions(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPermissions(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPermissions(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(PermissionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
AccountEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
AccountEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], AccountEndpointService);

let ActionDeviceEndpointService = class ActionDeviceEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll(getDisabled) {
        let url_ = this.baseUrl + "/api/ActionDevice/{getDisabled}";
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ActionDeviceViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize, getDisabled) {
        let url_ = this.baseUrl + "/api/ActionDevice/{pageNumber}/{pageSize}/{getDisabled}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ActionDeviceViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(actionDeviceId) {
        let url_ = this.baseUrl + "/api/ActionDevice/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ActionDeviceViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(actionDeviceId) {
        let url_ = this.baseUrl + "/api/ActionDevice/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ActionDeviceViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(actionDeviceId, actionDeviceVM) {
        let url_ = this.baseUrl + "/api/ActionDevice/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(actionDeviceVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(actionDeviceId, patch) {
        let url_ = this.baseUrl + "/api/ActionDevice/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(actionDeviceVM) {
        let url_ = this.baseUrl + "/api/ActionDevice";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(actionDeviceVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = ActionDeviceViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    putState(actionDeviceId, state) {
        let url_ = this.baseUrl + "/api/ActionDevice/SetState/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(state);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPutState(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPutState(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPutState(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
ActionDeviceEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
ActionDeviceEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], ActionDeviceEndpointService);

let DataPointEndpointService = class DataPointEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll(getDisabled) {
        let url_ = this.baseUrl + "/api/DataPoint/{getDisabled}";
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(DataPointViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize, getDisabled) {
        let url_ = this.baseUrl + "/api/DataPoint/{pageNumber}/{pageSize}/{getDisabled}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(DataPointViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(dataPointId) {
        let url_ = this.baseUrl + "/api/DataPoint/{dataPointId}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DataPointViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(dataPointId) {
        let url_ = this.baseUrl + "/api/DataPoint/{dataPointId}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DataPointViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(dataPointId, dataPointVM) {
        let url_ = this.baseUrl + "/api/DataPoint/{dataPointId}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(dataPointVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(dataPointId, patch) {
        let url_ = this.baseUrl + "/api/DataPoint/{dataPointId}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(dataPointVM) {
        let url_ = this.baseUrl + "/api/DataPoint";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(dataPointVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = DataPointViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
DataPointEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
DataPointEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], DataPointEndpointService);

let EventConditionEndpointService = class EventConditionEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll() {
        let url_ = this.baseUrl + "/api/EventCondition";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(eventConditionVM) {
        let url_ = this.baseUrl + "/api/EventCondition";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(eventConditionVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = EventConditionViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/EventCondition/{pageNumber}/{pageSize}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(eventConditionId) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventConditionId}";
        if (eventConditionId === undefined || eventConditionId === null)
            throw new Error("The parameter 'eventConditionId' must be defined.");
        url_ = url_.replace("{eventConditionId}", encodeURIComponent("" + eventConditionId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventConditionViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(eventConditionId) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventConditionId}";
        if (eventConditionId === undefined || eventConditionId === null)
            throw new Error("The parameter 'eventConditionId' must be defined.");
        url_ = url_.replace("{eventConditionId}", encodeURIComponent("" + eventConditionId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventConditionViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(eventConditionId, eventConditionVM) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventConditionId}";
        if (eventConditionId === undefined || eventConditionId === null)
            throw new Error("The parameter 'eventConditionId' must be defined.");
        url_ = url_.replace("{eventConditionId}", encodeURIComponent("" + eventConditionId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(eventConditionVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventConditionViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(eventConditionId, patch) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventConditionId}";
        if (eventConditionId === undefined || eventConditionId === null)
            throw new Error("The parameter 'eventConditionId' must be defined.");
        url_ = url_.replace("{eventConditionId}", encodeURIComponent("" + eventConditionId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventConditionViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByEventId(eventId) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventId}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByEventId(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByEventId(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByEventId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByEventIdPaged(eventId, pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/EventCondition/{eventId}/{pageNumber}/{pageSize}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByEventIdPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByEventIdPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByEventIdPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByDataPointId(dataPointId) {
        let url_ = this.baseUrl + "/api/EventCondition/{dataPointId}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByDataPointId(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByDataPointId(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByDataPointId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByDataPointIdPaged(dataPointId, pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/EventCondition/{dataPointId}/{pageNumber}/{pageSize}";
        if (dataPointId === undefined || dataPointId === null)
            throw new Error("The parameter 'dataPointId' must be defined.");
        url_ = url_.replace("{dataPointId}", encodeURIComponent("" + dataPointId));
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByDataPointIdPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByDataPointIdPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByDataPointIdPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventConditionViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
EventConditionEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
EventConditionEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], EventConditionEndpointService);

let EventEndpointService = class EventEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll(getDisabled) {
        let url_ = this.baseUrl + "/api/Event/{getDisabled}";
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize, getDisabled) {
        let url_ = this.baseUrl + "/api/Event/{pageNumber}/{pageSize}/{getDisabled}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        if (getDisabled === undefined || getDisabled === null)
            throw new Error("The parameter 'getDisabled' must be defined.");
        url_ = url_.replace("{getDisabled}", encodeURIComponent("" + getDisabled));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByActionDeviceId(actionDeviceId) {
        let url_ = this.baseUrl + "/api/Event/{actionDeviceId}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByActionDeviceId(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByActionDeviceId(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByActionDeviceId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByActionDeviceIdPaged(actionDeviceId, pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/Event/{actionDeviceId}/{pageNumber}/{pageSize}";
        if (actionDeviceId === undefined || actionDeviceId === null)
            throw new Error("The parameter 'actionDeviceId' must be defined.");
        url_ = url_.replace("{actionDeviceId}", encodeURIComponent("" + actionDeviceId));
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByActionDeviceIdPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByActionDeviceIdPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByActionDeviceIdPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(EventViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(eventId) {
        let url_ = this.baseUrl + "/api/Event/{eventId}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(eventId) {
        let url_ = this.baseUrl + "/api/Event/{eventId}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(eventId, eventVM) {
        let url_ = this.baseUrl + "/api/Event/{eventId}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(eventVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(eventId, patch) {
        let url_ = this.baseUrl + "/api/Event/{eventId}";
        if (eventId === undefined || eventId === null)
            throw new Error("The parameter 'eventId' must be defined.");
        url_ = url_.replace("{eventId}", encodeURIComponent("" + eventId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EventViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(eventVM) {
        let url_ = this.baseUrl + "/api/Event";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(eventVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = EventViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
EventEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
EventEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], EventEndpointService);

let ExtendedLogEndpointService = class ExtendedLogEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll() {
        let url_ = this.baseUrl + "/api/ExtendedLog";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ExtendedLogViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    deleteAll() {
        let url_ = this.baseUrl + "/api/ExtendedLog";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({})
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDeleteAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDeleteAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(extendedLogVM) {
        let url_ = this.baseUrl + "/api/ExtendedLog";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(extendedLogVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = ExtendedLogViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/ExtendedLog/{pageNumber}/{pageSize}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ExtendedLogViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByLevel(level) {
        let url_ = this.baseUrl + "/api/ExtendedLog/level/{level}";
        if (level === undefined || level === null)
            throw new Error("The parameter 'level' must be defined.");
        url_ = url_.replace("{level}", encodeURIComponent("" + level));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByLevel(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByLevel(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByLevel(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ExtendedLogViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getByLevelPaged(level, pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/ExtendedLog/level/{level}/{pageNumber}/{pageSize}";
        if (level === undefined || level === null)
            throw new Error("The parameter 'level' must be defined.");
        url_ = url_.replace("{level}", encodeURIComponent("" + level));
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetByLevelPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetByLevelPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetByLevelPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ExtendedLogViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(id) {
        let url_ = this.baseUrl + "/api/ExtendedLog/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExtendedLogViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(id) {
        let url_ = this.baseUrl + "/api/ExtendedLog/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExtendedLogViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(id, extendedLogVM) {
        let url_ = this.baseUrl + "/api/ExtendedLog/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(extendedLogVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(id, patch) {
        let url_ = this.baseUrl + "/api/ExtendedLog/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
ExtendedLogEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
ExtendedLogEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], ExtendedLogEndpointService);

let NotificationEndpointService = class NotificationEndpointService extends BaseEndpointService {
    constructor(configuration, http, baseUrl) {
        super(configuration);
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl ? baseUrl : this.getBaseUrl("");
    }
    getAll() {
        let url_ = this.baseUrl + "/api/Notification";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAll(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAll(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(NotificationViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    post(notificationVM) {
        let url_ = this.baseUrl + "/api/Notification";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(notificationVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("post", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPost(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPost(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPost(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 201) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result201 = null;
                let resultData201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result201 = NotificationViewModel.fromJS(resultData201);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result201);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    getAllPaged(pageNumber, pageSize) {
        let url_ = this.baseUrl + "/api/Notification/{pageNumber}/{pageSize}";
        if (pageNumber === undefined || pageNumber === null)
            throw new Error("The parameter 'pageNumber' must be defined.");
        url_ = url_.replace("{pageNumber}", encodeURIComponent("" + pageNumber));
        if (pageSize === undefined || pageSize === null)
            throw new Error("The parameter 'pageSize' must be defined.");
        url_ = url_.replace("{pageSize}", encodeURIComponent("" + pageSize));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGetAllPaged(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPaged(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(NotificationViewModel.fromJS(item));
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    get(notificationId) {
        let url_ = this.baseUrl + "/api/Notification/{notificationId}";
        if (notificationId === undefined || notificationId === null)
            throw new Error("The parameter 'notificationId' must be defined.");
        url_ = url_.replace("{notificationId}", encodeURIComponent("" + notificationId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("get", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processGet(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processGet(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = NotificationViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    delete(notificationId) {
        let url_ = this.baseUrl + "/api/Notification/{notificationId}";
        if (notificationId === undefined || notificationId === null)
            throw new Error("The parameter 'notificationId' must be defined.");
        url_ = url_.replace("{notificationId}", encodeURIComponent("" + notificationId));
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Accept": "application/json"
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("delete", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processDelete(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processDelete(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result200 = null;
                let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = NotificationViewModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status === 404) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result404 = null;
                let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result404 = ProblemDetails.fromJS(resultData404);
                return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    put(notificationId, notificationVM) {
        let url_ = this.baseUrl + "/api/Notification/{notificationId}";
        if (notificationId === undefined || notificationId === null)
            throw new Error("The parameter 'notificationId' must be defined.");
        url_ = url_.replace("{notificationId}", encodeURIComponent("" + notificationId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(notificationVM);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("put", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPut(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPut(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPut(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    patch(notificationId, patch) {
        let url_ = this.baseUrl + "/api/Notification/{notificationId}";
        if (notificationId === undefined || notificationId === null)
            throw new Error("The parameter 'notificationId' must be defined.");
        url_ = url_.replace("{notificationId}", encodeURIComponent("" + notificationId));
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(patch);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"]({
                "Content-Type": "application/json",
            })
        };
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(this.transformOptions(options_)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(transformedOptions_ => {
            return this.http.request("patch", url_, transformedOptions_);
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])((response_) => {
            return this.transformResult(url_, response_, (r) => this.processPatch(r));
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponseBase"]) {
                try {
                    return this.transformResult(url_, response_, (r) => this.processPatch(r));
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPatch(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpResponse"] ? response.body :
            response.error instanceof Blob ? response.error : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        ;
        if (status === 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status === 400) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                let result400 = null;
                let resultData400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
                result400 = ProblemDetails.fromJS(resultData400);
                return throwException("A server side error occurred.", status, _responseText, _headers, result400);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(_responseText => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
};
NotificationEndpointService.ctorParameters = () => [
    { type: AuthEndpointService, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [AuthEndpointService,] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"], args: [API_BASE_URL,] }] }
];
NotificationEndpointService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(AuthEndpointService)), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"])), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"])()), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"])(API_BASE_URL))
], NotificationEndpointService);

class ApplicationViewModelBase {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.createdBy = _data["createdBy"];
            this.updatedBy = _data["updatedBy"];
            this.updatedDate = _data["updatedDate"] ? new Date(_data["updatedDate"].toString()) : undefined;
            this.createdDate = _data["createdDate"] ? new Date(_data["createdDate"].toString()) : undefined;
            this.rowVersion = _data["rowVersion"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ApplicationViewModelBase' cannot be instantiated.");
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["createdBy"] = this.createdBy;
        data["updatedBy"] = this.updatedBy;
        data["updatedDate"] = this.updatedDate ? this.updatedDate.toISOString() : undefined;
        data["createdDate"] = this.createdDate ? this.createdDate.toISOString() : undefined;
        data["rowVersion"] = this.rowVersion;
        return data;
    }
    clone() {
        throw new Error("The abstract class 'ApplicationViewModelBase' cannot be instantiated.");
    }
}
class UserBaseViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
            this.userName = _data["userName"];
            this.fullName = _data["fullName"];
            this.email = _data["email"];
            this.jobTitle = _data["jobTitle"];
            this.phoneNumber = _data["phoneNumber"];
            this.configuration = _data["configuration"];
            this.isEnabled = _data["isEnabled"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'UserBaseViewModel' cannot be instantiated.");
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["userName"] = this.userName;
        data["fullName"] = this.fullName;
        data["email"] = this.email;
        data["jobTitle"] = this.jobTitle;
        data["phoneNumber"] = this.phoneNumber;
        data["configuration"] = this.configuration;
        data["isEnabled"] = this.isEnabled;
        super.toJSON(data);
        return data;
    }
    clone() {
        throw new Error("The abstract class 'UserBaseViewModel' cannot be instantiated.");
    }
}
class UserViewModel extends UserBaseViewModel {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.isLockedOut = _data["isLockedOut"];
            if (Array.isArray(_data["roles"])) {
                this.roles = [];
                for (let item of _data["roles"])
                    this.roles.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new UserViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["isLockedOut"] = this.isLockedOut;
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item);
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserViewModel();
        result.init(json);
        return result;
    }
}
class ProblemDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.type = _data["type"];
            this.title = _data["title"];
            this.status = _data["status"];
            this.detail = _data["detail"];
            this.instance = _data["instance"];
            if (_data["extensions"]) {
                this.extensions = {};
                for (let key in _data["extensions"]) {
                    if (_data["extensions"].hasOwnProperty(key))
                        this.extensions[key] = _data["extensions"][key];
                }
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new ProblemDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["type"] = this.type;
        data["title"] = this.title;
        data["status"] = this.status;
        data["detail"] = this.detail;
        data["instance"] = this.instance;
        if (this.extensions) {
            data["extensions"] = {};
            for (let key in this.extensions) {
                if (this.extensions.hasOwnProperty(key))
                    data["extensions"][key] = this.extensions[key];
            }
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ProblemDetails();
        result.init(json);
        return result;
    }
}
class UserEditViewModel extends UserBaseViewModel {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.currentPassword = _data["currentPassword"];
            this.newPassword = _data["newPassword"];
            if (Array.isArray(_data["roles"])) {
                this.roles = [];
                for (let item of _data["roles"])
                    this.roles.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new UserEditViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["currentPassword"] = this.currentPassword;
        data["newPassword"] = this.newPassword;
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item);
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserEditViewModel();
        result.init(json);
        return result;
    }
}
class OperationBase {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.path = _data["path"];
            this.op = _data["op"];
            this.from = _data["from"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new OperationBase();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["path"] = this.path;
        data["op"] = this.op;
        data["from"] = this.from;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new OperationBase();
        result.init(json);
        return result;
    }
}
class Operation extends OperationBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.value = _data["value"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new Operation();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["value"] = this.value;
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Operation();
        result.init(json);
        return result;
    }
}
class RoleViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.description = _data["description"];
            this.usersCount = _data["usersCount"];
            if (Array.isArray(_data["permissions"])) {
                this.permissions = [];
                for (let item of _data["permissions"])
                    this.permissions.push(PermissionViewModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new RoleViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["description"] = this.description;
        data["usersCount"] = this.usersCount;
        if (Array.isArray(this.permissions)) {
            data["permissions"] = [];
            for (let item of this.permissions)
                data["permissions"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleViewModel();
        result.init(json);
        return result;
    }
}
class PermissionViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.name = _data["name"];
            this.value = _data["value"];
            this.groupName = _data["groupName"];
            this.description = _data["description"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new PermissionViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name;
        data["value"] = this.value;
        data["groupName"] = this.groupName;
        data["description"] = this.description;
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PermissionViewModel();
        result.init(json);
        return result;
    }
}
class ActionDeviceViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.actionDeviceId = _data["actionDeviceId"];
            this.name = _data["name"];
            this.type = _data["type"];
            this.typeDescription = _data["typeDescription"];
            this.parameters = _data["parameters"];
            this.isEnabled = _data["isEnabled"];
            if (Array.isArray(_data["events"])) {
                this.events = [];
                for (let item of _data["events"])
                    this.events.push(EventViewModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new ActionDeviceViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["actionDeviceId"] = this.actionDeviceId;
        data["name"] = this.name;
        data["type"] = this.type;
        data["typeDescription"] = this.typeDescription;
        data["parameters"] = this.parameters;
        data["isEnabled"] = this.isEnabled;
        if (Array.isArray(this.events)) {
            data["events"] = [];
            for (let item of this.events)
                data["events"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ActionDeviceViewModel();
        result.init(json);
        return result;
    }
}
/** 0 = X10 1 = ZWave 2 = ZeeBee 3 = iHome 4 = WiFi */
var ActionDeviceTypes;
(function (ActionDeviceTypes) {
    ActionDeviceTypes[ActionDeviceTypes["X10"] = 0] = "X10";
    ActionDeviceTypes[ActionDeviceTypes["ZWave"] = 1] = "ZWave";
    ActionDeviceTypes[ActionDeviceTypes["ZeeBee"] = 2] = "ZeeBee";
    ActionDeviceTypes[ActionDeviceTypes["IHome"] = 3] = "IHome";
    ActionDeviceTypes[ActionDeviceTypes["WiFi"] = 4] = "WiFi";
})(ActionDeviceTypes || (ActionDeviceTypes = {}));
class EventViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.eventId = _data["eventId"];
            this.name = _data["name"];
            this.actionDeviceId = _data["actionDeviceId"];
            this.actionDevice = _data["actionDevice"] ? ActionDeviceViewModel.fromJS(_data["actionDevice"]) : undefined;
            this.state = _data["state"];
            this.stateDescription = _data["stateDescription"];
            this.isEnabled = _data["isEnabled"];
            if (Array.isArray(_data["eventConditions"])) {
                this.eventConditions = [];
                for (let item of _data["eventConditions"])
                    this.eventConditions.push(EventConditionViewModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new EventViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["eventId"] = this.eventId;
        data["name"] = this.name;
        data["actionDeviceId"] = this.actionDeviceId;
        data["actionDevice"] = this.actionDevice ? this.actionDevice.toJSON() : undefined;
        data["state"] = this.state;
        data["stateDescription"] = this.stateDescription;
        data["isEnabled"] = this.isEnabled;
        if (Array.isArray(this.eventConditions)) {
            data["eventConditions"] = [];
            for (let item of this.eventConditions)
                data["eventConditions"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EventViewModel();
        result.init(json);
        return result;
    }
}
/** 0 = Off 1 = On */
var ActionDeviceStates;
(function (ActionDeviceStates) {
    ActionDeviceStates[ActionDeviceStates["Off"] = 0] = "Off";
    ActionDeviceStates[ActionDeviceStates["On"] = 1] = "On";
})(ActionDeviceStates || (ActionDeviceStates = {}));
class EventConditionViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.eventConditionId = _data["eventConditionId"];
            this.eventId = _data["eventId"];
            this.event = _data["event"] ? EventViewModel.fromJS(_data["event"]) : undefined;
            this.dataPointId = _data["dataPointId"];
            this.dataPoint = _data["dataPoint"] ? DataPointViewModel.fromJS(_data["dataPoint"]) : undefined;
            this.operator = _data["operator"];
            this.operatorDescription = _data["operatorDescription"];
            this.value = _data["value"];
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new EventConditionViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["eventConditionId"] = this.eventConditionId;
        data["eventId"] = this.eventId;
        data["event"] = this.event ? this.event.toJSON() : undefined;
        data["dataPointId"] = this.dataPointId;
        data["dataPoint"] = this.dataPoint ? this.dataPoint.toJSON() : undefined;
        data["operator"] = this.operator;
        data["operatorDescription"] = this.operatorDescription;
        data["value"] = this.value;
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EventConditionViewModel();
        result.init(json);
        return result;
    }
}
class DataPointViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.dataPointId = _data["dataPointId"];
            this.name = _data["name"];
            this.isEnabled = _data["isEnabled"];
            if (Array.isArray(_data["eventConditions"])) {
                this.eventConditions = [];
                for (let item of _data["eventConditions"])
                    this.eventConditions.push(EventConditionViewModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new DataPointViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["dataPointId"] = this.dataPointId;
        data["name"] = this.name;
        data["isEnabled"] = this.isEnabled;
        if (Array.isArray(this.eventConditions)) {
            data["eventConditions"] = [];
            for (let item of this.eventConditions)
                data["eventConditions"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DataPointViewModel();
        result.init(json);
        return result;
    }
}
/** 0 = Equal 1 = NotEqual 2 = GreaterThan 3 = LessThan */
var Operators;
(function (Operators) {
    Operators[Operators["Equal"] = 0] = "Equal";
    Operators[Operators["NotEqual"] = 1] = "NotEqual";
    Operators[Operators["GreaterThan"] = 2] = "GreaterThan";
    Operators[Operators["LessThan"] = 3] = "LessThan";
})(Operators || (Operators = {}));
class ExtendedLogViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.browser = _data["browser"];
            this.host = _data["host"];
            this.path = _data["path"];
            this.user = _data["user"];
            this.eventId = _data["eventId"];
            this.id = _data["id"];
            this.level = _data["level"];
            this.levelDescription = _data["levelDescription"];
            this.message = _data["message"];
            this.name = _data["name"];
            this.method = _data["method"];
            this.statusCode = _data["statusCode"];
            this.serverVariables = _data["serverVariables"];
            this.cookies = _data["cookies"];
            this.formVariables = _data["formVariables"];
            this.queryString = _data["queryString"];
            this.timeStamp = _data["timeStamp"] ? new Date(_data["timeStamp"].toString()) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new ExtendedLogViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["browser"] = this.browser;
        data["host"] = this.host;
        data["path"] = this.path;
        data["user"] = this.user;
        data["eventId"] = this.eventId;
        data["id"] = this.id;
        data["level"] = this.level;
        data["levelDescription"] = this.levelDescription;
        data["message"] = this.message;
        data["name"] = this.name;
        data["method"] = this.method;
        data["statusCode"] = this.statusCode;
        data["serverVariables"] = this.serverVariables;
        data["cookies"] = this.cookies;
        data["formVariables"] = this.formVariables;
        data["queryString"] = this.queryString;
        data["timeStamp"] = this.timeStamp ? this.timeStamp.toISOString() : undefined;
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExtendedLogViewModel();
        result.init(json);
        return result;
    }
}
class NotificationViewModel extends ApplicationViewModelBase {
    constructor(data) {
        super(data);
    }
    init(_data) {
        super.init(_data);
        if (_data) {
            this.notificationId = _data["notificationId"];
            this.header = _data["header"];
            this.body = _data["body"];
            this.isRead = _data["isRead"];
            this.isPinned = _data["isPinned"];
            this.date = _data["date"] ? new Date(_data["date"].toString()) : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === 'object' ? data : {};
        let result = new NotificationViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === 'object' ? data : {};
        data["notificationId"] = this.notificationId;
        data["header"] = this.header;
        data["body"] = this.body;
        data["isRead"] = this.isRead;
        data["isPinned"] = this.isPinned;
        data["date"] = this.date ? this.date.toISOString() : undefined;
        super.toJSON(data);
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new NotificationViewModel();
        result.init(json);
        return result;
    }
}
class ServiceException extends Error {
    constructor(message, status, response, headers, result) {
        super();
        this.isServiceException = true;
        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }
    static isServiceException(obj) {
        return obj.isServiceException === true;
    }
}
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(result);
    else
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(new ServiceException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"]((observer) => {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            let reader = new FileReader();
            reader.onload = event => {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
class PermissionValues {
}
PermissionValues.ViewLogs = 'logs.view';
PermissionValues.ManageLogs = 'logs.manage';
PermissionValues.ViewEvents = 'events.view';
PermissionValues.ManageEvents = 'events.manage';
PermissionValues.ExecuteEvents = 'events.execute';
PermissionValues.ViewUsers = 'users.view';
PermissionValues.ManageUsers = 'users.manage';
PermissionValues.ViewRoles = 'roles.view';
PermissionValues.ManageRoles = 'roles.manage';
PermissionValues.AssignRoles = 'roles.assign';


/***/ }),

/***/ "./src/app/services/event-condition.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/services/event-condition.service.ts ***!
  \*****************************************************/
/*! exports provided: EventConditionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventConditionService", function() { return EventConditionService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");



let EventConditionService = class EventConditionService {
    constructor(eventConditionEndpointService) {
        this.eventConditionEndpointService = eventConditionEndpointService;
    }
    getEventConditions(pageNumber, pageSize) {
        return pageNumber && pageSize ? this.eventConditionEndpointService.getAllPaged(pageNumber, pageSize) :
            this.eventConditionEndpointService.getAll();
    }
    getEventCondition(eventConditionId) {
        return this.eventConditionEndpointService.get(eventConditionId);
    }
    addEventCondition(eventCondition) {
        return this.eventConditionEndpointService.post(eventCondition);
    }
    updateEventCondition(eventCondition) {
        return this.eventConditionEndpointService.put(eventCondition.eventConditionId, eventCondition);
    }
    patchEventCondition(eventConditionId, eventCondition) {
        return this.eventConditionEndpointService.patch(eventConditionId, eventCondition);
    }
    deleteEventCondition(eventConditionId) {
        return this.eventConditionEndpointService.delete(eventConditionId);
    }
};
EventConditionService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["EventConditionEndpointService"] }
];
EventConditionService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], EventConditionService);



/***/ }),

/***/ "./src/app/services/event.service.ts":
/*!*******************************************!*\
  !*** ./src/app/services/event.service.ts ***!
  \*******************************************/
/*! exports provided: EventService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventService", function() { return EventService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");




let EventService = class EventService {
    constructor(eventEndpointService, eventConditionEndpointService, actionDeviceEndpointService, dataPointEndpointService, authEndpointService) {
        this.eventEndpointService = eventEndpointService;
        this.eventConditionEndpointService = eventConditionEndpointService;
        this.actionDeviceEndpointService = actionDeviceEndpointService;
        this.dataPointEndpointService = dataPointEndpointService;
        this.authEndpointService = authEndpointService;
    }
    getEditorData() {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["forkJoin"])(this.getActionDevices(), this.getDataPoints());
    }
    getOperatorSymbol(operator) {
        var symbol;
        switch (operator) {
            case _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["Operators"].Equal:
                {
                    symbol = "==";
                    break;
                }
            case _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["Operators"].GreaterThan:
                {
                    symbol = ">";
                    break;
                }
            case _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["Operators"].LessThan:
                {
                    symbol = "<";
                    break;
                }
            case _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["Operators"].NotEqual:
                {
                    symbol = "!=";
                    break;
                }
        }
        return symbol;
    }
    userHasPermission(permissionValue) {
        return this.authEndpointService.userPermissions.some(p => p == permissionValue);
    }
    getActionDevices(getDisabled, pageNumber, pageSize) {
        if (getDisabled == null)
            getDisabled = false;
        return pageNumber && pageSize ? this.actionDeviceEndpointService.getAllPaged(pageNumber, pageSize, getDisabled) :
            this.actionDeviceEndpointService.getAll(getDisabled);
    }
    getActionDevice(actionDeviceId) {
        return this.actionDeviceEndpointService.get(actionDeviceId);
    }
    getDataPoints(getDisabled, pageNumber, pageSize) {
        if (getDisabled == null)
            getDisabled = false;
        return pageNumber && pageSize ? this.dataPointEndpointService.getAllPaged(pageNumber, pageSize, getDisabled) :
            this.dataPointEndpointService.getAll(getDisabled);
    }
    getDataPoint(dataPointId) {
        return this.dataPointEndpointService.get(dataPointId);
    }
    getEventConditionsByEventId(eventId, pageNumber, pageSize) {
        return pageNumber && pageSize ? this.eventConditionEndpointService.getByEventIdPaged(eventId, pageNumber, pageSize) :
            this.eventConditionEndpointService.getByEventId(eventId);
    }
    addEventCondition(eventCondition) {
        return this.eventConditionEndpointService.post(eventCondition);
    }
    updateEventCondition(eventCondition) {
        return this.eventConditionEndpointService.put(eventCondition.eventConditionId, eventCondition);
    }
    patchEventCondition(eventConditionId, eventCondition) {
        return this.eventConditionEndpointService.patch(eventConditionId, eventCondition);
    }
    deleteEventCondition(eventConditionId) {
        return this.eventConditionEndpointService.delete(eventConditionId);
    }
    getEvents(getDisabled, pageNumber, pageSize) {
        if (getDisabled == null)
            getDisabled = false;
        return pageNumber && pageSize ? this.eventEndpointService.getAllPaged(pageNumber, pageSize, getDisabled) :
            this.eventEndpointService.getAll(getDisabled);
    }
    getEvent(eventId) {
        return this.eventEndpointService.get(eventId);
    }
    addEvent(event) {
        return this.eventEndpointService.post(event);
    }
    updateEvent(event) {
        return this.eventEndpointService.put(event.eventId, event);
    }
    patchEvent(eventId, event) {
        return this.eventEndpointService.patch(eventId, event);
    }
    deleteEvent(eventId) {
        return this.eventEndpointService.delete(eventId);
    }
};
EventService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["EventEndpointService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["EventConditionEndpointService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ActionDeviceEndpointService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["DataPointEndpointService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["AuthEndpointService"] }
];
EventService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], EventService);



/***/ }),

/***/ "./src/app/services/extended-log.service.ts":
/*!**************************************************!*\
  !*** ./src/app/services/extended-log.service.ts ***!
  \**************************************************/
/*! exports provided: ExtendedLogService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedLogService", function() { return ExtendedLogService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");



let ExtendedLogService = class ExtendedLogService {
    constructor(extendedLogEndpointService) {
        this.extendedLogEndpointService = extendedLogEndpointService;
    }
    addExtendedLog(extendedLog) {
        return this.extendedLogEndpointService.post(extendedLog);
    }
    getExtendedLogs(pageNumber, pageSize) {
        return pageNumber && pageSize ? this.extendedLogEndpointService.getAllPaged(pageNumber, pageSize) :
            this.extendedLogEndpointService.getAll();
    }
    getExtendedLogsByLevel(level, pageNumber, pageSize) {
        return pageNumber && pageSize ? this.extendedLogEndpointService.getByLevelPaged(level, pageNumber, pageSize) :
            this.extendedLogEndpointService.getByLevel(level);
    }
    clearExtendedLogs() {
        return this.extendedLogEndpointService.deleteAll();
    }
};
ExtendedLogService.ctorParameters = () => [
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_2__["ExtendedLogEndpointService"] }
];
ExtendedLogService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], ExtendedLogService);



/***/ }),

/***/ "./src/app/services/local-storage.service.ts":
/*!***************************************************!*\
  !*** ./src/app/services/local-storage.service.ts ***!
  \***************************************************/
/*! exports provided: LocalStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageService", function() { return LocalStorageService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _helpers_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/utilities */ "./src/app/helpers/utilities.ts");
/* harmony import */ var _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/db-keys */ "./src/app/helpers/db-keys.ts");
var LocalStorageService_1;





let LocalStorageService = LocalStorageService_1 = 
/**
* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.
*/
class LocalStorageService {
    constructor() {
        this.syncKeys = [];
        this.initEvent = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.reservedKeys = [
            'sync_keys',
            'addToSyncKeys',
            'removeFromSyncKeys',
            'getSessionStorage',
            'setSessionStorage',
            'addToSessionStorage',
            'removeFromSessionStorage',
            'clearAllSessionsStorage'
        ];
        this.sessionStorageTransferHandler = (event) => {
            if (!event.newValue) {
                return;
            }
            if (event.key == 'getSessionStorage') {
                if (sessionStorage.length) {
                    this.localStorageSetItem('setSessionStorage', sessionStorage);
                    localStorage.removeItem('setSessionStorage');
                }
            }
            else if (event.key == 'setSessionStorage') {
                if (!this.syncKeys.length) {
                    this.loadSyncKeys();
                }
                const data = JSON.parse(event.newValue);
                // console.info("Set => Key: Transfer setSessionStorage" + ",  data: " + JSON.stringify(data));
                for (const key in data) {
                    if (this.syncKeysContains(key)) {
                        this.sessionStorageSetItem(key, JSON.parse(data[key]));
                    }
                }
                this.onInit();
            }
            else if (event.key == 'addToSessionStorage') {
                const data = JSON.parse(event.newValue);
                // console.warn("Set => Key: Transfer addToSessionStorage" + ",  data: " + JSON.stringify(data));
                this.addToSessionStorageHelper(data.data, data.key);
            }
            else if (event.key == 'removeFromSessionStorage') {
                this.removeFromSessionStorageHelper(event.newValue);
            }
            else if (event.key == 'clearAllSessionsStorage' && sessionStorage.length) {
                this.clearInstanceSessionStorage();
            }
            else if (event.key == 'addToSyncKeys') {
                this.addToSyncKeysHelper(event.newValue);
            }
            else if (event.key == 'removeFromSyncKeys') {
                this.removeFromSyncKeysHelper(event.newValue);
            }
        };
    }
    initialiseStorageSyncListener() {
        if (LocalStorageService_1.syncListenerInitialised == true) {
            return;
        }
        LocalStorageService_1.syncListenerInitialised = true;
        window.addEventListener('storage', this.sessionStorageTransferHandler, false);
        this.syncSessionStorage();
    }
    deinitialiseStorageSyncListener() {
        window.removeEventListener('storage', this.sessionStorageTransferHandler, false);
        LocalStorageService_1.syncListenerInitialised = false;
    }
    clearAllStorage() {
        this.clearAllSessionsStorage();
        this.clearLocalStorage();
    }
    clearAllSessionsStorage() {
        this.clearInstanceSessionStorage();
        localStorage.removeItem(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].SYNC_KEYS);
        localStorage.setItem('clearAllSessionsStorage', '_dummy');
        localStorage.removeItem('clearAllSessionsStorage');
    }
    clearInstanceSessionStorage() {
        sessionStorage.clear();
        this.syncKeys = [];
    }
    clearLocalStorage() {
        localStorage.clear();
    }
    saveSessionData(data, key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        this.removeFromSyncKeys(key);
        localStorage.removeItem(key);
        this.sessionStorageSetItem(key, data);
    }
    saveSyncedSessionData(data, key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        localStorage.removeItem(key);
        this.addToSessionStorage(data, key);
    }
    savePermanentData(data, key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        this.removeFromSessionStorage(key);
        this.localStorageSetItem(key, data);
    }
    moveDataToSessionStorage(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        const data = this.getData(key);
        if (data == null) {
            return;
        }
        this.saveSessionData(data, key);
    }
    moveDataToSyncedSessionStorage(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        const data = this.getData(key);
        if (data == null) {
            return;
        }
        this.saveSyncedSessionData(data, key);
    }
    moveDataToPermanentStorage(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        const data = this.getData(key);
        if (data == null) {
            return;
        }
        this.savePermanentData(data, key);
    }
    exists(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        let data = sessionStorage.getItem(key);
        if (data == null) {
            data = localStorage.getItem(key);
        }
        return data != null;
    }
    getData(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        let data = this.sessionStorageGetItem(key);
        if (data == null) {
            data = this.localStorageGetItem(key);
        }
        return data;
    }
    getDataObject(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA, isDateType = false) {
        let data = this.getData(key);
        if (data != null) {
            if (isDateType) {
                data = new Date(data);
            }
            return data;
        }
        else {
            return null;
        }
    }
    deleteData(key = _helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].USER_DATA) {
        this.testForInvalidKeys(key);
        this.removeFromSessionStorage(key);
        localStorage.removeItem(key);
    }
    getInitEvent() {
        return this.initEvent.asObservable();
    }
    syncSessionStorage() {
        localStorage.setItem('getSessionStorage', '_dummy');
        localStorage.removeItem('getSessionStorage');
    }
    addToSessionStorage(data, key) {
        this.addToSessionStorageHelper(data, key);
        this.addToSyncKeysBackup(key);
        this.localStorageSetItem('addToSessionStorage', { key, data });
        localStorage.removeItem('addToSessionStorage');
    }
    addToSessionStorageHelper(data, key) {
        this.addToSyncKeysHelper(key);
        this.sessionStorageSetItem(key, data);
    }
    removeFromSessionStorage(keyToRemove) {
        this.removeFromSessionStorageHelper(keyToRemove);
        this.removeFromSyncKeysBackup(keyToRemove);
        localStorage.setItem('removeFromSessionStorage', keyToRemove);
        localStorage.removeItem('removeFromSessionStorage');
    }
    removeFromSessionStorageHelper(keyToRemove) {
        sessionStorage.removeItem(keyToRemove);
        this.removeFromSyncKeysHelper(keyToRemove);
    }
    testForInvalidKeys(key) {
        if (!key) {
            throw new Error('key cannot be empty');
        }
        if (this.reservedKeys.some(x => x == key)) {
            throw new Error(`The storage key "${key}" is reserved and cannot be used. Please use a different key`);
        }
    }
    syncKeysContains(key) {
        return this.syncKeys.some(x => x == key);
    }
    loadSyncKeys() {
        if (this.syncKeys.length) {
            return;
        }
        this.syncKeys = this.getSyncKeysFromStorage();
    }
    getSyncKeysFromStorage(defaultValue = []) {
        const data = this.localStorageGetItem(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].SYNC_KEYS);
        if (data == null) {
            return defaultValue;
        }
        else {
            return data;
        }
    }
    addToSyncKeys(key) {
        this.addToSyncKeysHelper(key);
        this.addToSyncKeysBackup(key);
        localStorage.setItem('addToSyncKeys', key);
        localStorage.removeItem('addToSyncKeys');
    }
    addToSyncKeysBackup(key) {
        const storedSyncKeys = this.getSyncKeysFromStorage();
        if (!storedSyncKeys.some(x => x == key)) {
            storedSyncKeys.push(key);
            this.localStorageSetItem(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].SYNC_KEYS, storedSyncKeys);
        }
    }
    removeFromSyncKeysBackup(key) {
        const storedSyncKeys = this.getSyncKeysFromStorage();
        const index = storedSyncKeys.indexOf(key);
        if (index > -1) {
            storedSyncKeys.splice(index, 1);
            this.localStorageSetItem(_helpers_db_keys__WEBPACK_IMPORTED_MODULE_4__["DbKeys"].SYNC_KEYS, storedSyncKeys);
        }
    }
    addToSyncKeysHelper(key) {
        if (!this.syncKeysContains(key)) {
            this.syncKeys.push(key);
        }
    }
    removeFromSyncKeys(key) {
        this.removeFromSyncKeysHelper(key);
        this.removeFromSyncKeysBackup(key);
        localStorage.setItem('removeFromSyncKeys', key);
        localStorage.removeItem('removeFromSyncKeys');
    }
    removeFromSyncKeysHelper(key) {
        const index = this.syncKeys.indexOf(key);
        if (index > -1) {
            this.syncKeys.splice(index, 1);
        }
    }
    localStorageSetItem(key, data) {
        localStorage.setItem(key, JSON.stringify(data));
    }
    sessionStorageSetItem(key, data) {
        sessionStorage.setItem(key, JSON.stringify(data));
    }
    localStorageGetItem(key) {
        return _helpers_utilities__WEBPACK_IMPORTED_MODULE_3__["Utilities"].JsonTryParse(localStorage.getItem(key));
    }
    sessionStorageGetItem(key) {
        return _helpers_utilities__WEBPACK_IMPORTED_MODULE_3__["Utilities"].JsonTryParse(sessionStorage.getItem(key));
    }
    onInit() {
        setTimeout(() => {
            this.initEvent.next();
            this.initEvent.complete();
        });
    }
};
LocalStorageService.syncListenerInitialised = false;
LocalStorageService = LocalStorageService_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    /**
    * Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.
    */
], LocalStorageService);



/***/ }),

/***/ "./src/app/services/notification-mock.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/services/notification-mock.service.ts ***!
  \*******************************************************/
/*! exports provided: NotificationMockService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationMockService", function() { return NotificationMockService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");




let NotificationMockService = class NotificationMockService {
    constructor() {
        this.demoNotifications = [
            {
                notificationId: 1,
                header: '20 New Products were added to your inventory by "administrator"',
                body: '20 new "BMW M6" were added to your stock by "administrator" on 5/28/2017 4:54:13 PM',
                isRead: true,
                isPinned: true,
                date: '2017-05-28T16:29:13.5877958'
            },
            {
                notificationId: 2,
                header: '1 Product running low',
                body: 'You are running low on "Nissan Patrol". 2 Items remaining',
                isRead: false,
                isPinned: false,
                date: '2017-05-28T19:54:42.4144502'
            },
            {
                notificationId: 3,
                header: 'Tomorrow is half day',
                body: 'Guys, tomorrow we close by midday. Please check in your sales before noon. Thanx. Alex.',
                isRead: false,
                isPinned: false,
                date: '2017-05-30T11:13:42.4144502'
            }
        ];
    }
    getNotificationEndpoint(notificationId) {
        const notification = this.demoNotifications.find(val => val.notificationId == notificationId);
        let response;
        if (notification) {
            response = this.createResponse(notification, 200);
        }
        else {
            response = this.createResponse(null, 404);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getNotificationsEndpoint(page, pageSize) {
        const notifications = this.demoNotifications;
        const response = this.createResponse(this.demoNotifications, 200);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getUnreadNotificationsEndpoint(userId) {
        const unreadNotifications = this.demoNotifications.filter(val => !val.isRead);
        const response = this.createResponse(unreadNotifications, 200);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getNewNotificationsEndpoint(lastNotificationDate) {
        const unreadNotifications = this.demoNotifications;
        const response = this.createResponse(unreadNotifications, 200);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getPinUnpinNotificationEndpoint(notificationId, isPinned) {
        const notification = this.demoNotifications.find(val => val.notificationId == notificationId);
        let response;
        if (notification) {
            response = this.createResponse(null, 204);
            if (isPinned == null) {
                isPinned = !notification.isPinned;
            }
            notification.isPinned = isPinned;
            notification.isRead = true;
        }
        else {
            response = this.createResponse(null, 404);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getReadUnreadNotificationEndpoint(notificationIds, isRead) {
        for (const notificationId of notificationIds) {
            const notification = this.demoNotifications.find(val => val.notificationId == notificationId);
            if (notification) {
                notification.isRead = isRead;
            }
        }
        const response = this.createResponse(null, 204);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    getDeleteNotificationEndpoint(notificationId) {
        const notification = this.demoNotifications.find(val => val.notificationId == notificationId);
        let response;
        if (notification) {
            this.demoNotifications = this.demoNotifications.filter(val => val.notificationId != notificationId);
            response = this.createResponse(notification, 200);
        }
        else {
            response = this.createResponse(null, 404);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(response.body);
    }
    createResponse(body, status) {
        return new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"]({ body, status });
    }
};
NotificationMockService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], NotificationMockService);



/***/ }),

/***/ "./src/app/services/notification.service.ts":
/*!**************************************************!*\
  !*** ./src/app/services/notification.service.ts ***!
  \**************************************************/
/*! exports provided: NotificationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationService", function() { return NotificationService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _endpoint_services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./endpoint.services */ "./src/app/services/endpoint.services.ts");
/* harmony import */ var _notification_mock_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notification-mock.service */ "./src/app/services/notification-mock.service.ts");






let NotificationService = class NotificationService {
    constructor(notificationMockService, authEndpointService) {
        this.notificationMockService = notificationMockService;
        this.authEndpointService = authEndpointService;
    }
    get currentUser() {
        return this.authEndpointService.currentUser;
    }
    get recentNotifications() {
        return this._recentNotifications;
    }
    set recentNotifications(notifications) {
        this._recentNotifications = notifications;
    }
    getNotification(notificationId) {
        return this.notificationMockService.getNotificationEndpoint(notificationId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["NotificationViewModel"].fromJS(response)));
    }
    getNotifications(page, pageSize) {
        return this.notificationMockService.getNotificationsEndpoint(page, pageSize).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => {
            return this.getNotificationsFromResponse(response);
        }));
    }
    getUnreadNotifications(userId) {
        return this.notificationMockService.getUnreadNotificationsEndpoint(userId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => this.getNotificationsFromResponse(response)));
    }
    getNewNotifications() {
        return this.notificationMockService.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => this.processNewNotificationsFromResponse(response)));
    }
    getNewNotificationsPeriodically() {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["interval"])(10000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(0), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["flatMap"])(() => {
            return this.notificationMockService.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => this.processNewNotificationsFromResponse(response)));
        }));
    }
    pinUnpinNotification(notificationOrNotificationId, isPinned) {
        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {
            return this.notificationMockService.getPinUnpinNotificationEndpoint(notificationOrNotificationId, isPinned);
        }
        else {
            return this.pinUnpinNotification(notificationOrNotificationId.notificationId);
        }
    }
    readUnreadNotification(notificationIds, isRead) {
        return this.notificationMockService.getReadUnreadNotificationEndpoint(notificationIds, isRead);
    }
    deleteNotification(notificationOrNotificationId) {
        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { // Todo: Test me if its check is valid
            return this.notificationMockService.getDeleteNotificationEndpoint(notificationOrNotificationId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(response => {
                this.recentNotifications = this.recentNotifications.filter(n => n.notificationId != notificationOrNotificationId);
                return _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["NotificationViewModel"].fromJS(response);
            }));
        }
        else {
            return this.deleteNotification(notificationOrNotificationId.notificationId);
        }
    }
    processNewNotificationsFromResponse(response) {
        const notifications = this.getNotificationsFromResponse(response);
        for (const n of notifications) {
            if (n.date > this.lastNotificationDate) {
                this.lastNotificationDate = n.date;
            }
        }
        return notifications;
    }
    getNotificationsFromResponse(response) {
        const notifications = [];
        for (const i in response) {
            notifications[i] = _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["NotificationViewModel"].fromJS(response[i]);
        }
        notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());
        notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);
        this.recentNotifications = notifications;
        return notifications;
    }
};
NotificationService.ctorParameters = () => [
    { type: _notification_mock_service__WEBPACK_IMPORTED_MODULE_5__["NotificationMockService"] },
    { type: _endpoint_services__WEBPACK_IMPORTED_MODULE_4__["AuthEndpointService"] }
];
NotificationService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], NotificationService);



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false,
    baseUrl: null,
    tokenUrl: null,
    loginUrl: '/login'
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! exports provided: getBaseUrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBaseUrl", function() { return getBaseUrl; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





function getBaseUrl() {
    return document.getElementsByTagName('base')[0].href;
}
const providers = [
    { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }
];
if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])(providers).bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Projects\Iot\GrowRoomEnvironment\Web\ClientApp\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map