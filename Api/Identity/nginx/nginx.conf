#user       www www;  ## Default: nobody
worker_processes  5;  ## Default: 1
#error_log  logs/error.log info;
#error_log syslog:server=graylog.service.em.docker:12302 info; ## [ debug | info | notice | warn | error | crit ]
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events { 
    worker_connections 4096;  ## Default: 1024
    use epoll; ### use [ kqueue | epoll | /dev/poll | select | poll ];
}

http {
    include    /etc/nginx/mimetypes.conf;
    include    /etc/nginx/proxy.conf;
    include    /etc/nginx/gzip.conf;
    
    # Basic settings
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts
    index index.html index.htm;

    log_format graylog2_json escape=json '{ "timestamp": "$time_iso8601", '
                                          '"remote_addr": "$remote_addr", '
                                          '"body_bytes_sent": $body_bytes_sent, '
                                          '"request_time": $request_time, '
                                          '"response_status": $status, '
                                          '"request": "$request", '
                                          '"request_method": "$request_method", '
                                          '"host": "$host",'
                                          '"upstream_cache_status": "$upstream_cache_status",'
                                          '"upstream_addr": "$upstream_addr",'
                                          '"http_x_forwarded_for": "$http_x_forwarded_for",'
                                          '"http_referrer": "$http_referer", '
                                          '"http_user_agent": "$http_user_agent" }';

    log_format main      '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$gzip_ratio"';

    log_format download  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';

    #access_log syslog:server=graylog.service.em.docker:12301 graylog2_json;
    #access_log   logs/access.log  main;
    
    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;

    output_buffers   1 32k;
    postpone_output  1460;

    sendfile         on;
    tcp_nopush       on;
    tcp_nodelay      on;

    keepalive_timeout  75 20;

    #lingering_time     30;
    #lingering_timeout  10;
    #reset_timedout_connection  on;

    # Consul
    upstream registry_web_servers {
        server em_service_registry:8500;
    }

    # Graylog
    upstream log_web_servers {
        server em_service_graylog:9000;
    }

     # EventManager.Identity.STS.Identity
    upstream identity_token_servers {
        server em_service_sts:50003;
    }

    # EventManager.Identity.Admin
    upstream identity_web_servers {
        server em_service_idweb:50001;
    }

    # EventManager.Identity.Admin.Api
    upstream identity_api_servers {
        server em_service_idapi:50002;
    }

    server { # Port 80 (http://www.em.host) redirect to SSL
        # Only support SSL so redirect
        listen 80;
        server_name em.host www.em.host api.em.host;
        return 301 https://$host$request_uri;
    }
    
    server { # Port 443 (https://www.em.host) reverse-proxy 
        # SSL Setup
        listen 443 ssl;
        server_name em.host www.em.host api.em.host;
        #access_log   logs/em.access.log  main;
        #access_log syslog:server=graylog.service.em.docker:12301 graylog2_json;

        include    /etc/nginx/ssl.conf;

        # Main website, 
        location / {
            root /etc/nginx/www/;
        }

        # Consul Web UI
        location /admin/registry/ {
            sub_filter_once   off;
            sub_filter_types  text/html application/javascript;
            sub_filter        '%22rootURL%22%3A%22%2Fui%2F%22' '%22rootURL%22%3A%22%2Fadmin%2Fregistry%2F%22';
            sub_filter        '/ui/' 'https://$host/admin/registry/';

            proxy_pass http://registry_web_servers/ui/;
        }

        # Consul Web API
        location /v1/ {
            proxy_pass http://registry_web_servers/v1/;
        }

        # Proxy to Graylog
        location /admin/logs/ {
            proxy_pass      http://log_web_servers/;
        }

        # Redirect from Consul root which proxies back to Consul
        # ^~
        #location /consul/ {
        #    proxy_pass      http://registry_web_servers/;
        #@}

        #location /ui/ {
        #    proxy_pass      http://registry_web_servers/ui;
        #}

        # location /ui/assets/ {
        #    proxy_pass      http://registry_web_servers/ui/assets;
        #}
  
        #location /ui/dc/ {
        #    proxy_pass      http://registry_web_servers/ui/dc;
        #}
        
      
        # Proxy to EventManager.Identity.Admin
        location /admin/identity/ {
            proxy_pass      http://identity_web_servers/;
        }

        location /admin/identity/account/ {
            proxy_pass      http://identity_web_servers/account/;
        }

        location /admin/identity/configuration/ {
            proxy_pass      http://identity_web_servers/configuration/;
        }

        location /admin/identity/grant/ {
            proxy_pass      http://identity_web_servers/grant/;
        }

        location /admin/identity/home/ {
            proxy_pass      http://identity_web_servers/home/;
        }

        location /admin/identity/identity/ {
            proxy_pass      http://identity_web_servers/identity/;
        }

        location /admin/identity/log/ {
            proxy_pass      http://identity_web_servers/log/;
        }

        # Proxy to EventManager.Identity.Admin.Api
        location /api/identity/apiresources/ {
            proxy_pass      http://identity_api_servers/api/apiresources/;
        }

        location /api/identity/apiscopes/ {
            proxy_pass      http://identity_api_servers/api/apiscopes/;
        }

        location /api/identity/clients/ {
            proxy_pass      http://identity_api_servers/api/clients/;
        }

        location /api/identity/identityresources/ {
            proxy_pass      http://identity_api_servers/api/identityresources/;
        }

        location /api/identity/persistedgrants/ {
            proxy_pass      http://identity_api_servers/api/persistedgrants/;
        }

        location /api/identity/roles/ {
            proxy_pass      http://identity_api_servers/api/roles/;
        }

        location /api/identity/users/ {
            proxy_pass      http://identity_api_servers/api/users/;
        }

        # Proxy to EventManager.Identity.Admin.Api Swagger
        location /api/docs/identity/ {
            proxy_pass      http://identity_api_servers/api/identity/swagger/;
        }

        # Proxy to EventManager.Identity.STS.Identity for OAuth2
        location /Account/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

        location /Consent/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

         location /Device/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

        location /Diagnostics/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

        location /Grants/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

        location /Home/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

        location /Manage/ {
            sub_filter_once off;
            sub_filter      '/dist/' 'https://$host/sts/dist/';
            proxy_pass      http://identity_token_servers;
        }

       location /connect/ {
            proxy_pass      http://identity_token_servers;
        }

        location /sts/ {
            proxy_pass      http://identity_token_servers/;
        }

        location /.well-known/ {
            proxy_redirect  https://$host:$server_port/.well-known  https://$host:$server_port/.well-known/openid-configuration;
        }

        location /.well-known/openid-configuration {
            proxy_pass      http://identity_token_servers;
        }

        # Error Page
        error_page  404  /404error.html;

        location = /404error.html {
            root  /etc/nginx/www;
        }

        # Examples
        location /old_stuff/ {
            rewrite   ^/old_stuff/(.*)$  /new_stuff/$1  permanent;
        }

        location /download/ {

            valid_referers  none  blocked  server_names  *.example.com;

            if ($invalid_referer) {
                #rewrite   ^/   http://www.example.com/;
                return   403;
            }

            #rewrite_log  on;

            # rewrite /download/*/mp3/*.any_ext to /download/*/mp3/*.mp3
            rewrite ^/(download/.*)/mp3/(.*)\..*$
                    /$1/mp3/$2.mp3                   break;

            root         /spool/www;
            #autoindex    on;
            #access_log   /var/log/nginx-download.access_log  download;
            #access_log syslog:server=graylog.service.em.docker:12301 graylog2_json;
        }

        location ~* \.(jpg|jpeg|gif)$ {
            root         /spool/www;
            #access_log   off;
            expires      30d;
        }
       
        #serve static files
        #location ~ ^/(images|javascript|js|css|flash|media|static)/  {
        #     root /etc/nginx/www/;
        #    expires 30d;
        #}

    }
}