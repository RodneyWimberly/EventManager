# 53/tcp:udp = em_service_disco_server:DNS
# 80/tcp = em_service_proxy:HTTP
# 443/tcp = em_service_proxy:HTTPS
# 1433/tcp = em_identity_db:MSSql
# 1514/tcp:udp = em_logs_web:Syslog
# *5555/tcp:udp = em_logs_web:RawPlainText
# 8300/tcp = em_service_disco_server:Replication
# *8301/tcp:udp = em_service_disco_server:Gossip LAN
# 8302/tcp:udp = em_service_disco_server:Gossip WAN
# 8500/tcp = em_service_disco_server:HTTP Web UI and REST API
# *8501/tcp = em_service_disco_server:HTTPS Web UI and REST API
# 8502/tcp = em_service_disco_server:gRPC
# 9000/tcp = em_logs_web:HTTP Web UI and REST API
# 12201/tcp:udp = em_logs_web:GELF

version: '3'
services:
  em_service_proxy:
    cgroup_parent: em-service
    container_name: 'em-service-proxy'
    depends_on: 
       - em_service_disco_server
    image: jwilder/nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './shared/nginx/vhost.d:/etc/nginx/vhost.d'
      - './shared/nginx/certs:/etc/nginx/certs:ro'
      - './shared/nginx/config.d:/etc/nginx/config.d'
    networks:
      service_disco_network:
        aliases:
          - nginx
          - proxy.em.local
          - api.em.local
          - events.em.local
          - sts.em.local
          - identity.em.local
          - logs.em.local
          - disco.em.local
      service_proxy_network:
        aliases:
          - nginx
          - eventmanager.phc.org
      external_network: {}
      backbone_network:
        aliases:
          - nginx
          - proxy.em.local
          - api.em.local
          - events.em.local
          - sts.em.local
          - identity.em.local
          - logs.em.local
          - em_service_disco_server
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal
    restart: always

  em_service_disco_server:
    cgroup_parent: em-service
    image: consul
    command: consul agent -config-dir=/consul/config -dns-port=53 -recursor=8.8.8.8
    ports:
      - '53:53'
      - '53:53/udp'
      - '8300:8300'
      - '8302:8302'
      - '8302:8302/udp'
      - '8500:8500'
      - '8502:8502'
    container_name: em-service-disco-server
    environment:
        - CONSUL_CACERT=/consul/config/consul-agent-ca.pem
        - CONSUL_CLIENT_CERT=/consul/config/dc-server-consul-0.pem
        - CONSUL_CLIENT_KEY=/consul/config/dc-server-consul-0-key.pem
    volumes:
      - /root/vault/consul:/consul
      - /root/vault:/vault
      - ./shared/consul/config:/consul/config
      #- ./shared/consul/config.d:/etc/consul.d
      #- ./shared/vault/config:/consul/config
      #- service_disco_volume:/opt/consul
      - service_disco_volume:/consul/data
    networks:
      service_disco_network:
        aliases:
          - consul
          - disco.em.local 
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_logs_agent: 
    cgroup_parent: em-logs
    image: 'sematext/logagent:latest' 
    container_name: em-logs-agent
    depends_on:
      - em_service_disco_server
      - em_service_proxy
      - em_logs_api
    environment: 
        # The index where the agent should log to (for Sematext Cloud users the logs token)
        - LOGS_TOKEN=177434fe-0862-43e4-a162-de767c346723 
        # Sematext Cloud region US or EU (default: US). The receiver URL will be set to EU/US default values. When using REGION, you don't need to set LOGS_RECEIVER_URL
        #- REGION=US 
        # The URL of your Elasticsearch Endpoint (defaults to Sematext Cloud US https://logsene-receiver.sematext.com).
        - LOGS_RECEIVER_URL=https://elasticsearch:9200
        # Semicolon-separated list of file globs
        #- LOG_GLOB=/mylogs//*.log;/var/log//*.log
        # Additional command line arguments for Logagent
        #- LOGAGENT_ARGS="-n httpd"
    cap_add: 
        - SYS_ADMIN  
    restart: always 
    volumes: 
        - '/var/run/docker.sock:/var/run/docker.sock' 
    networks:
     service_disco_network:
        aliases:
          - logagent
     log_api_network: 
        aliases:
          - logagent 
     backbone_network:
        aliases:
          - logagent 
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_logs_db:
    cgroup_parent: em-logs
    image: mongo:4.2
    depends_on: 
       - em_service_disco_server
    container_name: em-logs-db
    volumes:
      - logs_db_volume:/data/db
    networks:
      service_disco_network:
        aliases:
          - mongo
      log_db_network:
        aliases:
          - mongo
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_logs_api:
    cgroup_parent: em-logs
    container_name: 'em-logs-api'
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    depends_on: 
       - em_service_disco_server
       - em_logs_db
    environment:
      - http.host=elasticsearch
      - transport.host=elasticsearch
      - network.host=elasticsearch
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    volumes:
      - logs_api_volume:/usr/share/elasticsearch/data
    networks:
      service_disco_network:
        aliases:
          - elasticsearch
      log_api_network: 
        aliases:
          - elasticsearch
      log_db_network:
         aliases:
          - elasticsearch
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_logs_web:
    cgroup_parent: em-logs
    container_name: 'em-logs-web'
    image: graylog/graylog:4.0
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=eventmanagersecret
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://logs.em.local:9000/
    depends_on:
      - em_service_disco_server
      - em_service_proxy
      - em_logs_api
    ports:
      - 1514:1514
      - 1514:1514/udp
      #- 5555:5555
      #- 5555:5555/udp
      - 9000:9000
      - 12201:12201
      - 12201:12201/udp
    restart: always
    volumes:
      - logs_web_volume:/usr/share/graylog/data
    networks:
     service_disco_network:
        aliases:
          - graylog
     log_api_network: 
        aliases:
          - graylog 
     backbone_network:
        aliases:
          - graylog 
          - logs.em.local 
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_identity_db:
    cgroup_parent: em-identity
    container_name: 'em-identity-db'
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    depends_on:
      - em_service_disco_server
      - em_logs_web
    ports:
      - '1433:1433'
    environment:
      SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    volumes:
      - 'identity_db_volume:/var/opt/mssql'
    networks:
     service_disco_network:
        aliases:
          - mssql
     identity_db_network:
        aliases:
          - mssql
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_identity_tokenservice:
    cgroup_parent: em-identity
    image: '${DOCKER_REGISTRY-}em-identity-tokenservice'
    build:
      context: .
      dockerfile: src/EventManager.Identity.STS.Identity/Dockerfile.debug  
    container_name: em-identity-tokenservice
    environment:
      - VIRTUAL_HOST=sts.em.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://identity.em.local'
      - 'AdvancedConfiguration__PublicOrigin=https://sts.em.local'
      - 'AdvancedConfiguration__IssuerUri=https://sts.em.local'
      - 'CertificateConfiguration__UseTemporarySigningKeyForDevelopment=false'
      - 'CertificateConfiguration__UseSigningCertificatePfxFile=true'
      - 'CertificateConfiguration__SigningCertificatePfxFilePath=/https/https.pfx'
      - 'CertificateConfiguration__SigningCertificatePfxFilePassword=eventmanagersecret'
      - 'CertificateConfiguration__UseValidationCertificatePfxFile=true'
      - 'CertificateConfiguration__ValidationCertificatePfxFilePath=/https/https.pfx'
      - 'CertificateConfiguration__ValidationCertificatePfxFilePassword=eventmanagersecret'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eventmanagersecret
    depends_on:
      - em_identity_db
      - em_logs_web
      - em_service_disco_server
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
      - './shared/nginx/certs:/https:ro'
    networks:
     service_disco_network:
        aliases:
          - em-identity-tokenservice
          - sts.em.local
     identity_api_network:
        aliases:
          - em-identity-tokenservice
     backbone_network:
        aliases:
          - em-identity-tokenservice
          - sts.em.local
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_identity_api:
    cgroup_parent: em-identity
    image: '${DOCKER_REGISTRY-}em-identity-api'
    build:
      context: .
      dockerfile: src/EventManager.Identity.Admin.Api/Dockerfile.debug  
    container_name: em-identity-api
    environment:
      - VIRTUAL_HOST=id-api.em.local
      - AdminApiConfiguration__RequireHttpsMetadata=true
      - 'AdminApiConfiguration__ApiBaseUrl=https://id-api.em.local'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.em.local'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eventmanagersecret
    depends_on:
      - em_identity_db
      - em_logs_web
      - em_identity_tokenservice
      - em_service_proxy
      - em_service_disco_server
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
      - './shared/nginx/certs:/https:ro'
    networks:
     service_disco_network:
        aliases:
          - em-identity-api
          - id-api.em.local
     identity_api_network:
      aliases:
          - em-identity-api
          - id-api.em.local
     identity_db_network:
        aliases:
          - em-identity-api
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

  em_identity_web:
    cgroup_parent: em-identity
    image: '${DOCKER_REGISTRY-}em-identity-web'
    build:
      context: .
      dockerfile: src/EventManager.Identity.Admin/Dockerfile.debug
    container_name: em-identity-web
    environment:
      - VIRTUAL_HOST=identity.em.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://identity.em.local'
      - 'AdminConfiguration__IdentityAdminRedirectUri=https://identity.em.local/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.em.local'
      - 'AdminConfiguration__RequireHttpsMetadata=true'
      - 'IdentityServerData__Clients__0__ClientUri=https://identity.em.local'
      - 'IdentityServerData__Clients__0__RedirectUris__0=https://identity.em.local/signin-oidc'
      - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://identity.em.local/signin-oidc'
      - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://identity.em.local/signout-callback-oidc'
      - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://identity.em.local'
      - 'IdentityServerData__Clients__1__RedirectUris__0=https://id-api.em.local/swagger/oauth2-redirect.html'
      - 'Serilog__WriteTo__1__Args__connectionString=Server=mssql;Database=em-identity;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=eventmanagersecret
    depends_on:
      - em_logs_web
      - em_identity_tokenservice
      - em_identity_api
      - em_service_proxy
      - em_service_disco_server
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identitydata.json:/app/identitydata.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
      - './shared/nginx/certs:/https:ro'
    networks:
      backbone_network:
        aliases:
          - em-identity-web
          - identity.em.local 
      service_disco_network:
        aliases:
          - em-identity-web
          - identity.em.local 
      identity_api_network:
        aliases:
          - em-identity-web
      identity_db_network:
        aliases:
          - em-identity-web
    dns:
      - em_service_disco_server
      - 8.8.8.8
      - 8.8.4.4
      - host.docker.internal

volumes:
  service_disco_volume:
    driver: local
  identity_db_volume:
    driver: local
  logs_db_volume:
    driver: local
  logs_api_volume:
    driver: local
  logs_web_volume:
    driver: local
networks:
  external_network:
    driver: bridge
  backbone_network:
    driver: bridge
    external: false
  log_db_network:
    driver: bridge
    external: false
  log_api_network:
    driver: bridge
    external: false
  identity_db_network:
    driver: bridge
    external: false
  identity_api_network:
    driver: bridge
    external: false
  service_proxy_network:
    driver: bridge
    external: false
  service_disco_network:
    driver: bridge
    external: false